(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    250026,       5105]
NotebookOptionsPosition[    245929,       4974]
NotebookOutlinePosition[    246286,       4990]
CellTagsIndexPosition[    246243,       4987]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Simulation on MWDC ray - tracking", "Title",
 CellChangeTimes->{{3.551162486245984*^9, 3.5511625061351213`*^9}}],

Cell["\<\
assume there are 6 planes XX' UU' YY'
each cells with size 1 cm X 1 cm
a particle pass throught the MWDC and created signal
\tsignal constains : 
 \t1) # of wire hitted
 \t2) hitted wire ID
 \t3) the Leading edge of the signal
 by using the drift velocity, we can reconstruct the particle ray.
 the origin of the cooredinate is \
\>", "Text",
 CellChangeTimes->{{3.5511625162657013`*^9, 3.5511625632373877`*^9}, {
  3.551162725926693*^9, 3.551162793653567*^9}, {3.5511628535659933`*^9, 
  3.5511629091311717`*^9}, {3.5511630641180363`*^9, 3.5511631189121704`*^9}, {
  3.551163191615329*^9, 3.5511632456414194`*^9}, {3.5511633082680016`*^9, 
  3.5511633204766994`*^9}, {3.5511640808291893`*^9, 3.5511640841783805`*^9}}],

Cell[CellGroupData[{

Cell["Raw Signal Generation", "Section",
 CellChangeTimes->{{3.55116326314242*^9, 3.551163275253113*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"a", " ", 
    RowBox[{"paricle", "'"}], "s", " ", "travaling", " ", "path"}], " ", 
   "*)"}], "\[IndentingNewLine]", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"particle", " ", "start", " ", "position"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Pstart", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", " ", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"particle", " ", "end", " ", "position"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Pend", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", " ", "5"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"particle", " ", "ray"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Pray", "[", 
     RowBox[{"k_", ",", "z_"}], "]"}], ":=", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Pend", "[", 
          RowBox[{
           RowBox[{"k", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", 
           RowBox[{"k", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "]"}], "-", 
         RowBox[{"Pstart", "[", 
          RowBox[{
           RowBox[{"k", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"k", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ")"}], 
       FractionBox["z", "5"]}], "+", 
      RowBox[{"Pstart", "[", 
       RowBox[{
        RowBox[{"k", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"k", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Para", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"k", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "-", 
         RowBox[{"k", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "5"], ",", 
       RowBox[{"k", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"k", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "-", 
         RowBox[{"k", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "5"], ",", 
       RowBox[{"k", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "//", "N"}]}]}]}]], "Input",
 CellChangeTimes->{{3.5511632869467816`*^9, 3.5511632929951277`*^9}, {
  3.5511633777179737`*^9, 3.5511633798220935`*^9}, {3.55116353256183*^9, 
  3.5511635461936097`*^9}, {3.551163660258134*^9, 3.5511637198375416`*^9}, {
  3.551163765408148*^9, 3.551163910649455*^9}, {3.5511650770721707`*^9, 
  3.5511650830795145`*^9}, {3.551165170400509*^9, 3.551165171260558*^9}, {
  3.5511652050014877`*^9, 3.5511652079906588`*^9}, {3.5511653819056063`*^9, 
  3.551165388234968*^9}, {3.551165768560722*^9, 3.5511657707068443`*^9}, {
  3.5511660499558167`*^9, 3.5511660519869328`*^9}, {3.551236339486148*^9, 
  3.551236378708391*^9}, {3.5512366025021915`*^9, 3.551236602858212*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Pray", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "6"}], "}"}], ",", "z"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Para", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "1", ",", "6"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.551163865486872*^9, 3.551163870480158*^9}, {
   3.5511639161267686`*^9, 3.5511639463925*^9}, 3.5511644193835535`*^9, 
   3.551165393044244*^9, 3.551166044716517*^9, {3.551236385105757*^9, 
   3.551236386962863*^9}, {3.5512366105956545`*^9, 3.551236618026079*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", 
   RowBox[{"1.`", "\[VeryThinSpace]", "+", "z"}], ",", "z"}], "}"}]], "Output",
 CellChangeTimes->{{3.55116387104219*^9, 3.551163878758631*^9}, {
   3.5511639128255796`*^9, 3.551163946722519*^9}, 3.551164419804577*^9, 
   3.551165085699664*^9, 3.551165173112664*^9, 3.5511653934282656`*^9, {
   3.5511660452865496`*^9, 3.5511660534870186`*^9}, 3.5512363879049172`*^9, 
   3.5512366186661158`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.55116387104219*^9, 3.551163878758631*^9}, {
   3.5511639128255796`*^9, 3.551163946722519*^9}, 3.551164419804577*^9, 
   3.551165085699664*^9, 3.551165173112664*^9, 3.5511653934282656`*^9, {
   3.5511660452865496`*^9, 3.5511660534870186`*^9}, 3.5512363879049172`*^9, 
   3.5512366186711164`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rot45RH", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"45", " ", "\[Degree]"}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"45", " ", "\[Degree]"}], "]"}], ",", " ", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"45", " ", "\[Degree]"}], "]"}]}], ",", 
       RowBox[{"Cos", "[", 
        RowBox[{"45", " ", "\[Degree]"}], "]"}], ",", " ", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.551164657897196*^9, 3.5511647336365275`*^9}, {
  3.5511915610329666`*^9, 3.551191563904131*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rot45RH", ".", 
  RowBox[{"Pray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "6", ",", "6"}], "}"}], ",", "z"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.551164710376197*^9, 3.551164737284736*^9}, {
   3.551165406161994*^9, 3.551165425237085*^9}, 3.551165482520361*^9, {
   3.551236392410175*^9, 3.551236393861258*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"(", 
     RowBox[{"1.`", "\[VeryThinSpace]", "+", "z"}], ")"}]}], ",", "0", ",", 
   "z"}], "}"}]], "Output",
 CellChangeTimes->{{3.55116471357638*^9, 3.5511647377477627`*^9}, 
   3.551165088311814*^9, {3.551165406566017*^9, 3.5511654255981054`*^9}, 
   3.5511654829813876`*^9, 3.5511660582332897`*^9, 3.5511915700544825`*^9, {
   3.5512363907300787`*^9, 3.551236394666304*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Wire", "[", "k_", "]"}], ":=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "\[Equal]", "1"}], "||", 
       RowBox[{"i", "\[Equal]", "2"}]}], ",", " ", 
      RowBox[{"Round", "[", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Pray", "[", 
          RowBox[{"k", ",", 
           RowBox[{"i", "-", "1"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ")"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "\[Equal]", "3"}], " ", "||", " ", 
         RowBox[{"i", "\[Equal]", "4"}]}], ",", " ", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Rot45RH", ".", 
            RowBox[{"Pray", "[", 
             RowBox[{"k", ",", 
              RowBox[{"i", "-", "1"}]}], "]"}]}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Round", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Pray", "[", 
            RowBox[{"k", ",", 
             RowBox[{"i", "-", "1"}]}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ")"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Time", "[", "k_", "]"}], ":=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "\[Equal]", "1"}], "||", 
       RowBox[{"i", "\[Equal]", "2"}]}], ",", " ", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Pray", "[", 
          RowBox[{"k", ",", 
           RowBox[{"i", "-", "1"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"Pray", "[", 
           RowBox[{"k", ",", 
            RowBox[{"i", "-", "1"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "\[Equal]", "3"}], " ", "||", " ", 
         RowBox[{"i", "\[Equal]", "4"}]}], ",", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Rot45RH", ".", 
             RowBox[{"Pray", "[", 
              RowBox[{"k", ",", 
               RowBox[{"i", "-", "1"}]}], "]"}]}], ")"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", " ", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Rot45RH", ".", 
              RowBox[{"Pray", "[", 
               RowBox[{"k", ",", 
                RowBox[{"i", "-", "1"}]}], "]"}]}], ")"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Pray", "[", 
            RowBox[{"k", ",", 
             RowBox[{"i", "-", "1"}]}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", 
          RowBox[{"Round", "[", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Pray", "[", 
              RowBox[{"k", ",", 
               RowBox[{"i", "-", "1"}]}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Highlight", "[", 
   RowBox[{"wire_", ",", "plane_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"wire", "\[Equal]", 
     RowBox[{
      RowBox[{"Wire", "[", "k", "]"}], "[", 
      RowBox[{"[", "plane", "]"}], "]"}]}], ",", "0.5", ",", "0.1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MWDC", "[", 
   RowBox[{"k_", ",", "X1_", ",", "X2_", ",", "Y1_", ",", "Y2_"}], "]"}], ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.5", ",", "0.5", ",", 
               RowBox[{"i", "+", "0.5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1.5", ",", "0.5", ",", 
               RowBox[{"i", "+", "0.5"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "4", ",", "5"}], "}"}]}], "}"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.5", ",", "0.5", ",", 
               RowBox[{"i", "+", "0.5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.5", ",", "1.5", ",", 
               RowBox[{"i", "+", "0.5"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "4", ",", "5"}], "}"}]}], "}"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.5", ",", "0.5", ",", 
               RowBox[{"i", "+", "2.5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1.5", ",", "1.5", ",", 
               RowBox[{"i", "+", "2.5"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.5", ",", "0.5", ",", 
               RowBox[{"i", "+", "2.5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", 
               RowBox[{"i", "+", "2.5"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.5", ",", "0.5", ",", "0.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "0.5", ",", "7"}], "}"}]}], "}"}], "]"}]}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Pray", "[", 
             RowBox[{"k", ",", 
              RowBox[{"-", "1"}]}], "]"}], "+", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5", ",", "0.5"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"Pray", "[", 
             RowBox[{"k", ",", "6"}], "]"}], "+", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5", ",", "0.5"}], "}"}]}]}], "}"}], 
         "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Opacity", "[", 
           RowBox[{"Highlight", "[", 
            RowBox[{"i", ",", "1", ",", "k"}], "]"}], "]"}], ",", 
          RowBox[{"Cuboid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "Y1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", "Y2", ",", "1"}], "}"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "X1", ",", 
          RowBox[{"X2", "-", "1"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Opacity", "[", 
           RowBox[{"Highlight", "[", 
            RowBox[{"i", ",", "2", ",", "k"}], "]"}], "]"}], ",", 
          RowBox[{"Cuboid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "Y1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", "Y2", ",", "2"}], "}"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "X1", ",", 
          RowBox[{"X2", "-", "1"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Yellow", ",", 
          RowBox[{"Opacity", "[", 
           RowBox[{"Highlight", "[", 
            RowBox[{"i", ",", "3", ",", "k"}], "]"}], "]"}], ",", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Cuboid", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Y1", "-", "i"}], ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", 
                RowBox[{"Y2", "-", "i", "+", "1"}], ",", "3"}], "}"}]}], 
             "]"}], ",", 
            RowBox[{"45", "\[Degree]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}]}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"X1", "-", "1"}], ",", 
          RowBox[{"X2", "+", "1"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Yellow", ",", 
          RowBox[{"Opacity", "[", 
           RowBox[{"Highlight", "[", 
            RowBox[{"i", ",", "4", ",", "k"}], "]"}], "]"}], ",", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Cuboid", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Y1", "-", "i"}], ",", "3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", 
                RowBox[{"Y2", "-", "i", "+", "1"}], ",", "4"}], "}"}]}], 
             "]"}], ",", 
            RowBox[{"45", "\[Degree]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}]}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"X1", "-", "1"}], ",", 
          RowBox[{"X2", "+", "1"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Opacity", "[", 
           RowBox[{"Highlight", "[", 
            RowBox[{"i", ",", "5", ",", "k"}], "]"}], "]"}], ",", 
          RowBox[{"Cuboid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"X1", ",", "i", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"X2", ",", 
              RowBox[{"i", "+", "1"}], ",", "5"}], "}"}]}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "Y1", ",", 
          RowBox[{"Y2", "-", "1"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Opacity", "[", 
           RowBox[{"Highlight", "[", 
            RowBox[{"i", ",", "6", ",", "k"}], "]"}], "]"}], ",", 
          RowBox[{"Cuboid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"X1", ",", "i", ",", "5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"X2", ",", 
              RowBox[{"i", "+", "1"}], ",", "6"}], "}"}]}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "Y1", ",", 
          RowBox[{"Y2", "-", "1"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
      "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"X1", ",", "X2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Y1", ",", "Y2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "7"}], "}"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzEsowwEABvB/kmy0g+bCyOSRZrS8ltnBo6hli2RrZMtjbC1b2JQNNSnh
uDIkS7OD7DBhLAdJ2WVG5rUdlsQeYaUcsGLf//D1O3x9H7Nf0zmUQhBEXjLw
d9yQ3qOLNZocizRYIxJnwW49MxuOFrhyodn0VAaDqdQK2PJD48ETQWEzFDnb
WmHX4asA2m7nO6D/9EgKKQ1pGqiy2/TQE+JMwkh0wQAzhtlmqJPEVyCdN7VG
9pHQJpQUl1ph09+7HVLl28fk72PYC8/3xdekito7yJAaA+Quch+G3AFDFNav
yii9SQdflDlwRDmdDy15jhLIJ75YUHvg4ULJ96kcWq9uFLCawVfDvqCa9ELl
08LFPT9pkfdzDi4FEsswk+5Zh5de7wZUJahb8K9cSxqx6HdgXSK2C4W+jGeY
YFWSGntn2WNJ32RODvyY2GuHZ1ViITx2u/TQHX+Ygf9YUOs/
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MWDC", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.1", ",", "0", ",", "0.4", ",", "0.4"}], "}"}], ",", "0", ",", 
   "2", ",", "0", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.551189440237664*^9, 3.5511894546404877`*^9}, {
   3.551189487977395*^9, 3.551189489363474*^9}, {3.5511896836705875`*^9, 
   3.551189684680646*^9}, {3.5511898643729234`*^9, 3.5511898888473234`*^9}, {
   3.551189960285409*^9, 3.5511899624805346`*^9}, {3.551189999582657*^9, 
   3.5511900020237966`*^9}, {3.5511900358697324`*^9, 3.551190037769841*^9}, {
   3.5511902432745953`*^9, 3.551190257958435*^9}, 3.5511907540928125`*^9, {
   3.5511908260769296`*^9, 3.5511908405127554`*^9}, {3.5511909196472816`*^9, 
   3.551190943030619*^9}, {3.551192178884306*^9, 3.551192179778357*^9}, {
   3.5511922204766846`*^9, 3.551192235169525*^9}, 3.5511923840930433`*^9, {
   3.5511928826885614`*^9, 3.551192893725192*^9}, {3.55119297410679*^9, 
   3.551193021764516*^9}, {3.551193135091998*^9, 3.5511931832347517`*^9}, {
   3.5511932191748075`*^9, 3.5511932202908707`*^9}, {3.5512365029454975`*^9, 
   3.551236505478642*^9}}],

Cell[BoxData[
 Graphics3DBox[{{
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 0.5}, {1.5, 0.5, 0.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 1.5}, {1.5, 0.5, 1.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 4.5}, {1.5, 0.5, 4.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 5.5}, {1.5, 0.5, 5.5}}]}}, {
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 0.5}, {0.5, 1.5, 0.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 1.5}, {0.5, 1.5, 1.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 4.5}, {0.5, 1.5, 4.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 5.5}, {0.5, 1.5, 5.5}}]}}, {
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 2.5}, {1.5, 1.5, 2.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 3.5}, {1.5, 1.5, 3.5}}]}}, {
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 2.5}, {0, 1, 2.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 3.5}, {0, 1, 3.5}}]}}, 
   {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 0.5}, {0.5, 0.5, 7}}]}, 
   {RGBColor[1, 0, 0], 
    Arrow3DBox[{{0.54, 0.42, -0.5}, {0.9600000000000001, 0.98, 6.5}}]}, {
    {RGBColor[0, 1, 0], Opacity[0.5], CuboidBox[{0, 0, 0}, {1, 2, 1}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{1, 0, 0}, {2, 2, 1}]}}, {
    {RGBColor[0, 1, 0], Opacity[0.5], CuboidBox[{0, 0, 1}, {1, 2, 2}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{1, 0, 1}, {2, 2, 2}]}}, {
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{-1, 1, 2}, {0, 4, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.5], 
     GeometricTransformation3DBox[
      CuboidBox[{0, 0, 2}, {1, 3, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{1, -1, 2}, {2, 2, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{2, -2, 2}, {3, 1, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{3, -3, 2}, {4, 0, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}}, {
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{-1, 1, 3}, {0, 4, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.5], 
     GeometricTransformation3DBox[
      CuboidBox[{0, 0, 3}, {1, 3, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{1, -1, 3}, {2, 2, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{2, -2, 3}, {3, 1, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{3, -3, 3}, {4, 0, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}}, {
    {RGBColor[0, 0, 1], Opacity[0.5], CuboidBox[{0, 0, 4}, {2, 1, 5}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 1, 4}, {2, 2, 5}]}}, {
    {RGBColor[0, 0, 1], Opacity[0.5], CuboidBox[{0, 0, 5}, {2, 1, 6}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 1, 5}, {2, 2, 6}]}}},
  AutomaticImageSize->True,
  ImageSize->{217.90347318336293`, 187.76638082379878`},
  PlotRange->{{0, 2}, {0, 2}, {-1, 7}},
  ViewPoint->{0.7779050982658746, 0.7554245644006521, -3.2053388877920606`},
  ViewVertical->{
   3.655819415049997, -0.05783122546749492, -0.4055582536689725}]], "Output",
 CellChangeTimes->{{3.55118945520052*^9, 3.551189490448536*^9}, {
   3.551189548576861*^9, 3.5511895648447914`*^9}, {3.551189625546263*^9, 
   3.55118964978865*^9}, 3.5511896856667023`*^9, 3.5511897716026173`*^9, {
   3.5511898115469017`*^9, 3.5511898893513517`*^9}, {3.551189947873699*^9, 
   3.5511900384658813`*^9}, {3.5511900888937654`*^9, 3.551190144804963*^9}, 
   3.5511901799129715`*^9, {3.5511902296738176`*^9, 3.5511902752084217`*^9}, {
   3.5511903495126715`*^9, 3.5511904792570925`*^9}, 3.551190669590979*^9, {
   3.551190708102182*^9, 3.5511907548568563`*^9}, {3.551190826986982*^9, 
   3.551190862651022*^9}, {3.5511909228954673`*^9, 3.5511909443936973`*^9}, 
   3.55119114323207*^9, {3.551191186124523*^9, 3.5511911934019394`*^9}, 
   3.5511912546614437`*^9, 3.551191358915406*^9, {3.551191394381435*^9, 
   3.5511914976693425`*^9}, 3.55119157577381*^9, {3.5511918405329533`*^9, 
   3.5511918665264397`*^9}, {3.5511918981112466`*^9, 3.5511919096889086`*^9}, 
   3.5511919456239643`*^9, {3.551192100479821*^9, 3.551192236515602*^9}, {
   3.551192289355624*^9, 3.551192305048522*^9}, 3.5511923425146646`*^9, {
   3.5511923858331428`*^9, 3.5511924259704385`*^9}, 3.5511928954352903`*^9, {
   3.5511929763079157`*^9, 3.551193023128594*^9}, {3.5511931376381435`*^9, 
   3.551193184746838*^9}, 3.5511932215279417`*^9, {3.551236497332176*^9, 
   3.5512365070267305`*^9}, 3.551236730733526*^9, {3.55123706893687*^9, 
   3.5512371139134426`*^9}, 3.5520166322698016`*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy9vXlwVNmZ4Ht1t1yUklIbaANtSEiJJCS0ISS0IJAQCLGITSCxg1iLpdgL
YdVioKAKqCpXAarNdrlcLru9VnW7289tv35ud7enPeV5E296Xrtn4vWMw/36
OWZiemY6Yiai//je933nnKuTqSshUfQQcW5mXmXee77v963n3kw27D9/9PCp
/eePHdxf1Htu/5mjxw4+W9Rz+hzuspIMw/g1jh8XGfQc8KncnAL8Z1jw13/9
1yD/Gcd5axyjBxN+8IMfGDa88sorcOTIEX7EcUK85ZD2aXwfv9ek94mPOd5h
6Y/0cdorD793us/iPjqL2ufy+2x+n7b/mDjKLn5w9aPoc+V5ROQRaJ+aDI6j
4gjbJ8W09I8aap+umlQ5aXUoesXvGxUH2+x3MJLJ72CZcl70Pm0/v/WIOF7/
zAqOP16O92nLe3ZYHKd3Fmoq9D5ke88EYGPVLD6eMJli7xiO9+ygOFr7XDRe
rmmA3kuvJo94QByxJUFN4mDTqKnKh+HkEfeLIzbMwjrxb0a9z8Fc72D7xMGW
zkJ9y+WBNGMwAt6B9ooDxebOYYXPcYPecfeI45bPhUiH92Z5nPHxcXxLfX09
z4feMiwOWzydEv0Ou9o7rCU/9tOf/pSOzcc3KVxZULS1KOFUu8WpCmbBi/at
l+979OgR9Pf3Tx4b90VjUToBn8SBzm904j6KkYNvDvJn5anmzwLCeqlnTQTo
7Ozkw1V2V8LwxWE6TZjPYvPuzp93qjOJoCbiw2yprJWz8jsjCmayVDbUXq+l
c/LAwyXzBBwWvfZLtfokjCExi1S/WUwX0mY1C0ufhadpOqzaF+KtK2gcKOJp
aVPbKWYWmot59em2qk3J8JtTWM6JMPU96NPmZOlzws/S1lLz4hNtF5PjiCIz
YIKFGJMmkjghMkS/CaXR1oTBm4Nhn2lYPtPYpk9DqIJOTzFr3XT+5XfmrCln
pr9G66J8TtvnzFv1M9ue98mzr57u5AkOmO+dN1lzRWkIvucd1M6rLID+yQmI
tPMY2yyS5yLoBF83Bv38js/5tySe35SiKvz0qnnuDlI6rYNYut/iQafOaXPi
nFRs1e2hbu5zqpjlnAI+c9o01TKVdmy5T9kMvVoyF8etnqXjqnnVfqMWuq90
s33MMC+1T5EkrZXNxX+XzSmghHheRa8U8YiejqJxGxA8HITopajKfsZGMV9X
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
\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"k", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Para", "[", "k", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Wire", "[", "k", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Time", "[", "k", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MWDC", "[", 
  RowBox[{"k", ",", "0", ",", "3", ",", "0", ",", "3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5511935401481657`*^9, 3.5511935948142924`*^9}, {
  3.5511936324254436`*^9, 3.551193645835211*^9}, {3.5511936881776323`*^9, 
  3.5511937656080613`*^9}, {3.551193825846507*^9, 3.5511938360720916`*^9}, {
  3.551193868096923*^9, 3.551193922651044*^9}, {3.551194190274351*^9, 
  3.5511941917874374`*^9}, {3.5512365135231023`*^9, 3.551236518466385*^9}, {
  3.5512366304937925`*^9, 3.5512366323658996`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.2986471732854432`", ",", "1.1519877251987327`", ",", 
   "0.8546052105999911`", ",", "0.5243603981108738`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5511935754431844`*^9, {3.5511936361656575`*^9, 3.5511936422660065`*^9}, {
   3.5511937073517294`*^9, 3.551193716701264*^9}, {3.551193747137005*^9, 
   3.5511937664831114`*^9}, {3.5511938008780785`*^9, 3.551193804781302*^9}, 
   3.551193837154154*^9, {3.551193908844254*^9, 3.5511939234930916`*^9}, {
   3.551193997153305*^9, 3.551194008441951*^9}, {3.551194301859733*^9, 
   3.5511943128733635`*^9}, 3.5512365194694424`*^9, 3.5512366329399323`*^9, 
   3.551236733636692*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.11119160746290957`", ",", "0.2986471732854432`", ",", 
   RowBox[{"-", "0.12552546541757179`"}], ",", "1.1519877251987327`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.5511935754431844`*^9, {3.5511936361656575`*^9, 3.5511936422660065`*^9}, {
   3.5511937073517294`*^9, 3.551193716701264*^9}, {3.551193747137005*^9, 
   3.5511937664831114`*^9}, {3.5511938008780785`*^9, 3.551193804781302*^9}, 
   3.551193837154154*^9, {3.551193908844254*^9, 3.5511939234930916`*^9}, {
   3.551193997153305*^9, 3.551194008441951*^9}, {3.551194301859733*^9, 
   3.5511943128733635`*^9}, 3.5512365194694424`*^9, 3.5512366329399323`*^9, 
   3.551236733641692*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.5511935754431844`*^9, {3.5511936361656575`*^9, 3.5511936422660065`*^9}, {
   3.5511937073517294`*^9, 3.551193716701264*^9}, {3.551193747137005*^9, 
   3.5511937664831114`*^9}, {3.5511938008780785`*^9, 3.551193804781302*^9}, 
   3.551193837154154*^9, {3.551193908844254*^9, 3.5511939234930916`*^9}, {
   3.551193997153305*^9, 3.551194008441951*^9}, {3.551194301859733*^9, 
   3.5511943128733635`*^9}, 3.5512365194694424`*^9, 3.5512366329399323`*^9, 
   3.5512367336466923`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.2986471732854432`", ",", "0.4098387807483528`", ",", 
   "0.005482637423406933`", ",", "0.00465293073689943`", ",", 
   "0.3501141364715544`", ",", "0.47563960188912624`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5511935754431844`*^9, {3.5511936361656575`*^9, 3.5511936422660065`*^9}, {
   3.5511937073517294`*^9, 3.551193716701264*^9}, {3.551193747137005*^9, 
   3.5511937664831114`*^9}, {3.5511938008780785`*^9, 3.551193804781302*^9}, 
   3.551193837154154*^9, {3.551193908844254*^9, 3.5511939234930916`*^9}, {
   3.551193997153305*^9, 3.551194008441951*^9}, {3.551194301859733*^9, 
   3.5511943128733635`*^9}, 3.5512365194694424`*^9, 3.5512366329399323`*^9, 
   3.5512367336496925`*^9}],

Cell[BoxData[
 Graphics3DBox[{{
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 0.5}, {3.5, 0.5, 0.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 1.5}, {3.5, 0.5, 1.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 4.5}, {3.5, 0.5, 4.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 5.5}, {3.5, 0.5, 5.5}}]}}, {
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 0.5}, {0.5, 3.5, 0.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 1.5}, {0.5, 3.5, 1.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 4.5}, {0.5, 3.5, 4.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 5.5}, {0.5, 3.5, 5.5}}]}}, {
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 2.5}, {3.5, 3.5, 2.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 3.5}, {3.5, 3.5, 3.5}}]}}, {
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 2.5}, {0, 1, 2.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 3.5}, {0, 1, 3.5}}]}}, 
   {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 0.5}, {0.5, 0.5, 7}}]}, 
   {RGBColor[1, 0, 0], 
    Arrow3DBox[{{0.6874555658225336, 1.7775131906163044`, -0.5}, {
     1.4657968180629006`, 0.898834932693302, 6.5}}]}, {
    {RGBColor[0, 1, 0], Opacity[0.5], CuboidBox[{0, 0, 0}, {1, 3, 1}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{1, 0, 0}, {2, 3, 1}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{2, 0, 0}, {3, 3, 1}]}}, {
    {RGBColor[0, 1, 0], Opacity[0.5], CuboidBox[{0, 0, 1}, {1, 3, 2}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{1, 0, 1}, {2, 3, 2}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{2, 0, 1}, {3, 3, 2}]}}, {
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{-1, 1, 2}, {0, 5, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{0, 0, 2}, {1, 4, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.5], 
     GeometricTransformation3DBox[
      CuboidBox[{1, -1, 2}, {2, 3, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{2, -2, 2}, {3, 2, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{3, -3, 2}, {4, 1, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{4, -4, 2}, {5, 0, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}}, {
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{-1, 1, 3}, {0, 5, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{0, 0, 3}, {1, 4, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.5], 
     GeometricTransformation3DBox[
      CuboidBox[{1, -1, 3}, {2, 3, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{2, -2, 3}, {3, 2, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{3, -3, 3}, {4, 1, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{4, -4, 3}, {5, 0, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}}, {
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 0, 4}, {3, 1, 5}]}, 
    {RGBColor[0, 0, 1], Opacity[0.5], CuboidBox[{0, 1, 4}, {3, 2, 5}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 2, 4}, {3, 3, 5}]}}, {
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 0, 5}, {3, 1, 6}]}, 
    {RGBColor[0, 0, 1], Opacity[0.5], CuboidBox[{0, 1, 5}, {3, 2, 6}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 2, 5}, {3, 3, 6}]}}},
  ImageSize->{584.3456593555659, 310.},
  PlotRange->{{0, 3}, {0, 3}, {-1, 7}},
  ViewPoint->{-1.542415979953386, 0.9230239765777944, -2.86687629371184},
  ViewVertical->{-0.16129362411960624`, 
   2.4710849951714415`, -0.3710102302563623}]], "Output",
 CellChangeTimes->{
  3.5511935754431844`*^9, {3.5511936361656575`*^9, 3.5511936422660065`*^9}, {
   3.5511937073517294`*^9, 3.551193716701264*^9}, {3.551193747137005*^9, 
   3.5511937664831114`*^9}, {3.5511938008780785`*^9, 3.551193804781302*^9}, 
   3.551193837154154*^9, {3.551193908844254*^9, 3.5511939234930916`*^9}, {
   3.551193997153305*^9, 3.551194008441951*^9}, {3.551194301859733*^9, 
   3.5511943128733635`*^9}, 3.5512365194694424`*^9, 3.5512366329399323`*^9, 
   3.55123673412572*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reconstruction", "Section",
 CellChangeTimes->{{3.551166208152865*^9, 3.551166217259386*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "assume", " ", "the", " ", "ray", " ", "take", " ", "the", " ", "form"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Ray", "[", 
    RowBox[{"x0_", ",", "y0_", ",", "z_", ",", "A_", ",", "B_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x0", "+", 
      RowBox[{"z", " ", "A"}]}], ",", 
     RowBox[{"y0", "+", " ", 
      RowBox[{"z", " ", "B"}]}], ",", "z"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.5511665171695395`*^9, 3.5511665174935584`*^9}, {
   3.5511671982114935`*^9, 3.5511672646692944`*^9}, 3.5512338321707373`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"define", " ", 
    SuperscriptBox["\[Chi]", "2"]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Chi]square", "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x1", "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", " ", "z1"}], "+", "x0"}], ")"}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x2", "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", " ", "z2"}], "+", "x0"}], ")"}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"u3", "-", 
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", "z3"}], "+", "x0"}], ")"}]}], "-", 
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b", " ", "z3"}], "+", "y0"}], ")"}]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"u4", "-", 
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", "z4"}], "+", "x0"}], ")"}]}], "-", 
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b", " ", "z4"}], "+", "y0"}], ")"}]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y5", "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", " ", "z5"}], "+", "y0"}], ")"}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y6", "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", " ", "z6"}], "+", "y0"}], ")"}]}], ")"}], "2"]}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.5512334485297947`*^9, 3.551233448903816*^9}, {
  3.55123352887739*^9, 3.5512336894805765`*^9}, {3.5512337226294723`*^9, 
  3.551233743301655*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"\[Chi]square", ",", "a"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "x0", ",", "b", ",", "y0"}], "}"}]}], "]"}], 
   "\[Equal]", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"\[Chi]square", ",", "x0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "x0", ",", "b", ",", "y0"}], "}"}]}], "]"}], 
   "\[Equal]", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"\[Chi]square", ",", "b"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "x0", ",", "b", ",", "y0"}], "}"}]}], "]"}], 
   "\[Equal]", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"\[Chi]square", ",", "y0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "x0", ",", "b", ",", "y0"}], "}"}]}], "]"}], 
   "\[Equal]", "0"}], "]"}]}], "Input",
 CellChangeTimes->{{3.551170925135661*^9, 3.5511709512781563`*^9}, {
  3.551233727798768*^9, 3.5512338217661424`*^9}, {3.551233963372242*^9, 
  3.5512339707456636`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y0", " ", 
    RowBox[{"(", 
     RowBox[{"z3", "+", "z4"}], ")"}]}], "+", 
   RowBox[{"x0", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "z1"}], "+", 
      RowBox[{"2", " ", "z2"}], "+", "z3", "+", "z4"}], ")"}]}], "+", 
   RowBox[{"b", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["z3", "2"], "+", 
      SuperscriptBox["z4", "2"]}], ")"}]}], "+", 
   RowBox[{"a", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["z1", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["z2", "2"]}], "+", 
      SuperscriptBox["z3", "2"], "+", 
      SuperscriptBox["z4", "2"]}], ")"}]}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"2", " ", "x1", " ", "z1"}], "+", 
   RowBox[{"2", " ", "x2", " ", "z2"}], "+", 
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"u3", " ", "z3"}], "+", 
      RowBox[{"u4", " ", "z4"}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{{3.551170941691608*^9, 3.551170951709181*^9}, {
  3.551233731311969*^9, 3.5512338224171796`*^9}, {3.5512339680335083`*^9, 
  3.5512339716807175`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"6", " ", "x0"}], "+", 
   RowBox[{"2", " ", "y0"}], "+", 
   RowBox[{"b", " ", 
    RowBox[{"(", 
     RowBox[{"z3", "+", "z4"}], ")"}]}], "+", 
   RowBox[{"a", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "z1"}], "+", 
      RowBox[{"2", " ", "z2"}], "+", "z3", "+", "z4"}], ")"}]}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    SqrtBox["2"], " ", "u3"}], "+", 
   RowBox[{
    SqrtBox["2"], " ", "u4"}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"x1", "+", "x2"}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{{3.551170941691608*^9, 3.551170951709181*^9}, {
  3.551233731311969*^9, 3.5512338224171796`*^9}, {3.5512339680335083`*^9, 
  3.5512339716857176`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x0", " ", 
    RowBox[{"(", 
     RowBox[{"z3", "+", "z4"}], ")"}]}], "+", 
   RowBox[{"a", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["z3", "2"], "+", 
      SuperscriptBox["z4", "2"]}], ")"}]}], "+", 
   RowBox[{"y0", " ", 
    RowBox[{"(", 
     RowBox[{"z3", "+", "z4", "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"z5", "+", "z6"}], ")"}]}]}], ")"}]}], "+", 
   RowBox[{"b", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["z3", "2"], "+", 
      SuperscriptBox["z4", "2"], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["z5", "2"], "+", 
         SuperscriptBox["z6", "2"]}], ")"}]}]}], ")"}]}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    SqrtBox["2"], " ", "u3", " ", "z3"}], "+", 
   RowBox[{
    SqrtBox["2"], " ", "u4", " ", "z4"}], "+", 
   RowBox[{"2", " ", "y5", " ", "z5"}], "+", 
   RowBox[{"2", " ", "y6", " ", "z6"}]}]}]], "Output",
 CellChangeTimes->{{3.551170941691608*^9, 3.551170951709181*^9}, {
  3.551233731311969*^9, 3.5512338224171796`*^9}, {3.5512339680335083`*^9, 
  3.551233971688718*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", "x0"}], "+", 
   RowBox[{"6", " ", "y0"}], "+", 
   RowBox[{"a", " ", 
    RowBox[{"(", 
     RowBox[{"z3", "+", "z4"}], ")"}]}], "+", 
   RowBox[{"b", " ", 
    RowBox[{"(", 
     RowBox[{"z3", "+", "z4", "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"z5", "+", "z6"}], ")"}]}]}], ")"}]}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    SqrtBox["2"], " ", "u3"}], "+", 
   RowBox[{
    SqrtBox["2"], " ", "u4"}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"y5", "+", "y6"}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{{3.551170941691608*^9, 3.551170951709181*^9}, {
  3.551233731311969*^9, 3.5512338224171796`*^9}, {3.5512339680335083`*^9, 
  3.551233971717719*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Residual", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Residual", "[", 
     RowBox[{
     "x1_", ",", "x2_", ",", "u3_", ",", "u4_", ",", "y5_", ",", "y6_", ",", 
      "z1_", ",", "z2_", ",", "z3_", ",", "z4_", ",", "z5_", ",", "z6_", ",", 
      "h_"}], "]"}], ":=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x1", "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"h", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "z1"}], "+", 
          RowBox[{"h", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x2", "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"h", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "z2"}], "+", 
          RowBox[{"h", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"u3", "-", 
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"h", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "z3"}], "+", 
           RowBox[{"h", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "-", 
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"h", "[", 
             RowBox[{"[", "3", "]"}], "]"}], " ", "z3"}], "+", 
           RowBox[{"h", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"u4", "-", 
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"h", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "z4"}], "+", 
           RowBox[{"h", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "-", 
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"h", "[", 
             RowBox[{"[", "3", "]"}], "]"}], " ", "z4"}], "+", 
           RowBox[{"h", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y5", "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"h", "[", 
            RowBox[{"[", "3", "]"}], "]"}], " ", "z5"}], "+", 
          RowBox[{"h", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y6", "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"h", "[", 
            RowBox[{"[", "3", "]"}], "]"}], " ", "z6"}], "+", 
          RowBox[{"h", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], ")"}], "2"]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{
     "z1_", ",", "z2_", ",", "z3_", ",", "z4_", ",", "z5_", ",", "z6_"}], 
     "]"}], ":=", 
    RowBox[{"Inverse", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox["z1", "2"]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["z2", "2"]}], "+", 
           SuperscriptBox["z3", "2"], "+", 
           SuperscriptBox["z4", "2"]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "z1"}], "+", 
           RowBox[{"2", " ", "z2"}], "+", "z3", "+", "z4"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["z3", "2"], "+", 
           SuperscriptBox["z4", "2"]}], ")"}], ",", " ", 
         RowBox[{"(", 
          RowBox[{"z3", "+", "z4"}], ")"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "z1"}], "+", 
           RowBox[{"2", " ", "z2"}], "+", "z3", "+", "z4"}], ")"}], ",", "6", 
         ",", 
         RowBox[{"(", 
          RowBox[{"z3", "+", "z4"}], ")"}], ",", "2"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["z3", "2"], "+", 
           SuperscriptBox["z4", "2"]}], ")"}], ",", " ", 
         RowBox[{"(", 
          RowBox[{"z3", "+", "z4"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["z3", "2"], "+", 
           SuperscriptBox["z4", "2"], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["z5", "2"], "+", 
              SuperscriptBox["z6", "2"]}], ")"}]}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{"z3", "+", "z4", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"z5", "+", "z6"}], ")"}]}]}], ")"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"z3", "+", "z4"}], ")"}], ",", "2", ",", 
         RowBox[{"(", 
          RowBox[{"z3", "+", "z4", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"z5", "+", "z6"}], ")"}]}]}], ")"}], ",", "6"}], "}"}]}],
       "}"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"B", "[", 
     RowBox[{
     "x1_", ",", "x2_", ",", "u3_", ",", "u4_", ",", "y5_", ",", "y6_", ",", 
      "z1_", ",", "z2_", ",", "z3_", ",", "z4_", ",", "z5_", ",", "z6_"}], 
     "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", "x1", " ", "z1"}], "+", 
       RowBox[{"2", " ", "x2", " ", "z2"}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"u3", " ", "z3"}], "+", 
          RowBox[{"u4", " ", "z4"}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{
        SqrtBox["2"], " ", "u3"}], "+", 
       RowBox[{
        SqrtBox["2"], " ", "u4"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"x1", "+", "x2"}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{
        SqrtBox["2"], " ", "u3", " ", "z3"}], "+", 
       RowBox[{
        SqrtBox["2"], " ", "u4", " ", "z4"}], "+", 
       RowBox[{"2", " ", "y5", " ", "z5"}], "+", 
       RowBox[{"2", " ", "y6", " ", "z6"}]}], ",", 
      RowBox[{
       RowBox[{
        SqrtBox["2"], " ", "u3"}], "+", 
       RowBox[{
        SqrtBox["2"], " ", "u4"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"y5", "+", "y6"}], ")"}]}]}]}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RayPara", "[", 
     RowBox[{
     "x1_", ",", "x2_", ",", "u3_", ",", "u4_", ",", "y5_", ",", "y6_", ",", 
      "z1_", ",", "z2_", ",", "z3_", ",", "z4_", ",", "z5_", ",", "z6_"}], 
     "]"}], ":=", 
    RowBox[{
     RowBox[{"Inverse", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox["z1", "2"]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["z2", "2"]}], "+", 
           SuperscriptBox["z3", "2"], "+", 
           SuperscriptBox["z4", "2"]}], ",", 
          RowBox[{
           RowBox[{"2", " ", "z1"}], "+", 
           RowBox[{"2", " ", "z2"}], "+", "z3", "+", "z4"}], ",", 
          RowBox[{
           SuperscriptBox["z3", "2"], "+", 
           SuperscriptBox["z4", "2"]}], ",", " ", 
          RowBox[{"z3", "+", "z4"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"2", " ", "z1"}], "+", 
           RowBox[{"2", " ", "z2"}], "+", "z3", "+", "z4"}], ",", "6", ",", 
          RowBox[{"z3", "+", "z4"}], ",", "2"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SuperscriptBox["z3", "2"], "+", 
           SuperscriptBox["z4", "2"]}], ",", " ", 
          RowBox[{"z3", "+", "z4"}], ",", 
          RowBox[{
           SuperscriptBox["z3", "2"], "+", 
           SuperscriptBox["z4", "2"], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["z5", "2"], "+", 
              SuperscriptBox["z6", "2"]}], ")"}]}]}], ",", 
          RowBox[{"z3", "+", "z4", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"z5", "+", "z6"}], ")"}]}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"z3", "+", "z4"}], ",", "2", ",", 
          RowBox[{"z3", "+", "z4", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"z5", "+", "z6"}], ")"}]}]}], ",", "6"}], "}"}]}], "}"}],
       "]"}], ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", "x1", " ", "z1"}], "+", 
        RowBox[{"2", " ", "x2", " ", "z2"}], "+", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"u3", " ", "z3"}], "+", 
           RowBox[{"u4", " ", "z4"}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         SqrtBox["2"], " ", "u3"}], "+", 
        RowBox[{
         SqrtBox["2"], " ", "u4"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"x1", "+", "x2"}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         SqrtBox["2"], " ", "u3", " ", "z3"}], "+", 
        RowBox[{
         SqrtBox["2"], " ", "u4", " ", "z4"}], "+", 
        RowBox[{"2", " ", "y5", " ", "z5"}], "+", 
        RowBox[{"2", " ", "y6", " ", "z6"}]}], ",", 
       RowBox[{
        RowBox[{
         SqrtBox["2"], " ", "u3"}], "+", 
        RowBox[{
         SqrtBox["2"], " ", "u4"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"y5", "+", "y6"}], ")"}]}]}]}], "}"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.5512346156605506`*^9, 3.551234656439883*^9}, {
  3.5512348345000677`*^9, 3.5512349046920824`*^9}, {3.5512367506416645`*^9, 
  3.5512367509396815`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"k", "=", 
  RowBox[{"(*", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "*)"}], 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "1", ",", "1"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Para", "[", "k", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Wire", "[", "k", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Time", "[", "k", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MWDC", "[", 
  RowBox[{"k", ",", "0", ",", "3", ",", "0", ",", "3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.55123448172589*^9, 3.5512345055232515`*^9}, {
  3.551234554841072*^9, 3.5512345552770967`*^9}, {3.5512349539509*^9, 
  3.5512349620713644`*^9}, {3.5512354466350794`*^9, 3.551235446860092*^9}, {
  3.5512357182746167`*^9, 3.551235721062776*^9}, {3.551235760972059*^9, 
  3.5512357745748367`*^9}, {3.551236544466872*^9, 3.5512365521293106`*^9}, {
  3.551236584060137*^9, 3.5512365895294495`*^9}, {3.551236770785817*^9, 
  3.551236792842078*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.551234341766885*^9, 3.551234506343298*^9, 3.5512345558151274`*^9, {
   3.5512349565010457`*^9, 3.5512349627064004`*^9}, 3.55123544751713*^9, 
   3.55123572305089*^9, 3.551235775081866*^9, 3.55123655352439*^9, 
   3.551236644028567*^9, {3.551236771238843*^9, 3.5512367933581076`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.2`", ",", "0.`", ",", "0.2`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.551234341766885*^9, 3.551234506343298*^9, 3.5512345558151274`*^9, {
   3.5512349565010457`*^9, 3.5512349627064004`*^9}, 3.55123544751713*^9, 
   3.55123572305089*^9, 3.551235775081866*^9, 3.55123655352439*^9, 
   3.551236644028567*^9, {3.551236771238843*^9, 3.5512367933651085`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.551234341766885*^9, 3.551234506343298*^9, 3.5512345558151274`*^9, {
   3.5512349565010457`*^9, 3.5512349627064004`*^9}, 3.55123544751713*^9, 
   3.55123572305089*^9, 3.551235775081866*^9, 3.55123655352439*^9, 
   3.551236644028567*^9, {3.551236771238843*^9, 3.551236793369108*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.2`", ",", "0.434314575050762`", ",", "0.1514718625761431`", 
   ",", "0.19999999999999996`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.551234341766885*^9, 3.551234506343298*^9, 3.5512345558151274`*^9, {
   3.5512349565010457`*^9, 3.5512349627064004`*^9}, 3.55123544751713*^9, 
   3.55123572305089*^9, 3.551235775081866*^9, 3.55123655352439*^9, 
   3.551236644028567*^9, {3.551236771238843*^9, 3.5512367933721085`*^9}}],

Cell[BoxData[
 Graphics3DBox[{{
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 0.5}, {3.5, 0.5, 0.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 1.5}, {3.5, 0.5, 1.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 4.5}, {3.5, 0.5, 4.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 5.5}, {3.5, 0.5, 5.5}}]}}, {
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 0.5}, {0.5, 3.5, 0.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 1.5}, {0.5, 3.5, 1.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 4.5}, {0.5, 3.5, 4.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 5.5}, {0.5, 3.5, 5.5}}]}}, {
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 2.5}, {3.5, 3.5, 2.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 3.5}, {3.5, 3.5, 3.5}}]}}, {
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 2.5}, {0, 1, 2.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 3.5}, {0, 1, 3.5}}]}}, 
   {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 0.5}, {0.5, 0.5, 7}}]}, 
   {RGBColor[1, 0, 0], Arrow3DBox[{{0.3, 0.3, -0.5}, {1.7, 1.7, 6.5}}]}, {
    {RGBColor[0, 1, 0], Opacity[0.5], CuboidBox[{0, 0, 0}, {1, 3, 1}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{1, 0, 0}, {2, 3, 1}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{2, 0, 0}, {3, 3, 1}]}}, {
    {RGBColor[0, 1, 0], Opacity[0.5], CuboidBox[{0, 0, 1}, {1, 3, 2}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{1, 0, 1}, {2, 3, 2}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{2, 0, 1}, {3, 3, 2}]}}, {
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{-1, 1, 2}, {0, 5, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{0, 0, 2}, {1, 4, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.5], 
     GeometricTransformation3DBox[
      CuboidBox[{1, -1, 2}, {2, 3, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{2, -2, 2}, {3, 2, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{3, -3, 2}, {4, 1, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{4, -4, 2}, {5, 0, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}}, {
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{-1, 1, 3}, {0, 5, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{0, 0, 3}, {1, 4, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.5], 
     GeometricTransformation3DBox[
      CuboidBox[{1, -1, 3}, {2, 3, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{2, -2, 3}, {3, 2, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{3, -3, 3}, {4, 1, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{4, -4, 3}, {5, 0, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}}, {
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 0, 4}, {3, 1, 5}]}, 
    {RGBColor[0, 0, 1], Opacity[0.5], CuboidBox[{0, 1, 4}, {3, 2, 5}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 2, 4}, {3, 3, 5}]}}, {
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 0, 5}, {3, 1, 6}]}, 
    {RGBColor[0, 0, 1], Opacity[0.5], CuboidBox[{0, 1, 5}, {3, 2, 6}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 2, 5}, {3, 3, 6}]}}},
  AutomaticImageSize->True,
  ImageSize->{406.5226672213409, 208.23747721554207`},
  PlotRange->{{0, 3}, {0, 3}, {-1, 7}},
  ViewPoint->{-2.5287011588565207`, 2.182252157733485, -0.541706534264856},
  ViewVertical->{0.221271324300343, 
   2.6495886892535956`, -0.07669633806000041}]], "Output",
 CellChangeTimes->{
  3.551234341766885*^9, 3.551234506343298*^9, 3.5512345558151274`*^9, {
   3.5512349565010457`*^9, 3.5512349627064004`*^9}, 3.55123544751713*^9, 
   3.55123572305089*^9, 3.551235775081866*^9, 3.55123655352439*^9, 
   3.551236644028567*^9, {3.551236771238843*^9, 3.551236793802133*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
JiUo8FF5Dm13iavCPfbs+pCCZ02ms7E+FTuaSbcRuXv8aG9UlEcerLkQptEy
hFCpMG22M0z7TLXyoVs7mG28++zqE5dl6Lsvf9HleajT5bmCch4oe0xwih0w
VA34vfmyTUyw4rdo4B3ADgzKWSfvdfuGOPmYenR67zKP9g2pvWJ/oX1QeHb3
G1igaE2imXVCHI4KSRpwcTZRAgup2Xj4QkbhZRIajEmivoIrVQafguckBZJE
aj5BgUx28kRcj0pqnkkdWDXAtGKodWmwxN0MA5foYddun3YlmpukBTJGnsSf
J5a3ELmhNszxrAy0Ra24RoxZR+NoUtt2FB29odo+R6ZRdpGqIS/qAK0hw+pT
W2+TVW55Y57uS9fvNf8WIK9f/X/+9r8yz5957HdV4+SWA/1q1/uWTKDFU7Wm
UO4yidEMTwOWJ1t6GzWn+5f4BtY7Lt0EVjn5PA3pxPpeGpyUprkTG601eNDP
AqwrpV2JLFK6Vu2t+6rfxpz6jjJwxtZljDhwUXVIzBr57rYGJcSWJAoyCTLZ
fd2jPKYub/l0ZXIxCqk8GhaHtGewh/aP7KeegR7K9+dp2tZp1L6xXTeJBskG
DRp5KWS0OB5rElDN8lKGSnt0HjqjkaRliFcZKVfqMZ9+ZByoVyvQIVKZH8+6
orsilWsCK661eXWRZmxqYteaRKsuGP3XVkxp9P9W5AnSr3zmcbrz5DCnZkyl
fYLPz3/610yz9tE+3Xb1ZbRzRR+9/mr8xyemPt139WE6e/kOOr1vuWHTh0ul
1TM6aevcperSMU3Tqq7JnCfyGSMsGhr0k42VuFi2TiNLidmkqr+iWzdY3ZpJ
1K1qJznrUPX+4VgFSbeGzyYgKY+Zu/9cNiVBsY6KpL5JwPHJbz1J+6/cTxNW
TqC1N66l3st7+ZyXn1lOvdf2Ut91fTTv+nk097q5vIw8texxZlFWqf+GfrsJ
5vi2Y38H5TflqX1vOy9jrl/fNWHfBGUVyMOSJKx3XdbF23Ud7NIWgde/LeI2
5gIU2lx+UG0JTlClFfzFCs7DM/q92ow8nvoRE0qb2DW/FMTk+bpjD+8S1IRH
qwK98XTTLKxH/dQ1HfG2hCpf07NZ/U854VjIl7pSzAT7v/XKy+id955V54Kp
T2+/5y566933cvJ5mqaNq4epa9JlNH/2XdTffRfP583Syx4v+TShdRUVcuUK
+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
8npzOsxJRsyNzmkQm0fN/wFRIryQ\
\>"]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AnsList", "[", 
   RowBox[{"w_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"h", "=", 
          RowBox[{
           RowBox[{"RayPara", "[", 
            RowBox[{
            "x1", ",", "x2", ",", "u3", ",", "u4", ",", "y5", ",", "y6", ",", 
             "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}], "//",
            "N"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"Residual", "[", 
           RowBox[{
           "x1", ",", "x2", ",", "u3", ",", "u4", ",", "y5", ",", "y6", ",", 
            "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "h"}],
            "]"}], "//", "N"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{"t", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"t", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x2", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"t", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", 
           RowBox[{"t", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"u3", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "-", 
           RowBox[{"t", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "+", 
           RowBox[{"t", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"u4", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "-", 
           RowBox[{"t", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "+", 
           RowBox[{"t", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y5", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "-", 
           RowBox[{"t", "[", 
            RowBox[{"[", "5", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "+", 
           RowBox[{"t", "[", 
            RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y6", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "-", 
           RowBox[{"t", "[", 
            RowBox[{"[", "6", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "+", 
           RowBox[{"t", "[", 
            RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}]}], "}"}]}], "]"}], ",", 
    "5"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ray", "[", 
   RowBox[{"w_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sort", "[", 
    RowBox[{
     RowBox[{"AnsList", "[", 
      RowBox[{"w", ",", "t"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "<", 
       RowBox[{"#2", "[", 
        RowBox[{"[", "5", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.5512343635921335`*^9, 3.5512344049224973`*^9}, {
   3.5512345128036675`*^9, 3.551234586687894*^9}, {3.551234793701734*^9, 
   3.5512348293837748`*^9}, {3.5512349230001297`*^9, 
   3.5512349712688904`*^9}, {3.5512353777551403`*^9, 3.551235467023246*^9}, {
   3.551235508854638*^9, 3.5512356092073784`*^9}, {3.5512356564900827`*^9, 
   3.551235682002542*^9}, {3.5512358161322136`*^9, 3.551235846695962*^9}, 
   3.5512358814829516`*^9, {3.55123615297648*^9, 3.5512361534585075`*^9}, {
   3.5512367787212706`*^9, 3.551236779021288*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ray", "[", 
  RowBox[{
   RowBox[{"Wire", "[", "k", "]"}], ",", 
   RowBox[{"Time", "[", "k", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5512361788669605`*^9, 3.551236185371333*^9}, {
  3.5512362553963385`*^9, 3.551236271200242*^9}, {3.551236563941986*^9, 
  3.551236571342409*^9}, {3.551236652389045*^9, 3.5512366540961423`*^9}, {
  3.5512368018795953`*^9, 3.551236802290619*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.1999999999999993`", ",", "0.`", ",", "0.20000000000000018`", ",", "0.`", 
   ",", "3.6792965657573754`*^-30"}], "}"}]], "Output",
 CellChangeTimes->{{3.5512361812180953`*^9, 3.551236187501455*^9}, 
   3.5512362744794292`*^9, 3.551236572688486*^9, 3.551236655184205*^9, {
   3.551236784063576*^9, 3.5512368028756523`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"k", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "6"}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Para", "[", "k", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Ray", "[", 
  RowBox[{
   RowBox[{"Wire", "[", "k", "]"}], ",", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"Time", "[", "k", "]"}], ",", "3"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Wire", "[", "k", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Time", "[", "k", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SetPrecision", "[", 
  RowBox[{
   RowBox[{"Time", "[", "k", "]"}], ",", "3"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MWDC", "[", 
  RowBox[{"k", ",", "0", ",", "7", ",", "0", ",", "7"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5512370149507823`*^9, 3.5512370257033973`*^9}, {
   3.551237159358042*^9, 3.5512372025355115`*^9}, {3.551237284787216*^9, 
   3.5512372887304416`*^9}, {3.5512374906149883`*^9, 3.551237512039214*^9}, 
   3.5512386828501806`*^9, {3.5512392031239386`*^9, 3.551239255406929*^9}, {
   3.5512393637561264`*^9, 3.5512393669963117`*^9}, {3.551239655030786*^9, 
   3.551239658381978*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.2452032726784399`", ",", "0.937574008140456`", ",", "4.983063332634323`",
    ",", "4.093928014400351`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5512370269254675`*^9, 3.5512371705296807`*^9, 3.5512372043956175`*^9, 
   3.5512372899515114`*^9, {3.551237329478772*^9, 3.5512373362101574`*^9}, {
   3.5512374984674377`*^9, 3.5512375133642898`*^9}, 3.5512386836832285`*^9, {
   3.551239209528305*^9, 3.551239256512992*^9}, {3.551239296474278*^9, 
   3.55123939004963*^9}, {3.5512396593900356`*^9, 3.551239737230488*^9}, 
   3.552945570667972*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9475720119911767`", ",", "0.2452032726784399`", ",", 
   "0.6312708012519791`", ",", "0.937574008140456`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5512370269254675`*^9, 3.5512371705296807`*^9, 3.5512372043956175`*^9, 
   3.5512372899515114`*^9, {3.551237329478772*^9, 3.5512373362101574`*^9}, {
   3.5512374984674377`*^9, 3.5512375133642898`*^9}, 3.5512386836832285`*^9, {
   3.551239209528305*^9, 3.551239256512992*^9}, {3.551239296474278*^9, 
   3.55123939004963*^9}, {3.5512396593900356`*^9, 3.551239737230488*^9}, 
   3.552945570672821*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9475720119911764`", ",", "0.24520327267843994`", ",", 
   "0.6312708012519791`", ",", "0.937574008140456`", ",", 
   "2.4960052079258577`*^-31"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5512370269254675`*^9, 3.5512371705296807`*^9, 3.5512372043956175`*^9, 
   3.5512372899515114`*^9, {3.551237329478772*^9, 3.5512373362101574`*^9}, {
   3.5512374984674377`*^9, 3.5512375133642898`*^9}, 3.5512386836832285`*^9, {
   3.551239209528305*^9, 3.551239256512992*^9}, {3.551239296474278*^9, 
   3.55123939004963*^9}, {3.5512396593900356`*^9, 3.551239737230488*^9}, 
   3.5529455709236727`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "3", ",", "4", ",", "3", ",", "4"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.5512370269254675`*^9, 3.5512371705296807`*^9, 3.5512372043956175`*^9, 
   3.5512372899515114`*^9, {3.551237329478772*^9, 3.5512373362101574`*^9}, {
   3.5512374984674377`*^9, 3.5512375133642898`*^9}, 3.5512386836832285`*^9, {
   3.551239209528305*^9, 3.551239256512992*^9}, {3.551239296474278*^9, 
   3.55123939004963*^9}, {3.5512396593900356`*^9, 3.551239737230488*^9}, 
   3.552945570925503*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.2452032726784399`", ",", "0.19277528466961646`", ",", 
   "0.0691707552441887`", ",", "0.18558121491606983`", ",", 
   "0.4626572131483724`", ",", "0.09392801440035115`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5512370269254675`*^9, 3.5512371705296807`*^9, 3.5512372043956175`*^9, 
   3.5512372899515114`*^9, {3.551237329478772*^9, 3.5512373362101574`*^9}, {
   3.5512374984674377`*^9, 3.5512375133642898`*^9}, 3.5512386836832285`*^9, {
   3.551239209528305*^9, 3.551239256512992*^9}, {3.551239296474278*^9, 
   3.55123939004963*^9}, {3.5512396593900356`*^9, 3.551239737230488*^9}, 
   3.55294557092727*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.24520327267843988749973505036905407906`3.", ",", 
   "0.19277528466961646458344148413743823767`3.", ",", 
   "0.06917075524418869747478311182931065559`3.", ",", 
   "0.18558121491606982544908532872796058655`3.", ",", 
   "0.46265721314837238153927501116413623095`3.", ",", 
   "0.09392801440035114524107484612613916397`3."}], "}"}]], "Output",
 CellChangeTimes->{
  3.5512370269254675`*^9, 3.5512371705296807`*^9, 3.5512372043956175`*^9, 
   3.5512372899515114`*^9, {3.551237329478772*^9, 3.5512373362101574`*^9}, {
   3.5512374984674377`*^9, 3.5512375133642898`*^9}, 3.5512386836832285`*^9, {
   3.551239209528305*^9, 3.551239256512992*^9}, {3.551239296474278*^9, 
   3.55123939004963*^9}, {3.5512396593900356`*^9, 3.551239737230488*^9}, 
   3.5529455709287357`*^9}],

Cell[BoxData[
 Graphics3DBox[{{
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 0.5}, {1.5, 0.5, 0.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 1.5}, {1.5, 0.5, 1.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 4.5}, {1.5, 0.5, 4.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 5.5}, {1.5, 0.5, 5.5}}]}}, {
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 0.5}, {0.5, 1.5, 0.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 1.5}, {0.5, 1.5, 1.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 4.5}, {0.5, 1.5, 4.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 5.5}, {0.5, 1.5, 5.5}}]}}, {
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 2.5}, {1.5, 1.5, 2.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 3.5}, {1.5, 1.5, 3.5}}]}}, {
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 2.5}, {0, 1, 2.5}}]}, 
    {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 3.5}, {0, 1, 3.5}}]}}, 
   {GrayLevel[0], Arrow3DBox[{{0.5, 0.5, 0.5}, {0.5, 0.5, 7}}]}, 
   {RGBColor[1, 0, 0], 
    Arrow3DBox[{{-0.2023687393127368, 0.8063032068884769, -0.5}, {
     6.430635344625499, 5.22519881565233, 6.5}}]}, {
    {RGBColor[0, 1, 0], Opacity[0.5], CuboidBox[{0, 0, 0}, {1, 7, 1}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{1, 0, 0}, {2, 7, 1}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{2, 0, 0}, {3, 7, 1}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{3, 0, 0}, {4, 7, 1}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{4, 0, 0}, {5, 7, 1}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{5, 0, 0}, {6, 7, 1}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{6, 0, 0}, {7, 7, 1}]}}, {
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{0, 0, 1}, {1, 7, 2}]}, 
    {RGBColor[0, 1, 0], Opacity[0.5], CuboidBox[{1, 0, 1}, {2, 7, 2}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{2, 0, 1}, {3, 7, 2}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{3, 0, 1}, {4, 7, 2}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{4, 0, 1}, {5, 7, 2}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{5, 0, 1}, {6, 7, 2}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], CuboidBox[{6, 0, 1}, {7, 7, 2}]}}, {
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{-1, 1, 2}, {0, 9, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{0, 0, 2}, {1, 8, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{1, -1, 2}, {2, 7, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{2, -2, 2}, {3, 6, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.5], 
     GeometricTransformation3DBox[
      CuboidBox[{3, -3, 2}, {4, 5, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{4, -4, 2}, {5, 4, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{5, -5, 2}, {6, 3, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{6, -6, 2}, {7, 2, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{7, -7, 2}, {8, 1, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{8, -8, 2}, {9, 0, 3}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}}, {
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{-1, 1, 3}, {0, 9, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{0, 0, 3}, {1, 8, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{1, -1, 3}, {2, 7, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{2, -2, 3}, {3, 6, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{3, -3, 3}, {4, 5, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.5], 
     GeometricTransformation3DBox[
      CuboidBox[{4, -4, 3}, {5, 4, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{5, -5, 3}, {6, 3, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{6, -6, 3}, {7, 2, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{7, -7, 3}, {8, 1, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], 
     GeometricTransformation3DBox[
      CuboidBox[{8, -8, 3}, {9, 0, 4}], {{{
       0.7071067811865475, -0.7071067811865475, 0.}, {0.7071067811865475, 
       0.7071067811865475, 0.}, {0., 0., 1.}}, {0.5, -0.20710678118654746`, 
       0.}}]}}, {
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 0, 4}, {7, 1, 5}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 1, 4}, {7, 2, 5}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 2, 4}, {7, 3, 5}]}, 
    {RGBColor[0, 0, 1], Opacity[0.5], CuboidBox[{0, 3, 4}, {7, 4, 5}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 4, 4}, {7, 5, 5}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 5, 4}, {7, 6, 5}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 6, 4}, {7, 7, 5}]}}, {
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 0, 5}, {7, 1, 6}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 1, 5}, {7, 2, 6}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 2, 5}, {7, 3, 6}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 3, 5}, {7, 4, 6}]}, 
    {RGBColor[0, 0, 1], Opacity[0.5], CuboidBox[{0, 4, 5}, {7, 5, 6}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 5, 5}, {7, 6, 6}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], CuboidBox[{0, 6, 5}, {7, 7, 6}]}}},
  ImageSize->{404.13106404019663`, 333.},
  PlotRange->{{0, 7}, {0, 7}, {-1, 7}},
  ViewPoint->{-2.0985929989944023`, 2.396784784683557, -1.1407585723899132`},
  ViewVertical->{0.1858822683538217, 1.1266579062597248`, 
   0.041154716492018344`}]], "Output",
 CellChangeTimes->{
  3.5512370269254675`*^9, 3.5512371705296807`*^9, 3.5512372043956175`*^9, 
   3.5512372899515114`*^9, {3.551237329478772*^9, 3.5512373362101574`*^9}, {
   3.5512374984674377`*^9, 3.5512375133642898`*^9}, 3.5512386836832285`*^9, {
   3.551239209528305*^9, 3.551239256512992*^9}, {3.551239296474278*^9, 
   3.55123939004963*^9}, {3.5512396593900356`*^9, 3.551239737230488*^9}, 
   3.5529455738953753`*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy8vQl0XMd1sPnw1l7Q2ImVJEiAIEVwJwhwAcEFIAGCBAEC4E6QIiWBpCiS
okiasixRoiyJsq3Nkm0tkCxFdmR5keVNsS3b8ZKjZI6TWM78tpPfGefMTE48
mUzyZ/4/mcnJ5J+ZO/feuvW6XvfrBkjlH5xT1f0eenmv7lf33rp1q3r3icun
J8+duHzn7SfmDVw8ceH0nbdfmtd/90U85ZRYVsmnseyeZ9FzsCxdPQz4Z8Ov
f/1regJVVFnWNX7w+PTJkyfhySef5ILHFr+uwnxdgv9Hr6M/eo8+lvfw+Yx6
y0P84Jgvs1w+54bnzLelo2/T/6K3+cZV5nyjusqEeu+DOR9Pf/jaZJFv9aPv
1P+Sl6an+2JHvf1qzuuM5rHKinx7SfTt5r/02yuKXML/o97+AD/4kW83PqI6
/gL+a/TN5ncbb55V5Ov/VX3C/TmCpiM75lxd/HX8S/RTjOuI/ZR6ud4tW7bA
4r7FMHFlwryof1af9pGYd7KsbPjmN79ZL8c/+tGPqHNARXsFfteWN7fg1Q2+
MMifKZ/3X6KfZ15d/ufRNc0bmMef5/LneeHnmQ33j+pD74u5SDf8UN1cdJEV
rRWw8sxK+uAg/jr/IfqR5nXmfyRdJ32cfGSyyKX+nfrcD8dcqhd+bq0c60vd
8vQW/dlWafz1/m30c83r9WLOaQxJWvTp5jeU5Vz+0NAQXLp0iS//b9TX3Btz
+X7M19TIf65du8aCzPmqCuObxq+Pm/dj/XX0m8xPLfZN5g0Z31Qdc0/Y0PxN
/6P6pisx9xTEfFO1nDPuiWDH2tHfxl9WU+Tm/ir6lebHx31lldG/hAfqHXlf
WSdfuXhkMd8hfYa+y79UX/mhmLtMFPlKjXahr6zlOgErP74SrDYLOro74J0/
fgemvjQF1x6/pj/zP0a/3fymuG+v1AoBv32P3LBb8NsdqBiugIaBBvp2PHr/
H97HRqCr0FegG+FX6jIuxzRCUs5pa2xexo/wMl4TUcddxizpk9QImd4MLDy4
kC7FM64kpz2sX0SvxLz5uCupyCGAOPeKXAk1yMLJhfpKEkXa5M/UlVyKaZNU
wSvJ6jxqFyxxzaJ7wLyz86BhHKVzpYML+U+pIm3zfvSKzLaJu6LymN5hT3dN
1iorvB59TZkirfQn6pouxrRSuuA1eWb34ULfE3dZ1QbIJDe8JLwHqh1WaXhh
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resolution", "Subsection",
 CellChangeTimes->{{3.5529455858846703`*^9, 3.5529455970034943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"k1", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "1", ",", " ", "4", ",", " ", "4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2", "=", 
   RowBox[{"k1", "+", "0.0001"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Para", "[", "k1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Ray", "[", 
  RowBox[{
   RowBox[{"Wire", "[", "k1", "]"}], ",", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"Time", "[", "k1", "]"}], ",", "3"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Para", "[", "k2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Ray", "[", 
  RowBox[{
   RowBox[{"Wire", "[", "k2", "]"}], ",", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"Time", "[", "k2", "]"}], ",", "3"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5529456129425077`*^9, 3.552945659283161*^9}, {
  3.552945716587596*^9, 3.552945936722764*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6`", ",", "1.`", ",", "0.6`", ",", "1.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.552945632561535*^9, 3.552945659869204*^9}, {
  3.552945745286686*^9, 3.552945803039278*^9}, {3.5529458756257267`*^9, 
  3.5529459373576107`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.5999999999999996`", ",", "1.0000000000000002`", ",", 
   "0.5999999999999999`", ",", "1.0000000000000004`", ",", 
   "1.1832913578315177`*^-30"}], "}"}]], "Output",
 CellChangeTimes->{{3.552945632561535*^9, 3.552945659869204*^9}, {
  3.552945745286686*^9, 3.552945803039278*^9}, {3.5529458756257267`*^9, 
  3.552945937359586*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6000000000000001`", ",", "1.0001`", ",", "0.6000000000000001`", ",", 
   "1.0001`"}], "}"}]], "Output",
 CellChangeTimes->{{3.552945632561535*^9, 3.552945659869204*^9}, {
  3.552945745286686*^9, 3.552945803039278*^9}, {3.5529458756257267`*^9, 
  3.552945937361026*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.5999999999999996`", ",", "1.0001000000000002`", ",", "0.6`", ",", 
   "1.0001`", ",", "3.4512664603419266`*^-31"}], "}"}]], "Output",
 CellChangeTimes->{{3.552945632561535*^9, 3.552945659869204*^9}, {
  3.552945745286686*^9, 3.552945803039278*^9}, {3.5529458756257267`*^9, 
  3.552945937391952*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Large Angle ", "Section",
 CellChangeTimes->{{3.552016588080274*^9, 3.55201660286712*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Pray", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "A", ",", "B"}], "}"}], ",", "z"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.552016715852582*^9, 3.5520167785061655`*^9}, {
   3.55201696285271*^9, 3.5520169765054903`*^9}, 3.5520170356678743`*^9, {
   3.5520177380820503`*^9, 3.552017744807435*^9}, 3.5520177768632684`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "+", 
    RowBox[{"0.2`", " ", 
     RowBox[{"(", 
      RowBox[{"A", "-", 
       RowBox[{"1.`", " ", "x"}]}], ")"}], " ", "z"}]}], ",", 
   RowBox[{"y", "+", 
    RowBox[{"0.2`", " ", 
     RowBox[{"(", 
      RowBox[{"B", "-", 
       RowBox[{"1.`", " ", "y"}]}], ")"}], " ", "z"}]}], ",", "z"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.552016723402014*^9, 3.552016779433219*^9}, {
   3.552016968732046*^9, 3.552016977458545*^9}, 3.5520170362949104`*^9, 
   3.552017745365467*^9, 3.5520177772992935`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DirPray", "[", "k_", "]"}], ":=", 
  FractionBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "-", 
      RowBox[{"k", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "-", 
      RowBox[{"k", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", "5"}], "}"}], 
   RowBox[{"Norm", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"k", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "-", 
       RowBox[{"k", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"k", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "-", 
       RowBox[{"k", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "5"}], "}"}], 
    "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AngPray", "[", "k_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Arg", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"DirPray", "[", "k", "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "+", 
        RowBox[{"\[ImaginaryI]", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"DirPray", "[", "k", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ")"}], "2"], "  ", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"DirPray", "[", "k", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}], "2"], " "}]]}]}], " ", 
       "]"}], 
      FractionBox["180", "\[Pi]"]}], "//", "N"}], ",", 
    RowBox[{
     RowBox[{"Arg", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DirPray", "[", "k", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{
         RowBox[{"DirPray", "[", "k", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], 
     FractionBox["180", "\[Pi]"]}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.5520177806244836`*^9, 3.552017874226837*^9}, {
  3.5520215253966722`*^9, 3.552021587123203*^9}, {3.5520216551680946`*^9, 
  3.5520218291840477`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Pray", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "5", ",", "5"}], "}"}], ",", "z"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"DirPray", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "5", ",", "5"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AngPray", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "5", ",", "5"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5520178759779377`*^9, 3.5520179263098164`*^9}, {
  3.552021664062604*^9, 3.552021673983171*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"z", ",", "z", ",", "z"}], "}"}]], "Output",
 CellChangeTimes->{{3.5520178895767155`*^9, 3.5520179272178683`*^9}, {
   3.552021674422196*^9, 3.552021692795247*^9}, 3.5520217771810737`*^9, {
   3.552021809692933*^9, 3.5520218324272337`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["3"]], ",", 
   FractionBox["1", 
    SqrtBox["3"]], ",", 
   FractionBox["1", 
    SqrtBox["3"]]}], "}"}]], "Output",
 CellChangeTimes->{{3.5520178895767155`*^9, 3.5520179272178683`*^9}, {
   3.552021674422196*^9, 3.552021692795247*^9}, 3.5520217771810737`*^9, {
   3.552021809692933*^9, 3.5520218324332337`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"54.735610317245346`", ",", "45"}], "}"}]], "Output",
 CellChangeTimes->{{3.5520178895767155`*^9, 3.5520179272178683`*^9}, {
   3.552021674422196*^9, 3.552021692795247*^9}, 3.5520217771810737`*^9, {
   3.552021809692933*^9, 3.552021832436234*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Round", "[", "1.5", "]"}]], "Input",
 CellChangeTimes->{{3.552017078016297*^9, 3.5520170951372757`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.552017085207708*^9, 3.552017095484296*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "wire", " ", "coodinate", " ", "integer"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "a", " ", "shortest", " ", "distance", " ", "between", " ", "2", " ", 
    "lines"}], "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"wire", " ", "direction"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"wdir", "[", "plan_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"plan", "\[Equal]", "1"}], " ", "||", " ", 
       RowBox[{"plan", "\[Equal]", "2"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"plan", "\[Equal]", "3"}], "||", " ", 
         RowBox[{"plan", "\[Equal]", "4"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", 
           SqrtBox["2"]], ",", 
          RowBox[{"-", 
           FractionBox["1", 
            SqrtBox["2"]]}], ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"wire", " ", "line"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w", "[", 
     RowBox[{"plan_", ",", "i_", ",", "s_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"plan", "\[Equal]", "1"}], " ", "||", " ", 
       RowBox[{"plan", "\[Equal]", "2"}]}], ",", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{"plan", "-", "1"}]}], "}"}], "+", 
       RowBox[{"s", " ", 
        RowBox[{"wdir", "[", "plan", "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"plan", "\[Equal]", "3"}], "||", " ", 
         RowBox[{"plan", "\[Equal]", "4"}]}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", 
            SqrtBox["2"]}], ",", "0", ",", 
           RowBox[{"plan", "-", "1"}]}], "}"}], "+", 
         RowBox[{"s", " ", 
          RowBox[{"wdir", "[", "plan", "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "i", ",", 
           RowBox[{"plan", "-", "1"}]}], "}"}], "+", 
         RowBox[{"s", " ", 
          RowBox[{"wdir", "[", "plan", "]"}]}]}]}], "]"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.552016844236925*^9, 3.552016889861535*^9}, {
   3.5520170661266165`*^9, 3.5520170734270344`*^9}, {3.5520171425179863`*^9, 
   3.55201722108848*^9}, {3.5520172607517486`*^9, 3.5520173191860905`*^9}, {
   3.552017534274393*^9, 3.5520175353984575`*^9}, {3.5520176748484335`*^9, 
   3.55201768492801*^9}, {3.552018115839657*^9, 3.552018117204735*^9}, {
   3.5520185729838037`*^9, 3.5520187170340433`*^9}, 3.552018864457475*^9, {
   3.5520190307079844`*^9, 3.552019048089978*^9}, {3.5520190808008494`*^9, 
   3.5520190914094563`*^9}, {3.5520191329128304`*^9, 3.552019146560611*^9}, {
   3.5520191903591156`*^9, 3.5520192485554447`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DriftLen", "[", 
   RowBox[{"k_", ",", "plan_", ",", "i_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"s", ",", "z", ",", "dl"}], "}"}], "/.", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"w", "[", 
         RowBox[{"plan", ",", "i", ",", "s"}], "]"}], "+", 
        RowBox[{"dl", " ", 
         RowBox[{"Cross", "[", 
          RowBox[{
           RowBox[{"wdir", "[", "plan", "]"}], ",", 
           RowBox[{"DirPray", "[", "k", "]"}]}], "]"}]}]}], "\[Equal]", 
       RowBox[{"Pray", "[", 
        RowBox[{"k", ",", "z"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "z", ",", "dl"}], "}"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5520176972627153`*^9, 3.552017708509359*^9}, {
   3.552017936316389*^9, 3.552018035910085*^9}, {3.552018069845026*^9, 
   3.552018120192906*^9}, {3.55201872222734*^9, 3.552018762750658*^9}, 
   3.552018935505539*^9, {3.5520192527976875`*^9, 3.5520192588780346`*^9}, {
   3.552019310798004*^9, 3.5520193452149734`*^9}, {3.552019456430334*^9, 
   3.552019463246724*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DriftLen", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2", ",", "0.2", ",", "10", ",", "10"}], "}"}], ",", "1", ",", 
   "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.5520194960135984`*^9, 3.552019520193981*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.04130865829477859`", ",", 
   RowBox[{"-", "0.08096497025776603`"}], ",", "0.12172533864317919`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.552019499461796*^9, 3.5520195207360125`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"HitList", "[", "k_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"DriftLen", "[", 
              RowBox[{"k", ",", "plan", ",", "i"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "]"}], "<", "0.5"}], ",", 
          RowBox[{"{", 
           RowBox[{"plan", ",", "i", ",", 
            RowBox[{
             RowBox[{"DriftLen", "[", 
              RowBox[{"k", ",", "plan", ",", "i"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"DriftLen", "[", 
               RowBox[{"k", ",", "plan", ",", "i"}], "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}], ",", "0"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"plan", ",", "1", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "]"}], ",", "0", ",", 
      "2"}], "]"}], ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5520188807704086`*^9, 3.5520189264830227`*^9}, {
   3.5520189681044035`*^9, 3.552019002999399*^9}, {3.5520191596483593`*^9, 
   3.5520191607184205`*^9}, {3.5520192745139294`*^9, 3.552019326560906*^9}, {
   3.5520193603838406`*^9, 3.552019361552908*^9}, {3.552019413275866*^9, 
   3.55201944761583*^9}, {3.5520195720899496`*^9, 3.552019574085064*^9}, {
   3.552019615042406*^9, 3.552019727071814*^9}, {3.5520197696542497`*^9, 
   3.552019800327004*^9}, {3.5520198455225887`*^9, 3.552019846973672*^9}, {
   3.55202088004576*^9, 3.552020888820262*^9}, {3.5520213023899174`*^9, 
   3.5520213132185364`*^9}, {3.5520213544438944`*^9, 
   3.5520213887918587`*^9}, {3.552021868749311*^9, 3.5520218849292364`*^9}, {
   3.552021923735456*^9, 3.5520219594484987`*^9}, 3.5520290454617953`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"HL", "=", 
   RowBox[{"HitList", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.1", ",", "7", ",", "1"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HL", "//", "TableForm"}], "\[IndentingNewLine]", 
 RowBox[{"AngPray", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0.1", ",", "7", ",", "1"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.552021392878093*^9, 3.552021521554453*^9}, {
  3.552021837996552*^9, 3.5520219156859956`*^9}, {3.552029053465253*^9, 
  3.55202905899457*^9}, {3.552032205813557*^9, 3.5520322344891977`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0", "0.`", "0.`"},
    {"2", "1", "0.8108108108108109`", "0.23376425476939147`"},
    {"2", "2", "1.2837837837837838`", "0.3506463821540873`"},
    {"3", "2", "1.8483486471619475`", "0.23480861278201326`"},
    {"4", "3", "2.790092581987472`", "0.3250090995812619`"},
    {"4", "4", "3.287036232140815`", "0.444431112719021`"},
    {"5", "1", "4.031383184812089`", "0.30160207996205857`"},
    {"6", "1", "5.`", "1.9205253890469646`*^-16"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.55202139894444*^9, 3.5520214622250595`*^9}, 
   3.5520215025853677`*^9, {3.552021839345629*^9, 3.552021961657625*^9}, {
   3.5520290506620927`*^9, 3.5520290598326173`*^9}, {3.5520322087097225`*^9, 
   3.5520322353632474`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"54.68417824674616`", ",", "7.326406660169546`"}], "}"}]], "Output",
 CellChangeTimes->{{3.55202139894444*^9, 3.5520214622250595`*^9}, 
   3.5520215025853677`*^9, {3.552021839345629*^9, 3.552021961657625*^9}, {
   3.5520290506620927`*^9, 3.5520290598326173`*^9}, {3.5520322087097225`*^9, 
   3.552032235370248*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HL", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.552032238302416*^9, 3.5520322399255085`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.5520322403495326`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ArcCos", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"HL", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "4", "]"}], "]"}], "+", 
    RowBox[{
     RowBox[{"HL", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], "]"}], 
  FractionBox["180", "\[Pi]"]}]], "Input",
 CellChangeTimes->{{3.552022381327629*^9, 3.552022434271657*^9}, {
  3.5520233375213203`*^9, 3.5520233434226575`*^9}, {3.552032245046801*^9, 
  3.5520322615657463`*^9}}],

Cell[BoxData["54.23863488217202`"], "Output",
 CellChangeTimes->{{3.5520224014857817`*^9, 3.552022434634678*^9}, 
   3.552023344082695*^9, 3.552032262189782*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1261, 611},
WindowMargins->{{5, Automatic}, {Automatic, 26}},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 23, \
2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 118, 1, 76, "Title"],
Cell[700, 25, 728, 15, 146, "Text"],
Cell[CellGroupData[{
Cell[1453, 44, 105, 1, 67, "Section"],
Cell[1561, 47, 3187, 86, 173, "Input"],
Cell[CellGroupData[{
Cell[4773, 137, 565, 12, 43, "Input"],
Cell[5341, 151, 448, 8, 27, "Output"],
Cell[5792, 161, 418, 7, 27, "Output"]
}, Open  ]],
Cell[6225, 171, 767, 21, 27, "Input"],
Cell[CellGroupData[{
Cell[7017, 196, 373, 9, 27, "Input"],
Cell[7393, 207, 467, 11, 35, "Output"]
}, Open  ]],
Cell[7875, 221, 13499, 376, 403, "Input"],
Cell[CellGroupData[{
Cell[21399, 601, 1120, 18, 27, "Input"],
Cell[22522, 621, 34674, 578, 203, 4773, 90, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57233, 1204, 972, 20, 88, "Input"],
Cell[58208, 1226, 671, 12, 27, "Output"],
Cell[58882, 1240, 688, 12, 27, "Output"],
Cell[59573, 1254, 617, 11, 27, "Output"],
Cell[60193, 1267, 737, 13, 27, "Output"],
Cell[60933, 1282, 6139, 114, 325, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67121, 1402, 99, 1, 67, "Section"],
Cell[67223, 1405, 628, 16, 43, "Input"],
Cell[67854, 1423, 2007, 65, 74, "Input"],
Cell[CellGroupData[{
Cell[69886, 1492, 1373, 39, 73, "Input"],
Cell[71262, 1533, 1154, 36, 35, "Output"],
Cell[72419, 1571, 738, 23, 32, "Output"],
Cell[73160, 1596, 1159, 36, 35, "Output"],
Cell[74322, 1634, 756, 24, 32, "Output"]
}, Open  ]],
Cell[75093, 1661, 10315, 307, 334, "Input"],
Cell[CellGroupData[{
Cell[85433, 1972, 1118, 24, 88, "Input"],
Cell[86554, 1998, 401, 7, 27, "Output"],
Cell[86958, 2007, 411, 7, 27, "Output"],
Cell[87372, 2016, 422, 8, 27, "Output"],
Cell[87797, 2026, 489, 9, 27, "Output"],
Cell[88289, 2037, 49741, 830, 223, 5611, 105, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[138045, 2870, 4696, 131, 73, "Input"],
Cell[CellGroupData[{
Cell[142766, 3005, 410, 8, 27, "Input"],
Cell[143179, 3015, 366, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143582, 3027, 1286, 30, 118, "Input"],
Cell[144871, 3059, 591, 11, 27, "Output"],
Cell[145465, 3072, 593, 11, 27, "Output"],
Cell[146061, 3085, 633, 12, 33, "Output"],
Cell[146697, 3099, 538, 10, 27, "Output"],
Cell[147238, 3111, 656, 12, 27, "Output"],
Cell[147897, 3125, 812, 15, 27, "Output"],
Cell[148712, 3142, 79422, 1324, 348, 9099, 170, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228171, 4471, 102, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[228298, 4476, 920, 25, 103, "Input"],
Cell[229221, 4503, 271, 5, 27, "Output"],
Cell[229495, 4510, 375, 8, 33, "Output"],
Cell[229873, 4520, 314, 7, 27, "Output"],
Cell[230190, 4529, 344, 7, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[230595, 4543, 96, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[230716, 4548, 371, 8, 27, "Input"],
Cell[231090, 4558, 566, 16, 27, "Output"]
}, Open  ]],
Cell[231671, 4577, 2248, 69, 85, "Input"],
Cell[CellGroupData[{
Cell[233944, 4650, 532, 14, 58, "Input"],
Cell[234479, 4666, 279, 5, 27, "Output"],
Cell[234761, 4673, 387, 11, 50, "Output"],
Cell[235151, 4686, 286, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235474, 4696, 128, 2, 27, "Input"],
Cell[235605, 4700, 94, 1, 27, "Output"]
}, Open  ]],
Cell[235714, 4704, 3221, 80, 244, "Input"],
Cell[238938, 4786, 1151, 28, 27, "Input"],
Cell[CellGroupData[{
Cell[240114, 4818, 241, 6, 27, "Input"],
Cell[240358, 4826, 230, 5, 27, "Output"]
}, Open  ]],
Cell[240603, 4834, 2058, 45, 58, "Input"],
Cell[CellGroupData[{
Cell[242686, 4883, 584, 13, 58, "Input"],
Cell[243273, 4898, 1203, 26, 143, "Output"],
Cell[244479, 4926, 354, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244870, 4937, 146, 3, 27, "Input"],
Cell[245019, 4942, 141, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245197, 4950, 528, 15, 47, "Input"],
Cell[245728, 4967, 161, 2, 27, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

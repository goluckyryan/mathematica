(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    330099,       7152]
NotebookOptionsPosition[    325468,       6999]
NotebookOutlinePosition[    325827,       7015]
CellTagsIndexPosition[    325784,       7012]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Simulation on SMWDC ray - tracking", "Title",
 CellChangeTimes->{{3.5796062170975404`*^9, 3.5796062219038153`*^9}}],

Cell[CellGroupData[{

Cell["Raw Signal Generation", "Section",
 CellChangeTimes->{{3.55116326314242*^9, 3.551163275253113*^9}, 
   3.557202628792845*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"a", " ", 
    RowBox[{"paricle", "'"}], "s", " ", "travaling", " ", "path"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"\[Beta]", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"x0", ",", " ", "a", ",", " ", "y0", ",", " ", "b"}], "}"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"3", "D", " ", "Ray"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Ray", "[", 
     RowBox[{"\[Beta]_", ",", "z_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "z"}]}], ",", 
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "+", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "z"}]}], ",", "z"}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"the", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], " ", "@", " ", "z"}]}], "=", 
      RowBox[{"-", "40"}]}], ",", " ", 
     RowBox[{"z", "=", "40"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Bound", "[", "\[Beta]_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Ray", "[", 
        RowBox[{"\[Beta]", ",", 
         RowBox[{"-", "40"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Ray", "[", 
        RowBox[{"\[Beta]", ",", "40"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Normal", " ", "of", " ", "Ray"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NormRay", "[", "\[Beta]_", "]"}], ":=", 
    RowBox[{"Normalize", "[", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Ray", "[", 
        RowBox[{"\[Beta]", ",", "40"}], "]"}], "-", 
       RowBox[{"Ray", "[", 
        RowBox[{"\[Beta]", ",", 
         RowBox[{"-", "40"}]}], "]"}]}], ")"}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.564983476429057*^9, 3.564983511286051*^9}, {
   3.5649835489582057`*^9, 3.5649837767262335`*^9}, {3.5649839534153395`*^9, 
   3.5649839792578173`*^9}, {3.5649842250388756`*^9, 3.5649842624920177`*^9}, 
   3.564987709481174*^9, {3.564993758112136*^9, 3.5649937711858835`*^9}, {
   3.5796065907629128`*^9, 3.5796066009334946`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["MWDC Construction", "Section",
 CellChangeTimes->{{3.564979316830142*^9, 3.564979325312627*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"plan", " ", "angle"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"plan\[Theta]", "[", "plan_", "]"}], ":=", 
    RowBox[{"Switch", "[", 
     RowBox[{
     "plan", ",", "\[IndentingNewLine]", "1", ",", "0", ",", 
      "\[IndentingNewLine]", "2", ",", "0", ",", "\[IndentingNewLine]", "3", 
      ",", 
      RowBox[{"ArcCos", "[", "0.8", "]"}], ",", "\[IndentingNewLine]", "4", 
      ",", 
      RowBox[{"ArcCos", "[", "0.8", "]"}], ",", "\[IndentingNewLine]", "5", 
      ",", 
      RowBox[{"-", 
       RowBox[{"ArcCos", "[", "0.8", "]"}]}], ",", "\[IndentingNewLine]", "6",
       ",", 
      RowBox[{"-", 
       RowBox[{"ArcCos", "[", "0.8", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"wire", " ", "direction"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wnorm", "[", "plan_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"plan\[Theta]", "[", "plan", "]"}], "]"}]}], ",", 
      RowBox[{"Cos", "[", 
       RowBox[{"plan\[Theta]", "[", "plan", "]"}], "]"}], ",", "0"}], "}"}]}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cell", 
     RowBox[{"(*", 
      RowBox[{"X", ",", "Y", ",", "Z"}], "*)"}], "=", 
     RowBox[{"{", 
      RowBox[{"20", ",", "400", ",", "16"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"firstwirePosition", 
     RowBox[{"(*", "mm", "*)"}], "=", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "5", ",", "13.125", ",", "9.5", ",", "13.125", ",", "9.5"}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wstart", "[", 
     RowBox[{"plan_", ",", "i_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", "-", "1"}], ")"}], 
        FractionBox[
         RowBox[{"cell", "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"plan\[Theta]", "[", "plan", "]"}], "]"}]]}], "+", 
       RowBox[{"firstwirePosition", "[", 
        RowBox[{"[", "plan", "]"}], "]"}]}], ",", "0", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"cell", "[", 
         RowBox[{"[", "3", "]"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"plan", "-", "1"}], ")"}]}], "-", "40"}]}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "wire", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w", "[", 
     RowBox[{"plan_", ",", "i_", ",", "s_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"wstart", "[", 
      RowBox[{"plan", ",", "i"}], "]"}], "+", 
     RowBox[{"s", " ", 
      RowBox[{"wnorm", "[", "plan", "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"number", " ", "of", " ", "wire"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numWire", "[", "plan_", "]"}], ":=", 
    RowBox[{"Switch", "[", 
     RowBox[{
     "plan", ",", "\[IndentingNewLine]", "1", ",", "56", ",", 
      "\[IndentingNewLine]", "2", ",", "56", ",", "\[IndentingNewLine]", "3", 
      ",", "44", ",", "\[IndentingNewLine]", "4", ",", "44", ",", 
      "\[IndentingNewLine]", "5", ",", "44", ",", "\[IndentingNewLine]", "6", 
      ",", "44"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Hightlight", " ", "wire", " ", "cell"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Highlight", "[", 
     RowBox[{"plane_", ",", "wire_", ",", "lis_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"lis", ",", 
        RowBox[{"{", 
         RowBox[{"plane", ",", "wire", ",", "__"}], "}"}]}], "]"}], ",", 
      "0.5", ",", "0.1"}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.564982918783162*^9, 3.564983143204998*^9}, 
   3.564983208001704*^9, {3.5649833106925774`*^9, 3.564983311133603*^9}, {
   3.564984697020871*^9, 3.564984719102134*^9}, {3.5649847884521008`*^9, 
   3.564984888038797*^9}, {3.5649851019150295`*^9, 3.564985116450861*^9}, {
   3.564985162555498*^9, 3.56498523373757*^9}, {3.56498526381129*^9, 
   3.564985337874526*^9}, 3.5649853702093754`*^9, {3.56498561751552*^9, 
   3.564985619041608*^9}, {3.564985877450388*^9, 3.564985977053085*^9}, {
   3.564987886067274*^9, 3.5649879384882727`*^9}, {3.5649879730912514`*^9, 
   3.5649880191038837`*^9}, {3.564992927067603*^9, 3.56499294520864*^9}, 
   3.564992984512889*^9, {3.5649950223994493`*^9, 3.564995034081117*^9}, {
   3.564995067963055*^9, 3.5649950926804686`*^9}, {3.5672289719393578`*^9, 
   3.5672289787151737`*^9}, {3.567229843892993*^9, 3.567229849088365*^9}, {
   3.5672301423955183`*^9, 3.567230142654827*^9}, {3.567230448821501*^9, 
   3.567230449327734*^9}, {3.5789923298576117`*^9, 3.578992331323701*^9}, {
   3.578993028207649*^9, 3.5789930475807953`*^9}, {3.579144132079711*^9, 
   3.579144133931817*^9}, {3.579144192522168*^9, 3.5791441966564045`*^9}, {
   3.579583030884778*^9, 3.5795830654436502`*^9}}],

Cell[CellGroupData[{

Cell["\<\
chamber geometery drawing : MWDC2[\[Beta], size, \[Alpha]], \
MWDC2RaysFlat[k1_,k2_, size_, \[Alpha]_,plan_]\
\>", "Subsection",
 CellChangeTimes->{{3.579606287776583*^9, 3.5796062954950247`*^9}, 
   3.5796066030896177`*^9, {3.579849546860589*^9, 3.57984954730831*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MWDC2", "[", 
   RowBox[{"\[Beta]_", ",", " ", "size_", ",", " ", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"J", "=", 
        RowBox[{"HitList", "[", "\[Beta]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fp", "=", 
        RowBox[{"FirstPlan", "[", "J", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Ymin", "=", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Ray", "[", 
             RowBox[{"\[Beta]", ",", 
              RowBox[{"-", "60"}]}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Ray", "[", 
             RowBox[{"\[Beta]", ",", "60"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", "20"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Ymax", "=", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Ray", "[", 
             RowBox[{"\[Beta]", ",", 
              RowBox[{"-", "60"}]}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Ray", "[", 
             RowBox[{"\[Beta]", ",", "60"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "+", "20"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Corner1", "[", "plan_", "]"}], ":=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"cell", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "2"]}], ",", 
          FractionBox["Ymin", 
           RowBox[{"Cos", "[", 
            RowBox[{"plan\[Theta]", "[", "plan", "]"}], "]"}]], ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"cell", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "2"]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Corner2", "[", "plan_", "]"}], ":=", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"cell", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "2"], ",", 
          FractionBox["Ymax", 
           RowBox[{"Cos", "[", 
            RowBox[{"plan\[Theta]", "[", "plan", "]"}], "]"}]], ",", 
          FractionBox[
           RowBox[{"cell", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "2"]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "Z", "*)"}], 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{
              RowBox[{"J", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"J", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "0"}], "]"}], ",", 
            RowBox[{
             RowBox[{"w", "[", 
              RowBox[{
               RowBox[{"J", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"J", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "0"}], "]"}], 
             "+", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "100"}], "}"}]}]}], "}"}], "]"}]}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "X", "*)"}], 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{
             RowBox[{"J", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"J", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "0"}], "]"}], ",", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{
              RowBox[{"J", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"J", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "0"}], "]"}], "+", 
            RowBox[{"{", 
             RowBox[{"40", ",", "0", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "Y", "*)"}], 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{
             RowBox[{"J", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"J", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "0"}], "]"}], ",", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{
              RowBox[{"J", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"J", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "0"}], "]"}], "+", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Ray", "[", 
                 RowBox[{"\[Beta]", ",", "60"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", "50"}], ",", "0"}], 
             "}"}]}]}], "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "Large", " ", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Ray", "[", 
            RowBox[{"\[Beta]", ",", 
             RowBox[{"-", "60"}]}], "]"}], ",", 
           RowBox[{"Ray", "[", 
            RowBox[{"\[Beta]", ",", "60"}], "]"}]}], "}"}], "]"}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Opacity", "[", 
           RowBox[{"Highlight", "[", 
            RowBox[{"1", ",", "i", ",", "J"}], "]"}], "]"}], ",", 
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Opacity", "[", "\[Alpha]", "]"}], "]"}], ",", 
          RowBox[{"Cuboid", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"wstart", "[", 
              RowBox[{"1", ",", "i"}], "]"}], "+", 
             RowBox[{"Corner1", "[", "1", "]"}]}], ",", 
            RowBox[{
             RowBox[{"wstart", "[", 
              RowBox[{"1", ",", "i"}], "]"}], "+", 
             RowBox[{"Corner2", "[", "1", "]"}]}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{
           RowBox[{"J", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], "-", "2"}], ",", 
          RowBox[{
           RowBox[{"J", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], "+", "2"}]}], "}"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Opacity", "[", 
           RowBox[{"Highlight", "[", 
            RowBox[{"2", ",", "i", ",", "J"}], "]"}], "]"}], ",", 
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Opacity", "[", "\[Alpha]", "]"}], "]"}], ",", 
          RowBox[{"Cuboid", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"wstart", "[", 
              RowBox[{"2", ",", "i"}], "]"}], "+", 
             RowBox[{"Corner1", "[", "2", "]"}]}], ",", 
            RowBox[{
             RowBox[{"wstart", "[", 
              RowBox[{"2", ",", "i"}], "]"}], "+", 
             RowBox[{"Corner2", "[", "2", "]"}]}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{
           RowBox[{"J", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"fp", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "]"}], "]"}], "-", 
           "2"}], ",", 
          RowBox[{
           RowBox[{"J", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"fp", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "]"}], "]"}], "+", 
           "2"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Yellow", ",", 
          RowBox[{"Opacity", "[", 
           RowBox[{"Highlight", "[", 
            RowBox[{"3", ",", "i", ",", "J"}], "]"}], "]"}], ",", 
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Opacity", "[", "\[Alpha]", "]"}], "]"}], ",", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Cuboid", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"wstart", "[", 
                RowBox[{"3", ",", "i"}], "]"}], "+", 
               RowBox[{"Corner1", "[", "3", "]"}]}], ",", 
              RowBox[{
               RowBox[{"wstart", "[", 
                RowBox[{"3", ",", "i"}], "]"}], "+", 
               RowBox[{"Corner2", "[", "3", "]"}]}]}], "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"ArcSin", "[", 
              RowBox[{
               RowBox[{"wnorm", "[", "3", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"wstart", "[", 
             RowBox[{"3", ",", "i"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{
           RowBox[{"J", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"fp", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", "2"}], "]"}], "]"}], "-", 
           "2"}], ",", 
          RowBox[{
           RowBox[{"J", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"fp", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", "2"}], "]"}], "]"}], "+", 
           "2"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Yellow", ",", 
          RowBox[{"Opacity", "[", 
           RowBox[{"Highlight", "[", 
            RowBox[{"4", ",", "i", ",", "J"}], "]"}], "]"}], ",", 
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Opacity", "[", "\[Alpha]", "]"}], "]"}], ",", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Cuboid", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"wstart", "[", 
                RowBox[{"4", ",", "i"}], "]"}], "+", 
               RowBox[{"Corner1", "[", "4", "]"}]}], ",", 
              RowBox[{
               RowBox[{"wstart", "[", 
                RowBox[{"4", ",", "i"}], "]"}], "+", 
               RowBox[{"Corner2", "[", "4", "]"}]}]}], "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"ArcSin", "[", 
              RowBox[{
               RowBox[{"wnorm", "[", "4", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"wstart", "[", 
             RowBox[{"4", ",", "i"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{
           RowBox[{"J", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"fp", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", "2"}], "]"}], "]"}], "-", 
           "2"}], ",", 
          RowBox[{
           RowBox[{"J", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"fp", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", "2"}], "]"}], "]"}], "+", 
           "2"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Opacity", "[", 
           RowBox[{"Highlight", "[", 
            RowBox[{"5", ",", "i", ",", "J"}], "]"}], "]"}], ",", 
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Opacity", "[", "\[Alpha]", "]"}], "]"}], ",", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Cuboid", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"wstart", "[", 
                RowBox[{"5", ",", "i"}], "]"}], "+", 
               RowBox[{"Corner1", "[", "5", "]"}]}], ",", 
              RowBox[{
               RowBox[{"wstart", "[", 
                RowBox[{"5", ",", "i"}], "]"}], "+", 
               RowBox[{"Corner2", "[", "5", "]"}]}]}], "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"ArcSin", "[", 
              RowBox[{
               RowBox[{"wnorm", "[", "5", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"wstart", "[", 
             RowBox[{"5", ",", "i"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{
           RowBox[{"J", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"fp", "[", 
               RowBox[{"[", "5", "]"}], "]"}], ",", "2"}], "]"}], "]"}], "-", 
           "2"}], ",", 
          RowBox[{
           RowBox[{"J", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"fp", "[", 
               RowBox[{"[", "5", "]"}], "]"}], ",", "2"}], "]"}], "]"}], "+", 
           "2"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Opacity", "[", 
           RowBox[{"Highlight", "[", 
            RowBox[{"6", ",", "i", ",", "J"}], "]"}], "]"}], ",", 
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Opacity", "[", "\[Alpha]", "]"}], "]"}], ",", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Cuboid", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"wstart", "[", 
                RowBox[{"6", ",", "i"}], "]"}], "+", 
               RowBox[{"Corner1", "[", "6", "]"}]}], ",", 
              RowBox[{
               RowBox[{"wstart", "[", 
                RowBox[{"6", ",", "i"}], "]"}], "+", 
               RowBox[{"Corner2", "[", "6", "]"}]}]}], "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"ArcSin", "[", 
              RowBox[{
               RowBox[{"wnorm", "[", "6", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"wstart", "[", 
             RowBox[{"6", ",", "i"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{
           RowBox[{"J", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"fp", "[", 
               RowBox[{"[", "6", "]"}], "]"}], ",", "2"}], "]"}], "]"}], "-", 
           "2"}], ",", 
          RowBox[{
           RowBox[{"J", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"fp", "[", 
               RowBox[{"[", "6", "]"}], "]"}], ",", "2"}], "]"}], "]"}], "+", 
           "2"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
          RowBox[{"Cylinder", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"w", "[", 
               RowBox[{
                RowBox[{"J", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"J", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
                FractionBox[
                 RowBox[{"Ymin", "-", "20"}], 
                 RowBox[{"Cos", "[", 
                  RowBox[{"plan\[Theta]", "[", 
                   RowBox[{"J", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}]]}], 
               "]"}], ",", 
              RowBox[{"w", "[", 
               RowBox[{
                RowBox[{"J", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"J", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
                FractionBox[
                 RowBox[{"Ymax", "+", "20"}], 
                 RowBox[{"Cos", "[", 
                  RowBox[{"plan\[Theta]", "[", 
                   RowBox[{"J", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}]]}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{"J", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "5"}], "]"}], "]"}], "]"}]}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "J", "]"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"J", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"w", "[", 
          RowBox[{
           RowBox[{"J", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"J", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "0"}], "]"}], "+", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "0", ",", "0"}], "}"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "size"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MWDC2RaysFlat", "[", 
   RowBox[{
   "k1_", ",", "k2_", ",", " ", "size_", ",", " ", "\[Alpha]_", ",", 
    "plan_"}], "]"}], ":=", 
  RowBox[{"(*", 
   RowBox[{"ImageReflect", "["}], "*)"}], 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"J1", "=", 
        RowBox[{"HitList", "[", "k1", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"J2", "=", 
        RowBox[{"HitList", "[", "k2", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fp1", "=", 
        RowBox[{"FirstPlan", "[", "J1", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fp2", "=", 
        RowBox[{"FirstPlan", "[", "J2", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "Z", "*)"}], 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"w", "[", 
               RowBox[{
                RowBox[{"J1", "[", 
                 RowBox[{"[", 
                  RowBox[{"plan", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"J1", "[", 
                 RowBox[{"[", 
                  RowBox[{"plan", ",", "2"}], "]"}], "]"}], ",", "0"}], "]"}],
               ",", 
              RowBox[{"{", "2", "}"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"Drop", "[", 
              RowBox[{
               RowBox[{"w", "[", 
                RowBox[{
                 RowBox[{"J1", "[", 
                  RowBox[{"[", 
                   RowBox[{"plan", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"J1", "[", 
                  RowBox[{"[", 
                   RowBox[{"plan", ",", "2"}], "]"}], "]"}], ",", "0"}], 
                "]"}], ",", 
               RowBox[{"{", "2", "}"}]}], "]"}], "+", 
             RowBox[{"{", 
              RowBox[{"0", ",", "30"}], "}"}]}]}], "}"}], "]"}]}], "}"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"(*", "X", "*)"}], 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"w", "[", 
              RowBox[{
               RowBox[{"J1", "[", 
                RowBox[{"[", 
                 RowBox[{"plan", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"J1", "[", 
                RowBox[{"[", 
                 RowBox[{"plan", ",", "2"}], "]"}], "]"}], ",", "0"}], "]"}], 
             ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"w", "[", 
               RowBox[{
                RowBox[{"J1", "[", 
                 RowBox[{"[", 
                  RowBox[{"plan", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"J1", "[", 
                 RowBox[{"[", 
                  RowBox[{"plan", ",", "2"}], "]"}], "]"}], ",", "0"}], "]"}],
               ",", 
              RowBox[{"{", "2", "}"}]}], "]"}], "+", 
            RowBox[{"{", 
             RowBox[{"30", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "Large", " ", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"Ray", "[", 
              RowBox[{"k1", ",", 
               RowBox[{"-", "50"}]}], "]"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], ",", 
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"Ray", "[", 
              RowBox[{"k1", ",", 
               RowBox[{"-", "10"}]}], "]"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Thickness", "[", "Large", " ", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"Ray", "[", 
              RowBox[{"k2", ",", 
               RowBox[{"-", "50"}]}], "]"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], ",", 
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"Ray", "[", 
              RowBox[{"k2", ",", 
               RowBox[{"-", "10"}]}], "]"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Opacity", "[", "\[Alpha]", "]"}], "]"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"wstart", "[", 
                RowBox[{"plan", ",", "i"}], "]"}], "-", 
               RowBox[{
                FractionBox["1", "2"], 
                FractionBox["cell", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"wnorm", "[", "plan", "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "1", ",", "1"}], 
                  "}"}]]}]}], ",", 
              RowBox[{"{", "2", "}"}]}], "]"}], ",", 
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"wstart", "[", 
                RowBox[{"plan", ",", "i"}], "]"}], "+", 
               RowBox[{
                FractionBox["1", "2"], 
                FractionBox["cell", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"wnorm", "[", "plan", "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "1", ",", "1"}], 
                  "}"}]]}]}], ",", 
              RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"J1", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"fp1", "[", 
              RowBox[{"[", "plan", "]"}], "]"}], ",", "2"}], "]"}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{"J1", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"fp1", "[", 
               RowBox[{"[", "plan", "]"}], "]"}], ",", "2"}], "]"}], "]"}], 
           "+", "2"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Opacity", "[", "0.2", "]"}], ",", ",", 
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Opacity", "[", "\[Alpha]", "]"}], "]"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"wstart", "[", 
                RowBox[{
                 RowBox[{"plan", "+", "1"}], ",", "i"}], "]"}], "-", 
               RowBox[{
                FractionBox["1", "2"], 
                FractionBox["cell", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"wnorm", "[", 
                    RowBox[{"plan", "+", "1"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "1", ",", "1"}], 
                  "}"}]]}]}], ",", 
              RowBox[{"{", "2", "}"}]}], "]"}], ",", 
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"wstart", "[", 
                RowBox[{
                 RowBox[{"plan", "+", "1"}], ",", "i"}], "]"}], "+", 
               RowBox[{
                FractionBox["1", "2"], 
                FractionBox["cell", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"wnorm", "[", 
                    RowBox[{"plan", "+", "1"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "1", ",", "1"}], 
                  "}"}]]}]}], ",", 
              RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"J1", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"fp1", "[", 
              RowBox[{"[", 
               RowBox[{"plan", "+", "1"}], "]"}], "]"}], ",", "2"}], "]"}], 
           "]"}], ",", 
          RowBox[{
           RowBox[{"J1", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"fp1", "[", 
               RowBox[{"[", 
                RowBox[{"plan", "+", "1"}], "]"}], "]"}], ",", "2"}], "]"}], 
            "]"}], "+", "2"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Red", ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"w", "[", 
               RowBox[{
                RowBox[{"J1", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"J1", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", "0"}], "]"}], 
              ",", 
              RowBox[{"{", "2", "}"}]}], "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{"{", 
              RowBox[{
               FractionBox[
                RowBox[{"J1", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "5"}], "]"}], "]"}], 
                RowBox[{
                 RowBox[{"wnorm", "[", "plan", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]], ",", 
               RowBox[{"J1", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "5"}], "]"}], "]"}]}], "}"}], "]"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"fp1", "[", 
           RowBox[{"[", "plan", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"fp1", "[", 
            RowBox[{"[", 
             RowBox[{"plan", "+", "1"}], "]"}], "]"}], "+", "1"}]}], "}"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"w", "[", 
               RowBox[{
                RowBox[{"J2", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"J2", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", "0"}], "]"}], 
              ",", 
              RowBox[{"{", "2", "}"}]}], "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{"{", 
              RowBox[{
               FractionBox[
                RowBox[{"J2", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "5"}], "]"}], "]"}], 
                RowBox[{
                 RowBox[{"wnorm", "[", "plan", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]], ",", 
               RowBox[{"J2", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "5"}], "]"}], "]"}]}], "}"}], "]"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"fp2", "[", 
           RowBox[{"[", "plan", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"fp2", "[", 
            RowBox[{"[", 
             RowBox[{"plan", "+", "1"}], "]"}], "]"}], "+", "1"}]}], "}"}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"J1", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"J1", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "6"}], "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"Crystal", "[", "1", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{
             RowBox[{"J1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"J1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "0"}], "]"}], "+", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "size"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{",", 
     RowBox[{"Left", "\[Rule]", "Right"}]}], "]"}], "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.579606604209682*^9, 3.579606618762514*^9}, 
   3.579606802470022*^9, {3.5798494510185127`*^9, 3.5798494525844316`*^9}, {
   3.579849523563517*^9, 3.579849526401643*^9}, {3.579850131274497*^9, 
   3.579850175875472*^9}, {3.579850266248825*^9, 3.579850274305872*^9}, {
   3.57985044161248*^9, 3.579850458669318*^9}, {3.579850523861877*^9, 
   3.579850558804945*^9}, {3.57985060004655*^9, 3.579850607156281*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Signal Construction", "Section",
 CellChangeTimes->{{3.552016588080274*^9, 3.55201660286712*^9}, {
  3.552967744655089*^9, 3.552967749973*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "a", " ", "shortest", " ", "distance", " ", "between", " ", "2", " ", 
    "lines"}], "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"MaxDriftLen", "[", "plan_", "]"}], ":=", 
    RowBox[{"Switch", "[", 
     RowBox[{
     "plan", ",", "\[IndentingNewLine]", "1", ",", "10", ",", 
      "\[IndentingNewLine]", "2", ",", "10", ",", "\[IndentingNewLine]", "3", 
      ",", "10", ",", "\[IndentingNewLine]", "4", ",", "10", ",", 
      "\[IndentingNewLine]", "5", ",", "10", ",", "\[IndentingNewLine]", "6", 
      ",", "10"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DriftLen", "[", 
     RowBox[{"\[Beta]_", ",", "plan_", ",", "i_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", "z", ",", "dl"}], "}"}], "/.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"w", "[", 
           RowBox[{"plan", ",", "i", ",", "s"}], "]"}], "+", 
          RowBox[{"dl", " ", 
           RowBox[{"Normalize", "[", 
            RowBox[{"Cross", "[", 
             RowBox[{
              RowBox[{"wnorm", "[", "plan", "]"}], ",", 
              RowBox[{"NormRay", "[", "\[Beta]", "]"}]}], "]"}], "]"}]}]}], 
         "\[Equal]", 
         RowBox[{"Ray", "[", 
          RowBox[{"\[Beta]", ",", "z"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "z", ",", "dl"}], "}"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "another", " ", "method", " ", "to", " ", "calculate", " ", 
     "driftlenght"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DriftLength", "[", 
     RowBox[{"\[Beta]_", ",", "plan_", ",", "i_"}], "]"}], ":=", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"wstart", "[", 
         RowBox[{"plan", ",", "i"}], "]"}], "-", 
        RowBox[{"Ray", "[", 
         RowBox[{"\[Beta]", ",", "0"}], "]"}]}], ")"}], ".", 
      RowBox[{"Normalize", "[", 
       RowBox[{"Cross", "[", 
        RowBox[{
         RowBox[{"wnorm", "[", "plan", "]"}], ",", 
         RowBox[{"NormRay", "[", "\[Beta]", "]"}]}], "]"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"general", " ", "2", " ", "ray", " ", "distance"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Distance", "[", 
     RowBox[{"ray1_", ",", "ray1Norm_", ",", "ray2_", ",", "ray2Norm_"}], 
     "]"}], ":=", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"ray1", "-", "ray2"}], ")"}], ".", 
      RowBox[{"Normalize", "[", 
       RowBox[{"Cross", "[", 
        RowBox[{"ray1Norm", ",", "ray2Norm"}], "]"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IncAng", "[", "\[Beta]_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"norm\[Beta]", ",", "p\[Beta]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"norm\[Beta]", "=", 
        RowBox[{"NormRay", "[", "\[Beta]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"p\[Beta]", "=", 
           RowBox[{"Normalize", "[", 
            RowBox[{"norm\[Beta]", "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"norm\[Beta]", ".", 
                RowBox[{"wnorm", "[", "i", "]"}]}], ")"}], 
              RowBox[{"wnorm", "[", "i", "]"}]}]}], "]"}]}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"p\[Beta]", "=", 
           RowBox[{
            RowBox[{"norm\[Beta]", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"norm\[Beta]", ".", 
                   RowBox[{"wnorm", "[", "i", "]"}]}], ")"}], "2"]}], ")"}]}],
              ")"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"p\[Beta]", "=", 
           FractionBox["1", 
            SqrtBox[
             RowBox[{"1", "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Beta]", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], 
                  RowBox[{"Cos", "[", 
                   RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Beta]", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], 
                  RowBox[{"Sin", "[", 
                   RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}]}], ")"}], 
               "2"]}]]]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ArcCos", "[", "p\[Beta]", "]"}]}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HitList", "[", "\[Beta]_", "]"}], ":=", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "plane", ",", " ", "wire", ",", " ", "z", ",", " ", "s", ",", " ", "DL", 
      ",", " ", 
      RowBox[{"wire", " ", "Distance"}], " ", ",", " ", "Lz"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"DriftLen", "[", 
                RowBox[{"\[Beta]", ",", "plan", ",", "i"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}], "<", 
             RowBox[{"MaxDriftLen", "[", "plan", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"plan", ",", "i", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"plan", "-", "1"}], ")"}], "*", 
                RowBox[{"cell", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "-", "40"}], ",", 
              RowBox[{
               RowBox[{"DriftLen", "[", 
                RowBox[{"\[Beta]", ",", "plan", ",", "i"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"DriftLen", "[", 
                RowBox[{"\[Beta]", ",", "plan", ",", "i"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"Distance", "[", 
               RowBox[{
                RowBox[{"wstart", "[", 
                 RowBox[{"plan", ",", "i"}], "]"}], ",", 
                RowBox[{"wnorm", "[", "plan", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
              RowBox[{"Abs", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"DriftLen", "[", 
                  RowBox[{"\[Beta]", ",", "plan", ",", "i"}], "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"IncAng", "[", "\[Beta]", "]"}], "[", 
                  RowBox[{"[", "plan", "]"}], "]"}], "]"}]], "]"}]}], "}"}], 
            ",", "0"}], "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"plan", ",", "1", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"numWire", "[", "plan", "]"}]}], "}"}]}], "]"}], 
        "\[IndentingNewLine]", ",", "0", ",", "2"}], "]"}], 
      "\[IndentingNewLine]", ",", "1"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CountPlan", "[", "Lis_", "]"}], ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Count", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", "Lis", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"FirstPlan", "[", "Lis_", "]"}], ":=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"Lis", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "__"}], "}"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}], "]"}]}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FirstPlan", "[", "Lis_", "]"}], ":=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"Lis", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "__"}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LastPlan", "[", "Lis_", "]"}], ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"CountPlan", "[", "Lis", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "i"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ReducedFstHitList", "[", "\[Beta]_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"J", ",", "FstPlan"}], "}"}], ",", 
      RowBox[{
       RowBox[{"J", "=", 
        RowBox[{"HitList", "[", "\[Beta]", "]"}]}], ";", 
       RowBox[{"FstPlan", "=", 
        RowBox[{"LastPlan", "[", "J", "]"}]}], ";", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"J", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "FstPlan"}], "}"}]}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ShortedHitList", "[", "\[Beta]_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"J", ",", "multi", ",", "FstPlan"}], "}"}], ",", 
      RowBox[{
       RowBox[{"J", "=", 
        RowBox[{"HitList", "[", "\[Beta]", "]"}]}], ";", 
       RowBox[{"multi", "=", 
        RowBox[{"CountPlan", "[", "J", "]"}]}], ";", 
       RowBox[{"FstPlan", "=", 
        RowBox[{"LastPlan", "[", "J", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"multi", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "0"}], ",", "0", 
             ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"multi", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "\[NotEqual]", "1"}], " ", 
               ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Abs", "[", " ", 
                   RowBox[{"J", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"FstPlan", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "5"}], "]"}], "]"}], 
                   "]"}], "<", 
                  RowBox[{"Abs", "[", 
                   RowBox[{"J", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FstPlan", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", "1"}], ",", "5"}], 
                    "]"}], "]"}], "]"}]}], ",", 
                 RowBox[{"J", "[", 
                  RowBox[{"[", 
                   RowBox[{"FstPlan", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
                 RowBox[{"J", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"FstPlan", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", "1"}], "]"}], 
                  "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"J", "[", 
                RowBox[{"[", 
                 RowBox[{"FstPlan", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], 
              "\[IndentingNewLine]", "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "6"}], "}"}]}], "]"}], ",", "0", ",", "1"}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5520177806244836`*^9, 3.552017874226837*^9}, {
   3.5520215253966722`*^9, 3.552021587123203*^9}, {3.5520216551680946`*^9, 
   3.5520218291840477`*^9}, {3.5529601858350277`*^9, 3.552960189326357*^9}, {
   3.5530520749418526`*^9, 3.5530520854624543`*^9}, {3.5530523648060293`*^9, 
   3.5530523768247166`*^9}, {3.5530525533428125`*^9, 3.553052565046482*^9}, {
   3.553052737953372*^9, 3.5530527421376114`*^9}, {3.553052812721648*^9, 
   3.55305283564596*^9}, 3.553052900271656*^9, {3.5530529696636252`*^9, 
   3.5530529700646477`*^9}, {3.5530576884935265`*^9, 
   3.5530577626217666`*^9}, {3.5530577943465815`*^9, 
   3.5530578192710066`*^9}, {3.553057945842246*^9, 3.553057957846933*^9}, {
   3.5530581012621355`*^9, 3.553058102455204*^9}, {3.553058871400185*^9, 
   3.553058880839725*^9}, {3.553059228798627*^9, 3.5530592302037077`*^9}, {
   3.5530615230478506`*^9, 3.5530615377816935`*^9}, {3.5531302822348633`*^9, 
   3.5531302842839804`*^9}, 3.553132066038891*^9, {3.5531335830436583`*^9, 
   3.55313361244134*^9}, {3.5531338127557974`*^9, 3.553133823910435*^9}, {
   3.553133906727172*^9, 3.5531339079412413`*^9}, {3.553134025329956*^9, 
   3.5531340377866683`*^9}, {3.5531342091904716`*^9, 3.553134209476488*^9}, {
   3.5531346462994733`*^9, 3.5531346805154305`*^9}, {3.553428062223484*^9, 
   3.5534281339855886`*^9}, {3.5534924784328804`*^9, 3.553492481465054*^9}, {
   3.5534994657395315`*^9, 3.5534994748440523`*^9}, {3.5553442092040772`*^9, 
   3.555344209394088*^9}, {3.555344243329029*^9, 3.5553442434790373`*^9}, {
   3.5571957377975693`*^9, 3.5571958754151497`*^9}, {3.557196092153804*^9, 
   3.557196315753784*^9}, {3.5571963578661346`*^9, 3.557196393525681*^9}, {
   3.557197932570318*^9, 3.557197943818966*^9}, {3.557198091981203*^9, 
   3.557198101991798*^9}, {3.557198841346348*^9, 3.557198890805848*^9}, {
   3.5571989841033382`*^9, 3.557198985296022*^9}, {3.557725903117174*^9, 
   3.557725907584282*^9}, {3.558055131640943*^9, 3.558055144057179*^9}, {
   3.5649839954307423`*^9, 3.5649841329256067`*^9}, {3.5649842181324806`*^9, 
   3.5649842187215137`*^9}, {3.5649842727876062`*^9, 
   3.5649842984270725`*^9}, {3.564984582582326*^9, 3.564984619092414*^9}, 
   3.564984851923731*^9, {3.5649862908130307`*^9, 3.5649862981244493`*^9}, {
   3.5649876777013564`*^9, 3.564987679824478*^9}, 3.5649877501725016`*^9, {
   3.567227644282699*^9, 3.567227662107471*^9}, 3.5672277109212933`*^9, {
   3.5672278471629267`*^9, 3.567227882476046*^9}, {3.5672279186226273`*^9, 
   3.567227941361743*^9}, {3.5672360094046783`*^9, 3.5672360219931726`*^9}, {
   3.567238767400632*^9, 3.567238768369836*^9}, {3.579144902354768*^9, 
   3.5791449411229854`*^9}, 3.5791449766150155`*^9, {3.5791453418269043`*^9, 
   3.5791454201283827`*^9}, {3.5791467690775385`*^9, 3.579146787428588*^9}, {
   3.579147188694539*^9, 3.5791472026483374`*^9}, {3.579147233654111*^9, 
   3.579147266408984*^9}, {3.579147334274866*^9, 3.5791473681148014`*^9}, {
   3.57914888303645*^9, 3.5791488860636234`*^9}, {3.5791489738206425`*^9, 
   3.5791490430216007`*^9}, {3.5791490935694914`*^9, 3.579149112051549*^9}, {
   3.579150638316846*^9, 3.5791506696326375`*^9}, {3.5791512383761673`*^9, 
   3.579151261533492*^9}, {3.5791517878915977`*^9, 3.5791518355403233`*^9}, {
   3.5791519956814833`*^9, 3.579152085176602*^9}, {3.5791522234545107`*^9, 
   3.5791522320560026`*^9}, {3.5791522710772347`*^9, 3.579152287058149*^9}, {
   3.5791523176458983`*^9, 3.579152336717989*^9}, {3.5791523756582165`*^9, 
   3.579152406297969*^9}, {3.5791528921977606`*^9, 3.579152892585783*^9}, {
   3.5791550768927183`*^9, 3.5791551035062404`*^9}, {3.579157549137122*^9, 
   3.5791575534683704`*^9}, {3.5795676040876102`*^9, 3.579567678480936*^9}, {
   3.579567709259562*^9, 3.579567714686964*^9}, {3.579567879677166*^9, 
   3.5795679198237133`*^9}, {3.579606501646816*^9, 3.579606501947833*^9}, {
   3.5796066208976364`*^9, 3.579606648893238*^9}, {3.5796067831739182`*^9, 
   3.5796068095024242`*^9}, {3.5796068981324935`*^9, 3.579606903175782*^9}, {
   3.5796109847972374`*^9, 3.579610988257435*^9}, {3.5796110231274295`*^9, 
   3.5796110326139727`*^9}, {3.5796558441630464`*^9, 3.579655931367034*^9}, 
   3.5796560343519244`*^9, {3.579849507269679*^9, 3.579849514243731*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Target Ray Geometry", "Section",
 CellChangeTimes->{{3.5534154403367577`*^9, 3.553415460281599*^9}, {
  3.579606723684516*^9, 3.579606725473618*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Crystal", "[", "mwdc_", "]"}], ":=", 
   RowBox[{"Switch", "[", 
    RowBox[{"mwdc", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"942.86", ",", "0", ",", 
         RowBox[{"-", "1400"}]}], "}"}], ",", " ", "Plastics"}], "*)"}], 
     "\[IndentingNewLine]", "1", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"390.36", "+", "552.5"}], ",", "0", ",", 
       RowBox[{"-", "982.37"}]}], "}"}], ",", "\[IndentingNewLine]", "2", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "390.36"}], "+", "552.5"}], ",", "0", ",", 
       RowBox[{"-", "982.37"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "norm", " ", "Ray", " ", "vector", " ", "in", " ", "mwdc", " ", "frame"}],
     ",", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], " ", "=", " ", 
     RowBox[{"lab", " ", "angle"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Rayn", "[", 
    RowBox[{"mwdc_", ",", "\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"RotationMatrix", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "mwdc"], 
       FractionBox["\[Pi]", "3"]}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"mwdc", "+", "1"}]], 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", " ", "\[Degree]"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", " ", "\[Degree]"}], "]"}]}], ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"mwdc", "+", "1"}]], 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", " ", "\[Degree]"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", " ", "\[Degree]"}], "]"}]}], ",", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", " ", "\[Degree]"}], "]"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Ray", " ", "from", " ", "Crystal"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RayC", "[", 
   RowBox[{"mwdc_", ",", "\[Theta]_", ",", "\[Phi]_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Crystal", "[", "mwdc", "]"}], "+", 
   RowBox[{"s", " ", 
    RowBox[{"Rayn", "[", 
     RowBox[{"mwdc", ",", "\[Theta]", ",", "\[Phi]"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ray\[Beta]", "[", 
   RowBox[{"mwdc_", ",", "\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RayC", "[", 
      RowBox[{"mwdc", ",", "\[Theta]", ",", "\[Phi]", ",", 
       RowBox[{"s", "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"RayC", "[", 
               RowBox[{"mwdc", ",", "\[Theta]", ",", "\[Phi]", ",", "s"}], 
               "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}], ",", "s"}], 
           "]"}], ",", "1"}], "]"}]}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"#1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{"#1", "[", 
          RowBox[{"[", "3", "]"}], "]"}]], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RayC", "[", 
          RowBox[{"mwdc", ",", "\[Theta]", ",", "\[Phi]", ",", "100"}], "]"}],
          "-", 
         RowBox[{"RayC", "[", 
          RowBox[{"mwdc", ",", "\[Theta]", ",", "\[Phi]", ",", "0"}], "]"}]}],
         "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RayC", "[", 
      RowBox[{"mwdc", ",", "\[Theta]", ",", "\[Phi]", ",", 
       RowBox[{"s", "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"RayC", "[", 
               RowBox[{"mwdc", ",", "\[Theta]", ",", "\[Phi]", ",", "s"}], 
               "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}], ",", "s"}], 
           "]"}], ",", "1"}], "]"}]}]}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"#1", "[", 
          RowBox[{"[", "2", "]"}], "]"}], 
         RowBox[{"#1", "[", 
          RowBox[{"[", "3", "]"}], "]"}]], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RayC", "[", 
          RowBox[{"mwdc", ",", "\[Theta]", ",", "\[Phi]", ",", "100"}], "]"}],
          "-", 
         RowBox[{"RayC", "[", 
          RowBox[{"mwdc", ",", "\[Theta]", ",", "\[Phi]", ",", "0"}], "]"}]}],
         "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "}"}], " "}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.558057055957773*^9, 3.558057066162963*^9}, {
   3.558057127726726*^9, 3.558057321889035*^9}, {3.5580574341908417`*^9, 
   3.5580574343737392`*^9}, {3.558057566492001*^9, 3.5580576181968193`*^9}, {
   3.558057651013768*^9, 3.558057709619234*^9}, {3.5580578797778263`*^9, 
   3.558057897512845*^9}, {3.558058047321741*^9, 3.558058068950235*^9}, {
   3.5580581188929453`*^9, 3.558058199686854*^9}, {3.5580583417434464`*^9, 
   3.558058351364592*^9}, {3.558058398679124*^9, 3.5580584487729187`*^9}, {
   3.55805851804251*^9, 3.55805852783724*^9}, {3.558058594139885*^9, 
   3.558058595542695*^9}, {3.558058631029923*^9, 3.558058634508396*^9}, {
   3.558058676219328*^9, 3.558058736331064*^9}, {3.558058776239406*^9, 
   3.5580588312435207`*^9}, {3.558058887993965*^9, 3.5580589382202168`*^9}, {
   3.558059098286584*^9, 3.5580591342620907`*^9}, {3.558059212691807*^9, 
   3.55805923643647*^9}, {3.558059479257172*^9, 3.558059506704895*^9}, {
   3.558059632493701*^9, 3.5580596368419037`*^9}, {3.5580596718501253`*^9, 
   3.558059696347932*^9}, {3.558059731341448*^9, 3.558059761469487*^9}, {
   3.5580627675512867`*^9, 3.558062770195809*^9}, {3.5599650367448597`*^9, 
   3.5599650606435947`*^9}, {3.559965115366501*^9, 3.559965116049974*^9}, {
   3.5644630968751993`*^9, 3.564463118776507*^9}, {3.5649112026221647`*^9, 
   3.5649112085292063`*^9}, {3.5649885771918044`*^9, 
   3.5649885853262696`*^9}, {3.564988744941399*^9, 3.5649887785323205`*^9}, {
   3.5649890833267536`*^9, 3.5649890888650703`*^9}, 3.564989209966997*^9, {
   3.5649893053624535`*^9, 3.564989311878826*^9}, {3.564989409915433*^9, 
   3.56498944115322*^9}, {3.5649894948342905`*^9, 3.5649895079660416`*^9}, {
   3.5649918630797462`*^9, 3.5649918789436536`*^9}, {3.564991952777877*^9, 
   3.564991957718159*^9}, {3.564992017072554*^9, 3.564992035200591*^9}, {
   3.564992613277655*^9, 3.5649926560000987`*^9}, {3.5649951718849993`*^9, 
   3.5649952346875916`*^9}, {3.565042392390823*^9, 3.5650424091985283`*^9}, {
   3.565758415745837*^9, 3.565758430006653*^9}, 3.565758733297*^9, {
   3.5657810831383376`*^9, 3.565781100683341*^9}, {3.565781436836568*^9, 
   3.565781443654958*^9}, {3.5657818771317515`*^9, 3.5657819694580326`*^9}, {
   3.565782197962102*^9, 3.5657822366253133`*^9}, {3.56578230475021*^9, 
   3.5657823103525305`*^9}, 3.565782350439823*^9, 3.565782561326885*^9, {
   3.5657831907408857`*^9, 3.5657832017275143`*^9}, 3.567229001502516*^9, {
   3.5789932175986347`*^9, 3.5789932546908493`*^9}, {3.5791455370850725`*^9, 
   3.5791455456435623`*^9}, {3.5791539730875845`*^9, 
   3.5791539745096655`*^9}, {3.57915483775504*^9, 3.5791548765022564`*^9}, {
   3.5796063526642942`*^9, 3.579606355351448*^9}, 3.579606655901639*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["ReConstruction  - Multi - Demension Regession", "Section",
 CellChangeTimes->{{3.559902076815269*^9, 3.5599021148023577`*^9}, 
   3.56498825104815*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Binery", "[", 
   RowBox[{"n_", ",", "digit_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"n", ",", "2"}], "]"}], "]"}], "<", "digit"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"Join", "[", " ", 
     RowBox[{
      RowBox[{"Reverse", "[", 
       RowBox[{"IntegerDigits", "[", 
        RowBox[{"n", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"digit", "-", 
           RowBox[{"Length", "[", 
            RowBox[{"IntegerDigits", "[", 
             RowBox[{"n", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Reverse", "[", 
     RowBox[{"IntegerDigits", "[", 
      RowBox[{"n", ",", "2"}], "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PossPos", "[", 
   RowBox[{"J_", ",", "\[Sigma]_", ",", "corr_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"len", ",", "tran", ",", "bin"}], "}"}], ",", 
    RowBox[{
     RowBox[{"len", "=", 
      RowBox[{"Length", "[", "J", "]"}]}], ";", 
     RowBox[{"tran", "=", 
      RowBox[{"Transpose", "[", "J", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"bin", "=", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"Binery", "[", 
           RowBox[{"i", ",", "len"}], "]"}]]}], ";", 
        RowBox[{
         RowBox[{"tran", "[", 
          RowBox[{"[", "6", "]"}], "]"}], "+", 
         RowBox[{"bin", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tran", "[", 
             RowBox[{"[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"corr", "\[Equal]", "1"}], ",", "7", ",", "5"}], 
               "]"}], "]"}], "]"}], "+", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"0", ",", "\[Sigma]"}], "]"}], ",", "len"}], "]"}]}], 
           ")"}]}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{
          SuperscriptBox["2", "len"], "-", "1"}]}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zpos", "[", "plane_", "]"}], ":=", 
  RowBox[{"Switch", "[", 
   RowBox[{"plane", ",", "\[IndentingNewLine]", "1", ",", 
    RowBox[{"-", "40"}], ",", "\[IndentingNewLine]", "2", ",", 
    RowBox[{"-", "24"}], ",", "\[IndentingNewLine]", "3", ",", 
    RowBox[{"-", "8"}], ",", "\[IndentingNewLine]", "4", ",", "8", ",", 
    "\[IndentingNewLine]", "5", ",", "24", ",", "\[IndentingNewLine]", "6", 
    ",", "40"}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5796065358177705`*^9, 3.579606536674819*^9}, {
  3.57961014598526*^9, 3.5796101462212734`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{
   "z1_", ",", "z2_", ",", "z3_", ",", "z4_", ",", "z5_", ",", "z6_"}], "]"}],
   ":=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"plan\[Theta]", "[", "1", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"plan\[Theta]", "[", "1", "]"}], "]"}], "z1"}], ",", 
      RowBox[{"Sin", "[", 
       RowBox[{"plan\[Theta]", "[", "1", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"plan\[Theta]", "[", "1", "]"}], "]"}], "z1"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"plan\[Theta]", "[", "2", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"plan\[Theta]", "[", "2", "]"}], "]"}], "z2"}], ",", 
      RowBox[{"Sin", "[", 
       RowBox[{"plan\[Theta]", "[", "2", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"plan\[Theta]", "[", "2", "]"}], "]"}], "z2"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"plan\[Theta]", "[", "3", "]"}], "]"}], " ", ",", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"plan\[Theta]", "[", "3", "]"}], "]"}], " ", "z3"}], ",", 
      RowBox[{"Sin", "[", 
       RowBox[{"plan\[Theta]", "[", "3", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"plan\[Theta]", "[", "3", "]"}], "]"}], "z3"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"plan\[Theta]", "[", "4", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"plan\[Theta]", "[", "4", "]"}], "]"}], " ", "z4"}], ",", 
      RowBox[{"Sin", "[", 
       RowBox[{"plan\[Theta]", "[", "4", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"plan\[Theta]", "[", "4", "]"}], "]"}], "z4"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"plan\[Theta]", "[", "5", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"plan\[Theta]", "[", "5", "]"}], "]"}], " ", "z5"}], ",", 
      RowBox[{"Sin", "[", 
       RowBox[{"plan\[Theta]", "[", "5", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"plan\[Theta]", "[", "5", "]"}], "]"}], "z5"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"plan\[Theta]", "[", "6", "]"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"plan\[Theta]", "[", "6", "]"}], "]"}], "z6"}], ",", 
      RowBox[{"Sin", "[", 
       RowBox[{"plan\[Theta]", "[", "6", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"plan\[Theta]", "[", "6", "]"}], "]"}], "z6"}]}], "}"}]}], 
   "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h6", "=", 
   RowBox[{"h", "[", 
    RowBox[{
     RowBox[{"-", "40"}], ",", 
     RowBox[{"-", "24"}], ",", 
     RowBox[{"-", "8"}], ",", "8", ",", "24", ",", "40"}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wstart", "[", 
  RowBox[{"1", ",", "16"}], "]"}]], "Input",
 CellChangeTimes->{{3.590119381142955*^9, 3.590119385793041*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"300", ",", "0", ",", 
   RowBox[{"-", "40"}]}], "}"}]], "Output",
 CellChangeTimes->{3.590119388971919*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "test", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"k", "=", 
     RowBox[{"Ray\[Beta]", "[", 
      RowBox[{"1", ",", "40", ",", "10"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"MWDC2", "[", 
    RowBox[{"k", ",", "600", ",", "0.1"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HitList", "[", "k", "]"}], "//", "TableForm"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J", "=", 
     RowBox[{"ShortedHitList", "[", "k", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"J", "//", "TableForm"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PosiYList", "=", 
     RowBox[{"PossPos", "[", 
      RowBox[{"J", ",", "0.001", ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SSError", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"LinearModelFit", "[", 
            RowBox[{"{", 
             RowBox[{"h6", ",", 
              RowBox[{"PosiYList", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], "[", 
           "\"\<ANOVATableEntries\>\"", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "64"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SortedSSError", "=", 
     RowBox[{"Sort", "[", 
      RowBox[{"SSError", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "<", 
         RowBox[{"#2", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LinearModelFit", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"h6", ",", 
        RowBox[{"PosiYList", "[", 
         RowBox[{"[", 
          RowBox[{"SortedSSError", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x0", ",", "a", ",", "y0", ",", "b"}], "}"}]}], "]"}], "[", 
    "\"\<ParameterConfidenceIntervalTable\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LinearModelFit", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"h6", ",", 
        RowBox[{"PosiYList", "[", 
         RowBox[{"[", 
          RowBox[{"SortedSSError", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x0", ",", "a", ",", "y0", ",", "b"}], "}"}]}], "]"}], "[", 
    "\"\<ANOVATable\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Est\[Beta]", "=", 
    RowBox[{
     RowBox[{"LinearModelFit", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"h6", ",", 
         RowBox[{"PosiYList", "[", 
          RowBox[{"[", 
           RowBox[{"SortedSSError", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"x0", ",", "a", ",", "y0", ",", "b"}], "}"}]}], "]"}], "[", 
     RowBox[{"{", 
      RowBox[{"\"\<BestFitParameters\>\"", ",", "\"\<ParameterErrors\>\""}], 
      "}"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"Est\[Beta]", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"k", "-", 
       RowBox[{"Est\[Beta]", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "//", 
    "TableForm"}]}]}]], "Input",
 CellChangeTimes->{{3.5796098822311745`*^9, 3.5796099120108776`*^9}, {
   3.5796099527872095`*^9, 3.579609962921789*^9}, {3.5796555836081433`*^9, 
   3.5796555838111553`*^9}, 3.579656090255122*^9, {3.5796571185929394`*^9, 
   3.5796571187509484`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {GrayLevel[0], Arrow3DBox[{{600, 0, -40}, {600, 0, 60}}]}, 
   {GrayLevel[0], Arrow3DBox[{{600, 0, -40}, {640, 0, -40}}]}, 
   {GrayLevel[0], 
    Arrow3DBox[{{600, 0, -40}, {600, 174.93959250476337`, -40}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    Arrow3DBox[{{599.2597462357141, 110.55626307224746`, -60}, {
      554.5574787598482, 124.93959250476335`, 60}}]}, {
    {RGBColor[0, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     CuboidBox[{550, 90.55626307224746, -48}, {
      570, 144.93959250476337`, -32}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     CuboidBox[{570, 90.55626307224746, -48}, {
      590, 144.93959250476337`, -32}]}, 
    {RGBColor[0, 1, 0], Opacity[0.5], EdgeForm[Opacity[0.1]], 
     CuboidBox[{590, 90.55626307224746, -48}, {
      610, 144.93959250476337`, -32}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     CuboidBox[{610, 90.55626307224746, -48}, {
      630, 144.93959250476337`, -32}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     CuboidBox[{630, 90.55626307224746, -48}, {
      650, 144.93959250476337`, -32}]}}, {
    {RGBColor[0, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     CuboidBox[{535, 90.55626307224746, -32}, {
      555, 144.93959250476337`, -16}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     CuboidBox[{555, 90.55626307224746, -32}, {
      575, 144.93959250476337`, -16}]}, 
    {RGBColor[0, 1, 0], Opacity[0.5], EdgeForm[Opacity[0.1]], 
     CuboidBox[{575, 90.55626307224746, -32}, {
      595, 144.93959250476337`, -16}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     CuboidBox[{595, 90.55626307224746, -32}, {
      615, 144.93959250476337`, -16}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     CuboidBox[{615, 90.55626307224746, -32}, {
      635, 144.93959250476337`, -16}]}}, {
    {RGBColor[1, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{603.125, 113.19532884030933`, -16}, {
       623.125, 181.1744906309542, 0}], {{{0.8, -0.5999999999999999, 0.}, {
       0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {
       122.625, -367.87499999999994`, 0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{628.125, 113.19532884030933`, -16}, {
       648.125, 181.1744906309542, 0}], {{{0.8, -0.5999999999999999, 0.}, {
       0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {
       127.625, -382.87499999999994`, 0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.5], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{653.125, 113.19532884030933`, -16}, {
       673.125, 181.1744906309542, 0}], {{{0.8, -0.5999999999999999, 0.}, {
       0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {
       132.625, -397.8749999999999, 0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{678.125, 113.19532884030933`, -16}, {
       698.125, 181.1744906309542, 0}], {{{0.8, -0.5999999999999999, 0.}, {
       0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {
       137.625, -412.8749999999999, 0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{703.125, 113.19532884030933`, -16}, {
       723.125, 181.1744906309542, 0}], {{{0.8, -0.5999999999999999, 0.}, {
       0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {
       142.625, -427.8749999999999, 0.}}]}}, {
    {RGBColor[1, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{599.5, 113.19532884030933`, 0}, {
       619.5, 181.1744906309542, 16}], {{{0.8, -0.5999999999999999, 0.}, {
       0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {
       121.89999999999998`, -365.69999999999993`, 0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{624.5, 113.19532884030933`, 0}, {
       644.5, 181.1744906309542, 16}], {{{0.8, -0.5999999999999999, 0.}, {
       0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {
       126.89999999999998`, -380.69999999999993`, 0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.5], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{649.5, 113.19532884030933`, 0}, {
       669.5, 181.1744906309542, 16}], {{{0.8, -0.5999999999999999, 0.}, {
       0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {
       131.89999999999998`, -395.69999999999993`, 0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{674.5, 113.19532884030933`, 0}, {
       694.5, 181.1744906309542, 16}], {{{0.8, -0.5999999999999999, 0.}, {
       0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {
       136.89999999999998`, -410.69999999999993`, 0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{699.5, 113.19532884030933`, 0}, {
       719.5, 181.1744906309542, 16}], {{{0.8, -0.5999999999999999, 0.}, {
       0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {
       141.89999999999998`, -425.69999999999993`, 0.}}]}}, {
    {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{428.125, 113.19532884030933`, 16}, {
       448.125, 181.1744906309542, 32}], {{{0.8, 0.5999999999999999, 
       0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {87.625, 
       262.87499999999994`, 0.}}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{453.125, 113.19532884030933`, 16}, {
       473.125, 181.1744906309542, 32}], {{{0.8, 0.5999999999999999, 
       0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {92.625, 
       277.87499999999994`, 0.}}]}, 
    {RGBColor[0, 0, 1], Opacity[0.5], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{478.125, 113.19532884030933`, 16}, {
       498.125, 181.1744906309542, 32}], {{{0.8, 0.5999999999999999, 
       0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {97.625, 
       292.87499999999994`, 0.}}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{503.125, 113.19532884030933`, 16}, {
       523.125, 181.1744906309542, 32}], {{{0.8, 0.5999999999999999, 
       0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {102.625, 
       307.87499999999994`, 0.}}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{528.125, 113.19532884030933`, 16}, {
       548.125, 181.1744906309542, 32}], {{{0.8, 0.5999999999999999, 
       0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {107.625, 
       322.87499999999994`, 0.}}]}}, {
    {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{399.5, 113.19532884030933`, 32}, {
       419.5, 181.1744906309542, 48}], {{{0.8, 0.5999999999999999, 
       0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {81.89999999999998,
        245.69999999999993`, 0.}}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{424.5, 113.19532884030933`, 32}, {
       444.5, 181.1744906309542, 48}], {{{0.8, 0.5999999999999999, 
       0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {86.89999999999998,
        260.69999999999993`, 0.}}]}, 
    {RGBColor[0, 0, 1], Opacity[0.5], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{449.5, 113.19532884030933`, 32}, {
       469.5, 181.1744906309542, 48}], {{{0.8, 0.5999999999999999, 
       0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {91.89999999999998,
        275.69999999999993`, 0.}}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{474.5, 113.19532884030933`, 32}, {
       494.5, 181.1744906309542, 48}], {{{0.8, 0.5999999999999999, 
       0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {96.89999999999998,
        290.69999999999993`, 0.}}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[Opacity[0.1]], 
     GeometricTransformation3DBox[
      CuboidBox[{499.5, 113.19532884030933`, 32}, {
       519.5, 181.1744906309542, 48}], {{{0.8, 0.5999999999999999, 
       0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {
       101.89999999999998`, 305.69999999999993`, 0.}}]}}, {
    {RGBColor[1, 0, 0], Opacity[0.5], 
     CylinderBox[{{600., 70.55626307224746, -40.}, {600., 
      164.93959250476337`, -40.}}, -7.6753700907413895`]}, 
    {RGBColor[1, 0, 0], Opacity[0.5], 
     CylinderBox[{{585., 70.55626307224746, -24.}, {585., 
      164.93959250476337`, -24.}}, 0.7956523970846978]}, 
    {RGBColor[1, 0, 0], Opacity[0.5], 
     CylinderBox[{{610.2078026958144, 70.55626307224746, -8.}, {
      539.4203056214275, 164.93959250476337`, -8.}}, 3.398646844418651]}, 
    {RGBColor[1, 0, 0], Opacity[0.5], 
     CylinderBox[{{606.5828026958144, 70.55626307224746, 8.}, {
      535.7953056214275, 164.93959250476337`, 8.}}, 2.698738209974338]}, 
    {RGBColor[1, 0, 0], Opacity[0.5], 
     CylinderBox[{{541.0421973041856, 70.55626307224746, 24.}, {
      611.8296943785725, 164.93959250476337`, 24.}}, -7.972217462697875]}, 
    {RGBColor[1, 0, 0], Opacity[0.5], 
     CylinderBox[{{512.4171973041856, 70.55626307224746, 40.}, {
      583.2046943785725, 164.93959250476337`, 40.}}, 7.9540542163500065`]}}, 
   Text3DBox["31", {590, 0, -40}]},
  ImageSize->600,
  ViewPoint->{-0.8593043304794026, 1.7829064406475972`, -2.7446021007637262`},
  ViewVertical->{-0.09546255526849413, 
   2.0699524518480086`, -0.0883297783815877}]], "Output",
 CellChangeTimes->{{3.579609914566024*^9, 3.579609965217921*^9}, 
   3.579610995350841*^9, 3.579611037923276*^9, 3.579655585509252*^9, 
   3.5796559927235436`*^9, 3.5796560411193113`*^9, 3.579656091539195*^9, 
   3.579657120074024*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzkvQlUVVe2Njrf6ehFY99Fpe+lUVFjlz5Gk2hiEtN3JlVJJRUSFMVAJKLY
ICitgoCCggIKCig22LelSUwqlaSapG5V6t5b/61R975//Pd/4437/vFGvTnn
Xmuddc5ZYFDMG+M9h3OfcxZ7n9V93+zW2vs89tryn7/53mvL337jtYkPf/ha
xs/ffiNz4kPvf4hF9v8NwLYU5bWJQO//ASAP/8D/1uF5OlCxLBhMBzu89dZb
D3v/KZAOLvqTnf/EZ4H4IzzgfbpDnR5A72z07kHtpP9b/T3U+Pf/U/19uPHv
/50OflQ61vj3v6nrw7yaS696c/9ZnRlzkzP/qM5MusmZv1VnTrnJmb9WZ87k
UofHsOL7+7WTP1Un32v4Wv3My+rMh29y5ll15mM3OfO4GvKnzE29Tzu5U33t
8zc/+aA6+dWbn7xPnWyd4vQ4WTb8Xu2KenXFuz/yip3qig9/5BUV6opVP/KK
reqKjw2EshnK5mhXb1JXr7uFq/PV1Ztv4eocBYRtt3B1lqp7u+FMk3KZrV2d
oa6uvYWr31FX77mFq5epq5tv4eqX1dXthjMdhrJZ2tVL1dVHbuHqJ9XVJ2/h
6oXq6nO3cPWDCi1XDGc6DWX3aFfPVXV/fgtXz1BX/+YWrk5TV//+Fq5OVFf/
yXCmy1A2U7s6Wl391x9Zt371JHX1v9/C1WPV1f95C1cPV1f/14/s9wzt6kEK
Lf+4hav9Vd3/sL6n/19h8/yKkP59xf/yvHqo4UxTo6ZbV/8fnleP7t/V/7vn
1RP6d/W/eV4d2b+r/+J5dbzhTH9DWbp19feeV6f07+pvPCGT3r+rv/Cse47h
zABD2TTr6mueVz/Qv6svel79aP+uPu159aL+XX3M8+pnDGcGGsqmWld3eF79
Yv+uPuB59ev9u7rJ8+qf9+/q3Z5X/9JwZpChzPLjocoTa8v7d3WZZ90f9e/q
Is+rP+nf1Rs8r95gODPYUJZmXf2J59XFP7JucfVHnleX9+/qFZ5XV/fv6vc9
r979I/udal39tufVTf27+nVPtBzo39Uvetbd2b+rn/G8+rjhTJNts3QvLPK8
+kz/rn7U8+pL/bv6Ac+rr/fv6rn04lRXf2k4c5ChLNm6mtW/TV399S1c7RVB
8wkm7/Mn+x6faJrffGW4LNRQNln/KnNUy+9+/f/u9802/MkUkfHxxk/83YMN
ZUm9f7cpouKjKQTq53ebvHc+fvYTf/cQQ1li799t8rn5+Ontf7fJr91FRzvl
S+3qHf8lvH/1zTL8yeSNNogRtDK0bj6oeiNuv16TN1h/K/XeZShL6L1ekzdW
R0cb1SLR7tGC/ox0P2veZajPdgfbYPJNdt1s1E3h1wDUW+OJaluf9Zlm2Qrs
RJ7j5jZ5vVVfXl6euypThNXPqkwmL5ePDjhz5gzVJ0V0lj7Z+W/0jz7xVSZt
MABtWam6jQ2aN28eyH/4noulNpMNUoMzAA0yGTK5CMAdF2VRqpEW7q2WyqHD
lrFz6aBPfIEJY6b8RlzvTTPZk/u95k0M0yTDdPLoyekcagHYmljFHclbU+0D
0Fi57CJaw3Uysr3GdvTNxna0d+vl326l9TN/JGjmaK2X/xyi9TTOntfenEry
/PGqM7oeVWfQccbt98h0ujyP6pLz4UeHUDN8bIbZQIny6YCc4D47MMxQFtu/
Dkw3ACrAOtwEQQnaUMtv63X4p99+602nTzUAKlA0V6cDtsVm0IYSTml9dMVn
Iu5QV1INSBpsHvkZhubatTKPkTdlI/vZ3OGGssmGkQ8VI6qG6x//UO6uqa2y
q3221VR5TO9tHWEoi9fqk+0dalA7swxtlc4htdNjXKf1r60m+o7sdRo8YTCC
DrO9/kCfnIaygWrcKEMZrwmNMZgbnglmmAxlfMZr6u03ybQc4T23lnHA42DD
BM/waabPyJmaacJUdP+aOa23ZjoNnHE3UwZqUgGoZnrv6riFZo4xlM3Tmtl7
a6TTOJCtGWsok+lpHUu9jkha/9pg0uLj+miDrhN6HQdTG0wkj+q9DeMNZasN
bZChtM84pP50bQg0lPHRtH7WzzbcbSjL7q0NNhUjmHpv0mSRvdc8wVC2ylBz
kKGsX73vZxtWqp6G3LzPfdRnMrKTDGVZqhYZYfr4Fsm3X7P35jiSFT41+zhh
pppN8xxxqzXLINanz5Nvv2ZTTme5T80+fb6TNXtp2V57773v8BbaYMrnZRq4
JNvgY6JNbTDZ3PDe22DKNn1oaIMMwX28mcT+tcHkj0X1sw0+4zAAbYg2lH1g
aIPM/PmMQ8Ltt8F70yvJ+4Y+32Uo67UNJucm7BbawIyU4ZJP7027TPpZc6yh
7Jc+Nft4GgNQc5yh7D1Vs3TNffwL02V91Gzyp02N963Zp8+mmk1u46TeazZB
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
wkMCDFyN2RbDK9h+iqs26Y6+PlKQdQjEPRjMgSBZNKRp5AyU6bRIR0c//iyp
Ox3p+rCbtsqCUmplinBNLd6O4ORK/P1DFW8T1w2HGWjBk6uSIbLMzdWwrdZS
dkRJBHN2bsMcuH/3HEj+JBbeKnrWw4Liext/cMiP0luVCcqqhjzIzs/gGXUI
Xq5pdkeBsiy7EDlZl8sstUyoCw425sOuykwoRpbv223x9cLFxtGCrqeRbwda
S6CubrPyUImu+5otutqYsHbobt7AbCWRvL2I5vSrM9Y+RdpqRSvdkrcNZZvU
7S1hAvTdyNu9Hrwd6xHXHRNcPC/s4jbkXTnaRe98ylHBWxn/XRAu61WNtzdQ
vkT5NUoZfs+r+Hr/wPH3+z9//6OWDpqPNXulMv18lvPIpn7Uls0+rFNw92N8
X1ibJbaNW9wtacqBgt35zNoRgrv6fcMm7srFclo3IFtL3I3MDoeobOs9lcW/
GoeR3rO0vBD1FBY/jlxeFAkJTyKXn4oiYtog5WnaGJnyTCykLY1nsfHRuvfS
s8wBr94zBnYPBcjDv70XG+IvWBz7ZqyHxSUWu7xYjGb3oyAY95rwfl8bCRFz
6WlRFpUjkLYR0y2xqBwAUdOtdyRE5xledCYy25jIdjbBMk/q4uMomIHRZuKD
QyB2cQg7xHHrh7I5TkMKT6XnPm4Lh0n4edKWuy1nvTwW7tszh/82A01x+noM
tvLny8hSmWHBYZsVbvqa36HCM66sWwMllTmQs44Jbvfi9xpplamsKAPqK7KY
0w7B713bs6C6DL2xtRa/29uKid8jhZd8gh4a1ogeMnJz//5yh6B4W2cptLUX
CHJbx87GdT4Up9TP1fZypjmZ5osHqxTFrx2uVzSXvyxPKR7PqHSUijbb586F
1fHpcGjWLDa3ZGqvCapuRH2/E6neLqJSmeLxjkqvims+dVPcxhy3w1d4LBdM
v69/TB81AIsW9UfqvZju8mA6sXyF5Tm7mOQOWLcvE2o7CqC4PpscaMnzzbuz
oHh/oUcSiHjuvSnGa20+i8PXFRan6TViBdlofOMHCSswdn0FbeeScJY4ZHvc
UxFsdAN7JbIdUp+Ng3n3jYN3YyiwJDrb4eFHo5nPJA7B7OhXo32Y7VDMdghm
056ZiS+EejDbZmA2PWrTYRE6SNE7YpoDZgpK69SWi4pzlXftZEpPmxcCSfcP
x5h7CKS+R/s/UjaNxQlneiO1KZk0ccNImFyRQPvRYNbudLh/L77uSod5dXMg
NjcMXtm4WK4bSiebGCzLJJvpdbi8lQCpuW1HNmyvzoe63Zskq23KrxbUJkJ/
0iJNNx6R2p14bXVxBtHbst5+zPSqkgzYsTWDPW6N4VillWw63FkBB5sr4Cyy
kgRpLpYX7bww0txWBB2H8/FMX54PNvDc25QTz+u2roe//OUv6mcbKSxu8OK5
dK8PIs8rpj4IBUmPwcbEhbAj9T7onjkTPhfm+DLyvBj5TlkqGRZLnuthseT5
55Ybzjy3aG5XRKfWzBs4st9sPaV3sjsV2Skdld1sueJ+gunrRb6X2F5Yl2XX
IuVNGENVYQA0TLtJM/qhaI6ObXy0W7tGP7BYzZS2E7nRv80i7zwRyR3xskVq
Gx/tEPtkhLLWAQaC28Ux6Sl0zJ+M7ZXg9l6CZSK4XRHcygf78R4Cb4ITvYnc
TiK1U7PZMclI6BgrcfWYsNnkclPSKoXTVVbSilzuqbNDYOo9IRA/LxSSFuPn
5bFsoy1SY3hdFAYzdyQzqcnVJttMZJavROipa5KhZk8+s1W30VoCS5JZJ/Zd
wnTvai5gM72zlpxioradyZ3bZNloJre/SBmv2ZIBJ/EyYnRNSSa04at0yPdU
Z0MtGuydSOvizRnQioFxZ0epvBOWmN3VVQWdB2vwE/HZCQcP7GA+Uxq5af8a
ZrPLwOYhfHTwTp0L6Jxf6aggi+3SiNy4g+8hUj/QJGNjUyy9e8a9UJ72NFSk
LoFNiY/DnilLoTp5MTSk3guX0Yj/jgiKJG5EMtIajHduS4+lBYmVT+40EHnu
nSVy95VudWOFjK/pBiiKhfW819ZjW2EFmmaKpwOYwE5FYJKK5jV8U6dkMT0J
NB9VPn1PkLWdlW5Dc0HV4Sp02kuUFO1COzF/uA1is2Jt/JRBh7Xjx22w/QSn
py5PgcSlcZ6cxoBZ8tfEaYcoi0fnffJTcRqnAzw4TZL6bCpEr4u2lkmQ0+M3
jNf4bN3k7oLgVb4GO3wGbREnKisjHQCR6Q5ISHDAPVEOeDTG4vNDwkA/8sxI
DqGdcmEVjXP6/Rha30N+ObE6EBLvG4xqaAikrZvIXCZWE7/le0pST69LtzGZ
A9lGM63L5sDkj2N5pxyxVHfBkbtWCszhsecHX4fILQroOZdU5Agu09EByzdk
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
h0nk5ziEB0T+TnNhDnRuo1t3SVHZWWUdLS+iEAqknjq+sxBO7inz0FN02718
VExgr3udRqjkaqvY6+SdXNWTKx0iuaLrqdMoZ0mnJT4GJ1KfZpXEuomU1HAV
P+kx1Gmhq04KPUV7Ko6QvkI5SA5R+D1QOmoCbAWAMpQ9qKMOoe7aRM+BwKZa
ysoJf//736Gp6TycO/db+OGHv7HiChw4pWV6kCF9ph+x1JUWBWAnTjUKdeVW
WtVH8j2Ulu4y+QulRQ9G2dqY0+virL/mMhVsyeS8TUFFvrUL0slKa31FHmxC
qBchUnfsoZ/kqGdqkOIavngIxK2IUIorLjOCt0PqiisKP9Nuqzk/n9KH4gr0
8KFk1EZ/IcWV+nQcR2gYsTmE3kp4IooDNtJYTqG34hdg1b8Mg5gi1J+otyZs
mGBtulrbq96yG/QW7aAkvWU36C0nHW3CswpDxUS6i0K3JyOtzRs24VmlUvpH
pIGssgBSYioNTCI9rfjZwazFZmYlC0/LxRpscsZIeGxZLPzyiTB4+7Ew+Ojj
ZVY0h8rllXio3rFc7NGwEkD6owOks0UTu7Uim7LEegC3pSiTNVeA0F8bUfms
2qnrL6fysVprslmONReIZPEQ6Mb3ragXmyvzoGIDWrRy1meszmrRV6sqzIA6
lEpKRm/Mws9ZrNRImR1o2MwOl7+K4+jZO3vyofVgPoYDJVKbkbbzUWcyB/z5
4e28PuRWZw5WZ+3biqB1w0boKC7zM2g0l6bRrrTX+Wi033/7NbPT3ytd7M4K
DfdIF9O2rmrDti49K3REywr1CI12BuUcaTnawJ34OH630mnDfHJC3vrsmNhX
0iX2jR2i3LLYDb5z8kNwFGPMfePHQyvqtP9+40ai6BFFZtev/zOqsx/g0qX/
hvJXuHz5j6zmULX5G1RVnKEs6OaaTf/9ZtMylPyBDIoBj5/t4B9WlwuJ+zCC
qD7mqdkIid6a7WPDVjJds/mJp/JSNrq8ag0vk2zZlg0bRGaaFFxFUwVsKMuC
sqoMqKlH1NZlwGa6yacp3+2b/T+83Xd8Vde1L/px1tpFDVmAbUxcg0RRAwkJ
hCgCbLokJHrvqKCOukAVIQlJqHch0UUxDo7BNs4xcbAd24nt2HGc2EmcdpKT
c+/xO++8e957n/vX/eONMeaca88tbcnEyX1/rN0EuCC+/MaYY861+VEmLliW
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
EWFXhyPvCTLGmKm8tE6csVlcJm5/Bgoi/EwW06SXLCZdBntpcx/BXupviBkc
hNKur0fTPWxeoHvXk5I+kJU4g6Wke0VQu5GkrCzcQVIylPnIZMVNuf7syzfK
EjrmySsfVsfkwn7kD6MjxMcewFiZwjiKRqONeTyGAlLExMuLo6RpRUnKjiYz
aZNQpkDLiRwYqC+yMY5OGKzDYrSjAoa7auFsa5EOJOhCtlbnw/maIhLSJs9h
Zx3PtvOstGox4scUI+nVD/oGoHj7SU84mqOK6JPbjhGMykWKjmQjXQ43F7uV
iwa76MUfD+aUQ1nUQXaxKbsUWoowFhcVwrWVK5WHI9LDS3RhmuypOglVW0tU
q1HU0k5uNlKrsR1NvCXnCZWH3tJCmiEULcYf0mtvzcKBAZqxoQXqP3tJC4eH
f8vjzC4LHRwdW1sfsIV0Xbr0b/hTPwjw0HZ8xAOHPvIzmqSmuRvaU6LWte/c
+dzqOXp56DlOGt9CT+M5s77BQrX+LCy0wf0f34fht4ah/moZ9RhN5tABlVeL
reVlumSbUXUZyz1MD+rR0VfbVqxqaWt62gkdnQJFApGu3tYCKK08ClN3+7vD
KKepvbR1F7WfRKhoF6OFqGLCwTiI2Sb2lXhKjzb5SBASibLKdigL97pvN5lU
PcmVHbVjGGahhTGbwyk7Cg79mMPZxKHVYXwawpdOsShcIXfdEYXLI+zW+YIx
GC0X4jNKSOStiHDICOkcw6Gqrl1n0riiY/IO6o9aGjqhUC3BuGXIyfza4Fci
K1JwlOHRoYXH45vDWEMOjwSiE7J2xkBhVrIIjnhRn5FIzKujJorIjCXNwkAq
p3kCMS4Hdq45jJ8d5ZhIHq5ffNiQ5TQtwVA5vX01LTYLA4lEeiXeiccMfBT1
dLp00YSiQxnkIXMoUPTixKhQVDB2dNGZhG7J8XQ1flRdxC5erTttShdpK8n9
wSFuKCKEJidGRPPCVbhQ1QSb51fCtqiKh2kuyoUXk1w0mEVTq6fPSRxNt26j
kDGA0+LptRksY/bKAhiuLoHUjaWQty4TetdtghFkkEi8LEkcxjQ5WNMBHRWn
4NS6LJNJtPF4NR2zTOPVyKDpoXy2azLSETPd3Q8o6/l5llHd8YK2m7z88i81
GUW5Ozz8IZw/L46x+S9uTH4mi23XmcxvvvlbqwnpiUg/mRjVpPWtWzSe+D98
PFTQf6OIE63CjBXRziKOvD8Cza80Q+2FAmo2giFZPHmpwI1FuQLj8DCAo1is
0/bU+cjNJfppC4rIAbxaMSx2tReziX0dxZaNu48n024TRSPtOp5Z5E4jtR8j
j0fy1mNT0jgH817yoTimMWpzCNPo9ECjKeOiq6YO5GMIw7G2dmi19eibpFpZ
McU9K9J8jpNxDBi7/LJyOkQu9mcYn9eOpVkeTYPa3txfJBUX4nP0Qqdg0Jtx
TLcGGg1+T18JXTE+jAlbnhLZUMBod8FoNR8ni5NraHgRXxfLnXkSRaquFYzH
n58GuVhVM4xrnxQwOiD38Co+v0aHEVEUJk6GEy0iE5KJyStysJpOYQ+lhZwN
VUYkEFO3HmMQCcIDien8rCCkzxWOxqjQKNamXTiqFRc742i6JUaDH21wtq0I
2joFkHiZcrKxn/Y41+TByOkiuMBI1rGRtAZzp7VVJEYvBSVfZOXVuk7YvbgK
tkTVkJS+E0ipyusiLK+b0sttWoJUSPrwY4CFZFfBObEUI2NjQVIRlCbmwfnq
E7B/TRlsWVzGSPYgkgTjhfR0/I9oN/Chh9ZbyivIR6vBSIOKA5urDX3RhQ6W
GR7+iBddHtEY7O7+lHcVj4z8m2EVy39FCr9wOzzm8uUPOBQKABWDomgmACd5
aC5OnoDB9977AxL4U6Tw10jsf3hrRfIvfvHV38vg25+/PWYw0b1ItsO9d+/B
8INhuPnpTWi70wytN8slg6Ybg2o2RzYX5Qbj8QcS9dkcp+cDB8Vqs1iP7ukp
4PE3qp+JRJNBNJlGmtgeb1THW7oYnR8JQcliRFtFxiW7IyHx4BKI2xEJwQlY
QOOzJxcNtTdFdxFj49yNbKOiceb+QPedytYuPceYU7xi9kZSfPRiHf3ddcRq
Onj1sxAT7Q8vaIc1LEcpaYNzVKw3Z8WohU472ydiolIxOhr/RZ+fAnO3ToXY
5rEabkieLjS0KQ2jNQ3d4qHdOsVVndpQLAa8rRt35GPkFUfYCAePo4O0YVk5
mKfXyXYoaaFcmA3Jy3Pg8JZj3D40KRUazCH+dy5HAOMzGLzttJCCL0y5yKKn
QutjUxTLCRmsniHt01dYlH16MDSlfc0YDnu6hX3DfXLbnpPtu4vfZ8On8uDa
6WLhX+1p7iea8rRCufbM6H2/oxcSIyoVevTs8xB9xTRedanG8pncc6+fKSrS
kM45/D4vHMDvENVcvFzdj1+sgpptBVC8MgUK5u6F/LWFFoEJUeWwe2UxZkLy
u9HG9DkFfUn5cDbUNZutymMfGQI7Ot7H60fQ0vIDCoSTWT8HL6N0dPyMl1EI
PuoRausct29/DM3N77N1dku8D9g5/bZmYj1EjChO8SCeGlsUq8+/1La3/JH1
e++9//JYF/t9O/5okHKiWZzvyDvGjtwbYfrouvTBJai8UAyNI2U8klhyKU9N
H6pWoS4hTSQ2eRjBUer5aROJRBxNyraeRQF7y63kZ+NXJk8jzs8N0fYZe2LO
F4KOYbWMWM2UO1JoZwoRl3xkGSzA6Be3MxIikkO4+nXdVMgmXqFrBqNmIm9B
ijfZJkTlqN2H/+RRp9Oo9DftsIu3RfsieSbRW5bGtHT9XW2LXnTs47Am2MvN
tmh0bwHdnWihwykXlpPmGLA6GGBhCEBoYgCbpt2UmkgLywqAhO3PQD7FO0s1
022BWWxTsUPx0kfYrgpXwSuNs7vvT0aNczYFW6rReI1SLb8ek/4NVs1Hqnai
RVS7+xMzYO0iUekSaEfwP58S3Xr8LGlFCuyOPwZ7EjI5wSUsE52/xLhUmeLs
VrJT0LlSn8NKd1lbM9m40/mZKFyZ0wNuNn50MG40fihxY9tQNoNpszFuI6dL
4MKpQnitq10M0TjZNRXq7nYPQMkOEeaSo87gvyi9Mtk4dR6h4yGgo6tyby5C
VwN6zFP1sIh5TpaOXrmeybtaaDlEf6jK8FdxQk7IAch6vgQGq8vgwNqTULC7
AlqLTiFzDSCww/+0ogYGryZ4kz55TUXu0NAnrNPIyO8f1ZaJa2t/gO8+cLt/
Iw0hEmcOiVpPzxdWjFO3ktUbflPHRY2QfH/URhaaPfxPidtvCTdPa8Tf0jZP
IzWebBt+ZdiyTflG/b+Gy8W0TiyqWYc1WqiS3snLvF5s8zBVKApbb6uY7aXN
oLKY7e8qY9LUs6It5AWR3sajTVS2kyC8KATC94vhakXcvF0hnMYWbwtD4uJg
/f5YiNoUAgu3RtINi8BmEadufK1nOLvEjtZCwuWgjSGxC90QxHtSRt3r0cpz
5RjUMG7pe/Ww3PVh73whWFsVWRQ+CeLnBvDR04nSugWxPmidLzpIx9gQdljp
RpoQEwoQvt4HwuN9xp4xSNJteQb/Dce1TmzMQ+vEJjz2TqY3el1KKx/a2YSj
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
1ctqioe8EY/qGepQer4fW7prPXU/T7clLz/KzAkMib4Afr99NZ1TmsrYUcpT
SS5+2THGbtPyw9ym27DoACe5jF0ZmOLyYbCh0mD1TDLPOmJl3HkRk73zYvGG
8fuO1OMJjcoyOFdD6hXAS41SPifLN1CK8hXlQN7mAks7MR3nPjFCB67YPKwv
9BVVOK1dYWJVYYo18nYVLxKPmnAd+WehOvEYFIVsh2JUryB4BxSG77L060gv
wR/XYtWn2Yn9Jr+xW+AVJHVDF5asvdUV+B8pdkGQdmdr2qG19R0+GaCx8VW9
20ZLCrS2qSNEmery5U+4JPVi6Gx8o8mhoT+o7pspZ+X0KTm6ZOPtOxMQd+fO
R9ZwnIu4P1gHS31L4r7ppBRPgyKmfBz40QBUvFzBvBn8aDJzqji1jbqv+NDN
Ruaurc91X/GWljybh9rUIWtTwoyabko7eu2QqM2LC3yIaV8sIgtGpzYvCEaR
lmwPhyU7I7g03XAwjp8JNl4+oOhmE/u6NorQFpLgFto8333SAdM9QyYOl6LH
mfyKLj5OxeCPMIUtnQZxVKLitRmFSwqhowIeY+H4yOaV02EeRiuybf4ib3VI
KS82LPSy9r6GLvcbBZxTnKiXMZmBy0LCFHJW6WpaxqldsfoZAYXLxOppSbQ3
BTuXccunwLH4MDfj0k7GjOecMM7Jx9Af3S2MoxKViCPgkuJSRNIz+O0jHO9I
MZKNzNu6OgNr1BQWbWPcUdaOpNuIP3FdzEFeYOg8nUe6EWJMGdWrE/FmjurF
uQrXMrwqWTqDrbOxdiOnT+CVT3051aIj7QZL8S/n4jw4uKJQrD3YLfTo2jE3
Fw7M3SF7ce4jv03p+bzY4PCwt8Eh11SVe2rBoZTtE8+Xq5vhzIESUCsP5GAh
XvSOPGzbnYW/1imDo55J/PErenYFvx581QPH1g7gP7oF2gqq0b9KLzko3Ffd
CJVl3UjhD3QC6cwU966cWAJtbn6dCfRlAn2ZwIGB31oLEOpEADVIp99ByBOA
Nqsj95k1QKcApPvsTnSyngTQ0wHNajn1oSflXhsL4PC7wxaApnyk7lzxNf1W
G148LacAHLhWD6faRadOAmh4qF4ZOUOsPYjCVQ2RjGnPzV779ISjwcJBH4hO
i4Q5mwPdVh9C0bN5STNhyY55WLkugJV7YmhZNUS26OhLKtt9d8WT4DvLm9t1
+N5fWjjr4CgLtTtP6hbO2xMCMZvnonZBEsCZDhnuXCbO5C9HY9hbLoPeNmRw
XdQUHh0ORA7Fmc0mBGPoW7BMHBugLOQO3oqptB5hbXd1t9CLj9lbt/VJyEDg
dAtlK8/jSqzNbeikOMbXoLw3SY6UZK6dCRmSwEN5wQa+iYPnWEH6i1DNk1SI
eRJ+TTHvGMY8tfhAz2QeiUcsEoWCx6O8KEHPW1ZRZy6Lc9/amEOweuFR6zXl
PMp48Yv28eLDYEOZTct3nVjb6gAONJVYO/8ZQIPds1stO5JP6WdK/for8G/f
0nwOdi83Wm082iDRmpXFWW/nopNWC4/Y2zq3mMFD+kavQtCh81V7Tzu1g6LU
SoTT2tBlcMibii+7oSe9jGlTMY94I+YK8KpYdgAZrGLNyDUZ82S+67BeZycO
sHnd+C9Cn9Ga7UBlDfRXVzrkPN0g7ZutaYKeqjKoKe/l/pxrC8Sv4cUXP3Dr
o50//89w7dofmbpJ/Og1BjxV2Mre3JMejDO1cbl79341pi2n6lhPkD2EcQ93
vImYixt+bdhtZEQ3ziaNU+051z4uPzfj6Oq9Ugt1HZZxTJxWx4oQZ3ObBLYG
hMVCK+U9WciK2laA146/wKw1T1L0s7ayHh+t3WMQftC1zqqG56geJdJWY8rb
nLICYrbNhVVY0s7bFGKtt6pjnx6PmgrToqdYKxT0+SRpnn4UlNrDqjZ4qbvt
BmtH54nYZ+r2gTEmEIrPgjgLPgEraPE1VFxx+H4e/hhGUDuZNHz1s3Q8gFjF
cLoPoGhZcPR2/5CsAFi9nfZIZPDeVg8Oeh5JcVgQlkU7OQtSzYsWqmNH6Q5F
KQVRkFkdR1HQZAttkHvuKBResyzkRVmqdmUSlATa5QoG5TsSjy6DLfSREopK
l+QjKSnvUdtvTcwRKExJg+66IrsW++pk9FPq9TcVWeoZcq1Cb+kJ+MoFfB1l
KEqrSH6UwtoRIfwGrciDmoMZmADzXAZ6s4EtmVnQX5UPKWtqrNXZXTP3cOzb
j0aNXa7Io5NPBIAOC0A1ZiITn51fPMKF7lVtbPhqTS9cqKqDUxiHlYb5M7fy
a1LxBP1FkHICTuzuAk5+AjwfZvBoXC8cXT3McY8wpPh3OqUH/4PbYRhL4IGa
JrusggdrWuQ2i3oksRbO1F4mEqdaEfCnY9p91679GHp7f84RMIBFtFurF01N
P8HPP+GW3lMeGDQ8TNIpBqn2pTu2kWieCtoJGHzYuwzpi6/uqxMmdL7ZCbWv
17oxqGrdUu1OkTQmrBg0+NEOZwfKoFLeklUVuT46a6rClRHPGD1b8szqx923
7o/ZGhHAm75Ge0dmzeMYF8QJb9OROFi7L5bbdEt3xvC0sNz7YDB4pttShR9z
54CwDYFuu7zkzXWtu01qu/ZJPbrHeARKG7kxyE08es3VriEXMNSHEfjPo0+I
vVWSvO0hgj2D4XO6394NfVMLHK6Gn50PpqeG30TurefznzIYs8xvyoDu+8ei
Kfv5QMlC+idq6B1NDIOjmcGQlh8G6TVxNkbPazR6bF4hild4jEJcilipncyy
qaFi9ZrMUyWxek6SVS/JRxKuX3QQ8+BRUo+OAGXi5CLGxOyJsOeQzbyTVtgb
aC9xmUch7DTqcAIq9pyA3qo8aEbgpHugxvBoOqWrUuBXnZrFAXBXyCEGb+/M
LQbrN7qvh3UlmWdzq3TROtuoLWBiwq4XerRtEpewFM2P3s8p0CTtDA6ACP7u
fPw3bWPlTPmoylwR++idN2yPuQQHlg/BoVUX0b9e9vBCVTOM1A3DYBXZ1wKm
XPAQ+DXgdYoPjhpEdAnBsw3XUaXx+4AvvvgABXwP7tyh7a5iwaOz82O4cOEN
/hETyeepy0e33KVb7/4d8nlalx13Zvh995lhfV3WLh/1Lh+5d2qYxn5JOxQQ
v0GaGkUVO0lbrFDICfQc1nFNajGW939tmezpqE8ffvSnE+LdjJuzaZRx28Nh
X9Z6WHNgEczHTBfC2Y3ngCVwNrGNVc7VoX++MtKFYcSjkbmxt5yU21hTn7Zu
Hr5073yI3RJmonC8eZYJm8ne4SUinRerJggUsq2V1SzJtnTpEwq2cDovYJ12
POjz0yBi5XQMcv8fbff9HeWV5Qt/r3oqSCoJIWSMaWxjhAgSSSTLJJFzNGAT
DDYZIRQKlXKqkkoq5VBSKZSyAJEMOBs3pmnbPfZ0mA6vp2fu9J25c++89653
7pr1zi/vX/Duvc85Tz1VKmHsO9NrnapSSQZBw4fv3mef56GzW6v4BkUU6Jbu
eEGhNiHL8aWbsrhSDTNt8n0MC+9jlLweDYWIGu1fUJ6zy4P+l/bOgws5i+H8
xVnc07vCOY5gs0He4AUaSdFhK0LUss9mcYyzsV9x+m4F6UX5LLyqpQxHlevJ
vZdQMPyn0VulKzYxvEWFKEZL9evkjoTGglmUYUwYXf+jJbOYK75K/BxBRljV
YYALnSe2MGQBt4Cs8EQWXN30Hm20IC1WNix0Org0WLraWDB61ZPjCzmWT705
xZaIb4OGjyz4cRP0XcnnnVqKbTpp+PvcdCYffPkNkLVvkJYAzcZ1LTF2dXs3
o5azvx8u7RjA9wfxp6KvsTNojZd9MIq/A+N1ARhwVTBqRJoobmniuJpB05g0
xKmyARq995m0eAkbXSo+Unevre1LjnYKNrq80/DwL/hzr8jS2AgbLbpK3bff
/muiYddCnd2PdIb1J3pmvHWa0bOxb8cm9cwq85xxpK6mv0hR1oxceZClDp2y
Cee5jIcdnmdGjs/ny9JUbEbEitJUMYbrzQsbBWOnVkP60cVMFZWgSFlQMos8
rZqsa0axLcbAGR3nUpzx0JzhPBcNy6XIk6v0tWuPLDIRZ2RasihDtZB8Jt4T
HbvXsTTdjutYqujRoWYaaxbHms3D4lxdwG7hlpmwkjQTuxYioqEzi/clwqKj
ibDSkwTGC5WoiJYzT/vRouH/jatjOKJxTFsVbZe32s08kALnr6XBucuvwrmr
SXBRgCY8s3JQU3sVpRjfXVjlHd970SqnTsIDGnFm4hhm5VBGH6vGXf6FK0SZ
zZDHcg+3cAMuSl6P2CiZOuqgdhzMzJhZMoapBMsu96liMwtmZsFanbks2Hid
vt1Kk3RDNfkihV3MZbZOzzsC73HZeY73HdQug7iJj5DLcaBeH5NrvNwF3vda
db1MulIDul7UjBNhjD7S8LENujPLWC4zy6VBIT5WbngXupx1eg4jxYiuLJ0p
C+avIf740g6RzyiPia+Pxl8m7Wq0cia7WdcLfVWUy5plIUpZrIU7dURXe2W1
TlfcpOPCZnkS4ikMDPw98aX0amsTctEXvSL/A6NetKVLx1cTDb24f/qn/8UK
Rbq2+nPQ9bwzJZ88/eSZdNnCenG1A8EI1kZRq98D3gbqzAU3EsgtLeRamdqP
5Gtdfrp+gkHxRRNwSw8E+aLu2lpMYicub4WMY6tgIy4qJxfQDWz3JTNf4gIi
Zt0v2WGLfh6+DAcXFiBfdN4f+eI0ZhIBbDkPD4sAJpZJ3rmCjuLvXiTo2r+Y
6aJTC/r5LtpieM2w47pi/VS2i9xakY5uHU6EZcdmBM82WJmtZVlTYeu+FyB7
DsDVefhHfnE0F5kmlktju1RnTeMT/LzlytusTu62hZ3lL0TJylbZoGRlFF9J
zgx5+J1EwVX8/i4cSYPzmM0unJ3BpJ0NkqbJiMZbsHLArngYI9rh16Em9xix
hv9XklRRulnqWTnmvJAJfd7SqLCa0miYcQOBWmjBfYMKaZgmDfNiDCvivU0C
rCO/ADoKBGD6pFw0AzZS4wAPvk3tNcYLl+iTOaE5sx7Epd/sjBa9UksBRs8E
laocu/WoFc2viSy1xMd+XB4oXfkOA2ZiwKK5e0avqjafw2/fDWUn/fqeqcpf
JqZrmny/lwE7ldGHhWU3Lj9/XebeEX0fgp59+T4+Q0Go3fD2QS8Xm5TDvDZl
WUWVbpndYBmd1yek1J4DDdQND/9jSAwLBH7HMYu+4lVpnoJM3Fbij8H49b+x
xPyeOUqc3LBI26lqP+Fv/vw3P3po5FmG6eVkL3XDyDAsD697oLPXBcOjjdDa
UQr1aFlfmzOKwbKFVI601ICIXmEq2cpcF2DO7ginUAvCgtm18CmROJ4SUaqt
e2sx15gHzqzDYLaG/Xr98BKsIZO5zpy/V4yJiOvAaSGnG4ysza+eG4E1Cx8+
pTSmUtlGZC1KrzCVZNxRU5jRYdR9CNlxXAcQtXWImYUxs+v7pVRWUr8sZcds
HTOCjE42LHtrOqQ3Lw4JYItypsKO47NIMRNzFkWYcRT7MVumNri2fApXmE5c
19ZOYbmytibCle18A4mtiUjaHiLt2h785J5EuFq+JYQ02k/V22k2faqkuNsB
hfuWgvPACvCWXGDSYuXOAfGVffoK98SiyS8T86Xp5aS4X454NCJm6P9bQvwq
RVjokkZBv2qvZPMeqO5XlDhvXygmfXP3XYBzaEjNW5foer3497+J7/qgsVwx
9DF7lbW9DiqP1kHjmSZDd1+4xVufImMZ6RLvUSarg9qdF7lyDOVL424Y3bW7
7GSn3OSM0umijwiu89sDnLsu7egltjh2mRisKP4a5xE/XK/xMVX0PFRVx4Vz
oLo9ykBVr/+XjFSMpGp4+LdhmwH4+/PJb6G5+StG6uOP/22a1Kqn5/9Cxf6G
v2h2mFZffvl3RFQwcf2DPuHxE7V63gkP40Us1YQHXexN7X5GS63cH7mhwufk
HU6NtYoC34gbunrcrBWtptYiaGvCf9aoq9/mjJFDbUooddxKxjA1pnvBeQxe
ffOFEKuMly+ffKLNxpcv153C560nVsChs5tgNRplYqlExbgQYUjZr0ba5oGm
J7F5xuZ/lDGJ1U5CVkHoefmNx1bQJYw4fIlmWDB8cTSby6KpHYH5kJFKpxbE
vBtN9q7aPtvKfsXwTRiNtxhLyZjBV0JfviZOHjBNMF4gSdG1+9hMcKyfxiFM
+GX/Ib/weQpkvz4DcpdPxf8mDx9jIGvdDMhKT9TXVfw4b+NUcGbEQv4OVA0X
whUNzj2U5S5cSoPLldvg3MVX8SPSS1N+MV+aLDV5KKRNAJaz4VVGzHnxjPLr
FFpGp6woeUWH5S8iLEpeq1fRRV0w1ca36m4VYgVVymJFKbecBdCKQJFbiJVw
ywp+t4PN4iNY72ZB3SU3KWUSc7fkVZTuFX2kstfVjEouGNEpMwllZZjs+NgA
bSdzGCVaRRIoNafRdMaJxjVDnj6JFsevRZM+OLdBWerkhn54K502KgOMljFP
KaxKTgzCiKtNX2PuWriBhWKfu9yIVWtVPXR3/5qZijKclv/qq7+EYEVHSru6
vmajMFsprChqjY19w1/0mqF1T/NodEJUSfXkyd9yX4rQeeGnSTXZnIa6ftEs
KdXdL+4+cxYtWra1vJ95wTPoAXe7g+bOxH6kjaNVb8CjYzUw5OU2l7/VSXuW
viLR1Jqih6yAPFJgZEsdhTe28RfsfiVkLCPCMO5qZ/gJAyufMFhmWNQL23h8
tQk20U1ZRZxSR6eoB2Y2kKWaX/h5W4TpDCarzkBWcfBaRmmXU2HnqTfwG+DK
cYJRQac2UbUoj5CiUzZp1LL9hta9zFlLMqbDynVTYSkWiiFGJYj+1tVEyN38
Eh9tZ6cWWuHKPAtcXBwHF5ZNhUuoz4WViXAezTmP5lxKp0PzaNC6BMhBfzTI
3TiVLtVGPa+NRE/ZWguUbbNB4c4YEByZ4cL5xXD+0qtwPpc7+M8S6YrnGOQe
Xc8a0So9vZVEijGIRP15mqm1G0bKVKCyydvKkEjUzZL9eIURNbUCHQUoRzF9
c9yHf3dtOdRfdUJDlghS1HsXIiXyLG1vcS6MYjVYi+mJtCGBSJ58WfHRx1f3
tULeThfK0Apl+9zQcKYZunN8enVHScqmt6kaoT+3lCUy8WO0PidBH1Xsuoxf
X4M/fqeuUR5XeSI+kT5KqPPb+zk+kUwkFFZ+ZsbIzp8+neHnj/orOxCkVhir
acKf3seXJL/hbqFBM/wl+kFVfAG3DxrLqlgn26TdK3Edj87Oz5ki2lWkyk/x
RMevVAvLyJO66ppxjOz77//C0kz/cTw962YIT/74ZMIu4nd/+E4fl400Rmbk
aezxGLTfaoaGniKT7F4RT/2DXhgapREKAsqid7MQJ85UA74i/RwA6TQoZTJe
YFKp1CfnyNI2ivMCz+JpsrMCiqbXDy/CRLWYZIKj57bCnlPrjOFqEQYqodTc
MKmCbXr92pPyHEFTcHY2vjpel2qaI3j4c8WFVNh8fIWQakJnazlfx1LNkS2X
Xu2TXu1ZTJO4y3jgYonhopSvyZNTq3YlY6BK4K7WTv8G/FrUSoO1nWn4E6W7
MExeexmuvJkiijZ87/xaoikBLqfTHAQ9WuAS0nQVOcrGlYMrdyMfodpIxSE9
5G+MZbRMjJYFijbEQMn6aCjfKPAq2M1n4AVemKUunk2Ec840OJuXYpZ40ekC
hZdJEnY5Zzdc3vQy5OxcSH9dN1D4olZXUV4O+yVa+Ga9xeW+lkOSxRo2GtW4
hM0wG6va8VbZjqd45asvAHdxNkkmUpUNLm4u1y/wTaC538ti0OjiROoQaI+b
LsNWBANUSZ73MmQaE2ZjxFSsooue0TMh1lfYi/9fKbx6+Dq4BJWZHy2MV/WW
s/i5SkZLRCIiy6LjpZ6NPXeKVQQXAab67xp7ZcWPRcuq9mIf6tWKq4F2KDWm
i76NdsSqltkKx6uz86/AYsDr3r0/GY6zm+H27W8ZrrAakDpWX3zxfYhb9J+J
OjD0GOef/iTmvl786W791OmHiQVgDDR+1shujX2Jn+ssgsa+Uqare8SDvwM+
eHC/D67faBV2acbuFf5/McI9+L4Jp9Dt4nwTujUsByXCr62mLFu67TUwT2pY
HCy+khp5zl9Gq8Xyko9kGPrFfMkRiSWslTztxIphiWhEzDANa/nBw1AWeMkw
FvbG2eWw9fhKfHciYloYYiv2L2DE9iwOIhbNiEWJLcZtM2HOhniYg4lr+e5k
eP3cAlh8NBF2d21TdK0PpEPGYAZkjJAX+IifGKNPrPGthKUV0yFH3PDq0HS6
k+nWKRixorE8BF5XV2E+QqnCTHsWacRZ2VoblGyNhkLkjEizMmkWyN9lF6xd
mAEXspPgXF4a7YFdpQMJsnPPovFyHoJr6POVzS+DY+cCxVrFpYNw5XSmgTWN
OfPLcjEuwnlOa8i8v2jPW+SkhJh0LYGrZzOVa6Jc1NgzlGRHJs+7KtVo7ovv
imCCh03UgaWp1xuecr7vS9lJj85Z/kHa+ss70ICP9Jo4CyftZnUNt7AsTJrG
r29Wl0PFOx34kxBqmk4YfWQybCXm6aeX3ttIDhFnqrXFlSG350WNiOVzvg9G
Pd08OWaRmo24PBE1a6mkK4f/gS9HJMZbJ3a0Hj78FurrvwwvEgOBv4Nbt8TZ
gDmGSwiFa/bo0e/1dtZ/oGaTXUJo7JvQFKYuIRTUzA5NHzfB+FNU71d3WTSP
v4hbW972Ihi/5cNflg/u3PXzsyDNpre3biBVFL0ojvXpZ86Ds/pEGP1Lej3g
FsnMoktGz7Tr+NKRZ13yOwpWvbd84hz//rnyCkJitgtidczoee+pDfLatvNh
Bo3xr3yB++GqTa+bFtqlnwy0SDd6TpEnmtYeWaS3vCaCpipJQm0BrF7/EmxO
FZ0uiZpVduuXoWlLMIgt3ZPMzym75kLyzlkwZ9sLMH/HbMjIz4D0vMWwbXAN
6I4Np0D6YBIvCz9qsMqXAouKp7JtZrZN020j00ysmxWuknUG2/JwOQi0a1xT
om1EGy8TP9pYOTKOohs5V7Qthp1zGpwj4y6gceezXoVzpelwLj+yc5dzd0Mh
3TwVncvZMRe/jdlG56ilL4KbcC7n3UzduSmG7KbONambV/nKa+R4RYXMbhY2
riQ3O8Q5W9C5afplN/J2nIF+Oed6wyPmXD/AP+L3m/Lho+Z8RK8QAtVOuO5x
8aB/2UkqRZuZOMSO1KozQXNmB/3rjtyprn2wDPUic+dlhhN5rj/XieS1qdJz
cvlsSNoQvtfLe4wkHu0zXtrRIyUk+2wc4spO9mM12w9t1zoxxDWjdfVcglql
fdQji2Sft6wNU9qfwWQYbKWGmHH+64sv/sR3ViDy6HaA/5agX53of2Ad+lGY
fuK4JhGm9Pvmm7/ok18zJtcv0lF21SJ73vGJH5r8ipYbkPV361k+tZrHm8Hd
5oAWP93Aj8yLYgWVgMZ+2UAnF6IaZTqzupiaDGyDfS7ol8HNZBiyePkAWmS8
5ve18DFXS8SjS/K+U5zSyDiLrh0dMKIIt4TvyzKDh1yXIjcp+5K5azaf7oMQ
2uOXVwk3T3INosnuVqrA0/SGmShIY2ThuQBep5Ob3MyPg/2L4mEnLuXaor1Y
VqbuJqaWHEbm3sa3j9OJgKUnaLAs9WQyzH1zOry2Nx5STyRBhi8D1ozRrKsu
29LKRINsZnDsncYpjZPaKk3hliVhC8MtLLfhr60QKVOsEWn0sYlQM3pGme18
5iw4m5sE58upZUaexeqeUQ3qpJNQ6FleRiJk70mBa9vnM2eObfOh6uJeAk0L
a6iRYvERBl6VZUP15dKyKpnZrPwvaW2Zgy0zeKamK6ixpurRUyuzxJFLK8PW
Y4DtfhPB5jThi2L8oW/VF4KvMh+GMZLR3V4q3qnBH0uEONJMWRYV0k4rNDhm
4Y/7Cj16C03AJdr8qkIVLTV6tDJcVI3mHRBDE/LzQj4rOA4HOL11OXvgek2H
aqNFScJ4qiSEMAsTVltWz4TROc1PPvleFqCie1ZX94CtkrFN7541Nf2c7zMf
rELNIfcsQIIS9P7+P+kNtJkRhIr6Ybye92IbkfCqvFMZhhd+9w+adLhM/GiF
DgSsqsmpo3VXwGXiN6KpLtWbaT2tTrVByc+DMsUZLwzZL9KbuOwLN9jE/AXf
v2C/sCxVHj5X9y/QyDET3WTZyqLZ+L4t4aItkgctRYKzsV/kmUpwZNobh5cF
XRPlKZK5VzTS5k++FWCSJ5coKC7MEbpRpAu5GZ9ZP59OaW7N2eVa2EbAFFi2
B4Pm7uBasjeJCVuCa2XGLFi/LAF2rYqDfWviYQcuiVoMLDtFAxopx1+DOfvi
IQnR31e/FzI+zAAjaIvLpjBolkigpVtFDWoJ6apJzCComZk1M4viEyWjVbA5
liEzM2Q2yN9p500B6qspzM4VpsG5onQZ0BKCuwP5hxg0J4azws0vQO76BMhB
1PK2BVGrlYMXZBqJpi67MdWwaanSmVkXrRJXKVejFsP+AHXWSDMTP2p6ShOo
iUdjq+3EynxxwSAbj+Vfo9zmdvBVOcbriLdCzmpG3+jyk9c9lRCocrFvpmf6
5kPPSgy+aZzb+gqrpWv0aNGdo2f1WpNdOApqmTvJuF583WPYTrDxaxXSvJd6
uds24vLyeYAYKdyouwF63NUhIU1cfq2GT5zbpGwjI18aW2ssW8Kk/TWLmgQD
dddQMmqqoc/23Xe/Z6l+9tN4e95BC+P25eSVKeb5D3xhvNm471bW4IROv1sn
jvpt9CyMe4FzWgfWAM3NTt00qlSpSqVntSGgKlRy7fawl/80jsrPq5sXrMtd
bmLgNEgxzMNqhhvJq4pVvUcj/qpqFXsIGp9UWiT7bho7FgXpiNsehO6tszvw
OYPudKyXrIYRWdpTWLhvrjwFkGyWXIZtKYh6mGSs5p+1iX7W2Q2v0O34Qi+V
i+FOnVGff2EubHgnnTLYbuJy6T7Bm1oY2WDZ8bkaLD1GxewyDGrL31kAaYjb
yr0vwZa1djiwzg4HcW3eOi2W1cMf5RR+w8dnQ9KhRNjgWAMb38+A9ffTYyLA
Z5U1qmNvgg6fUM86YT9hkhgnYpvCj6pTxE/vwJkYwGgG8NrWGMjMXSMqVETw
HFapBOGVlmO00aBXqgRhdvExcG5I0CEsoHtjEYT700SlauHZjcKLZ9hAmplt
KavGWDGxC2fSFcR/RetLcFWRgWadwAqdQC0CgZokMHtXhZFAi0x36jx5e/Y1
6K0qhHt1VeJsAOlnhRterFpdhTBSU436VbF7qF5MSC+uKgw70YtznWrjINiJ
/2RNxK6LYaNngi7/YLfsywVEyFN7Djeru1m6LifFuFZuw8WqNhzmuB63K0w5
F7TXNnDbTe1+0onyjo6/DslvSrnu7j/B9eu/MlSelpAzlOHKGftvP1G5SEMa
3/3luwlDGpGumDZxF1QD78+94P/Az75p/BjHynXf6oba5iIYu97Kwo1hclPi
0WsZ7LgX18rNWcpwiSycMc2pwY0bAx5OcgP4+VGpYWnlBUg8Ka4LuTIvlaFT
KY5oM+tJTsetIDXsAADWj4fmyruDip7bUk5sS3hG9ei5bZzoFG7ic8ibmjvj
MnW/OB2gN+aiwzcbBG0VYruUktzPamfif0ykaXzJIRrsoKXxoxVi8/Hja7Ew
872ZkHwREyD+inZczTAxZRpSNheWnxbLyo8WfEyGNOZtgeBtHV1aiIDTYD1+
TLrRskvnlrwjnFt0OQne6EyHjR+zc9HSuXTf4rCAR7sNiehGAmRvoVz3o5yz
s28Vb1jYOipbC7YFnSPlyDjHdjucP08X5kTdTMwb1oH5KXDJvY15U8hddeyD
8r3zGLj8N4LIZW+cAc79ywRyGL/2LYWGGgdfJre1zJsQYefUpNetyrcKZRxo
BuRUJ848GXLapBfCjTLcveAqJrEm6Minmxsr7vIFd2YYx7DXi9zdqK2DdmeV
XWfOw6wZmSP2XKdaZZqjR1sIc5k7u+THflw9zBodJqBsZ/w6leVuVlOOa0Th
vHwjeiFcLfTJHGeRj0O1TfDA74d7XR3Q3znE0mlSLjpu1Nv7bUTpqMc2MvI0
pMdG9xRVNylQ9y1VOw60Yg2jaarvNuvHqfe8e6i6ehEukxZpiNbzqYeVC6r3
Mgx9PsRqNg82g8frhOHRJl2861K8UXwm9a6jivVY5vZ2iN0HYx3bRxeNlJun
I30uGMM1IFUkAS87j8H0U1PUHMhCeRpgHpeqCjy67oXhct+0Umkz9eBcQZud
oVoqTwFsPv46U0fPRB2Rx181PwbmbHpZr1Np+lbUrqydQNAePnwLqbtQvnL8
2epEoHu5dBZrRhO3JrZNBLnYulh92euJK7uProQWWx8L8wvxxyrD/x6fN15a
zsilnaKNFcndKUpzCxGzZ3MXq3OXDPMvzobVrWmwaTyDuVt7Ky1Kcre8dhbs
xnpaVLL0SOi9wNyRTrSC7JmfZ2tVZjuyTjdvRyxPuolsR4lOg8yy3ZzlaGmS
vHMl6ZzpCDsxQTIFLp9eDWWrKR/O0Nmja1sSexc2vgwF+5exeoXbX4PKs9ug
zVMIldn1ItNZQy4lKVY5WWdi7NRxgirDYu4sEbQzRWjYIXrhl8HNXHsaegur
TfJyGR35hTBYU4iFbqGRPKpvB6qLcZXBkMsV3GVtmkAetemaM70SO3qM0ikT
ia5XprkuyV6XJjt2Fe/Q0YQ+FM4HNz3tcKPaTZVyvAE6cURT3OCF7rlA97W6
1doKn/QP8LrZ2gwj/bf1HVVxmvwxbTj8G+8mTDVIFwh8w305JR1tRaienDmC
dPYIF0t7+T9Ouskuljb+ePwHptwiSRfP0gXuBeDu47vQMdQMLW2lLB0JZ6xo
KefR88hIE3i9DujvoGs/knc2uImqDcrRtyE5jEvKkXAmTngarNw4F3ZeTQ/Z
cViGOU+VrYZoZ9XfTJbPS5A/rFs1eRhqIY+PiISndldp9zKd+VsNR85t5ZKW
6KPP0xSJVZ/eRfbQtPk7qeGfuosucpaK1eRCLEDVorOcC4rEAakUH65OTHkN
M1k0e7s9ml9gsPPG8pcRbUTc62dSibUYVi2KVUtj1ebD6q3TYKusT/fjQtXi
JWbLclNgYUcSrGtPhy0PMiDjI95tsDJmZlh7PQ0WVUyFvZdehfxD0zU9vr3A
Ee7a3nj6iEf/ybSQ0tXErJn1POcIz3MmMTZS/oZFk7MjhTQzssWC6S0KsnZN
hUsVGyio6eHtcu1eOQUnItylyg1wefurULEiGkrT48C54xVCZQ1N+ql9VZof
KTz8OlRgTV+Bv/1VKFpVUbHQzBKy5yAkKwVFWX9dKV8BLUgZ7ztYmTJLCGW0
qDlnes5b691AqegcukmeRKeBkbZ8EkzAdqc+H5Rsfe58GKouVbIFN1KbwzYg
NGg7eVXfgIjhR7NUrFvWpr2aIeM1XO5lzW5WdzKUlNluVrfgX3fizArD7ho6
QMCQieWD0fpGMztmgcE6jy7Z0NBjbsGZJF7UhlPxLV6/+M+v4OnTfwgZdTNe
4swSAbSYCG25V/5zQYs0/hYJNDX+FgQtmj8eejjEoFGEq2wsgsb2Uo5rKsKZ
mLcojnL03sBgPTQ1Ozm2qWI1QJeAJMFs3JWjXdQxrFsDcsYkDf9pXp+7HH+o
lTzIuwof1cUfTQyXWWdMPjNxJlm9LnJi5fqmSHKieo2GFL5p3vwJtm3mEd9t
sPvUOv0AFckFM4CfaaW8TVsQpBdWwW3oF675rfjjt2P12s17GwN0UmDxQDIu
dC6AX9NAX5MEqT1JMNM3A+xtdmVclDKuThi3UMa3MONWYGJT6SwdXdseatwU
/kQULMP6dLkLnWunDZAk2DSUAVs+0a2zhFt3xWCdmZ1z7J0Kebun0DJJ7q7t
DHJnDtufMGy2iv0JMUli5yxXjNVrqUxxxTQ/gstJa7MNHJjoLh+YAZn1u2l/
VSQ42p7IT2PxTPxoFe5tmsHu0SrbNBOKdrwaTl/uzrlQeSiV2avENF2TdQi6
66pE8Wo2nF/gDQmN1bPAgLcM/4yV6eJRU87G5JlDyMveVRFJO95uNTF04nIb
rlO1MrmJR2JuvLaKmbvXkG9UbhBrUZJu2FVv0ZXzR9yGUEO/0fRoEhGNhIsJ
2Xyl5TrVxe03gm7M3Yr0enE1TpPG0U8w5K6SzmFhVc91qYWN02CgrhoaPG18
KUdl26NHE23z+X4H9+79KqQspSOcqgH3LNs++eQ3ejPuGbZFuheVasb9t3/5
bxPGQehCQBTOfsi2SFsO6khC0LYY8N/zw/jn42yb8s3TjCXmoBcGRxtVSDNx
aovWN107OsqgFXnrlVUpX1JeVqEm7sZFQwBf38JXxN8qtG0HZjUyTd3WYJ5D
ZjTRieNXconUZtbT2irnckprJrbNLGrWg3Tf43kkFdKHXNlgeVYqbC1I5+d9
ZRmQkon/ZfdigFNAwaydLvuzuG8es0VLAGaGRf3zIKUf8ULAUvppE2KANyHQ
tSUD4u0FNfgpjFQvdQjTYhgzC8R6goFtAWK29CRNjJBk0aLlholNafYGCrZD
arZPaAaKMxoTWdaSAqn4cyxA0pY0p3AdSqStv58uOIvWOTuQlcSSIWn87Dj4
IuTvT4Ds3QnUy9k9RXsO0SLvuIqROOTnDQuzViI5u7YuCgrWC84yJWc25szK
oyOqIOXT7QVpFOE0diwWyjfOgGvr5X4DTZNsfoGnSbJ2pzBllfuJtBSouLCX
KDPus3qz67jvZmbHzAbHeGMhKmK7Df2yTLgiLV1pw2MJnv40g6+sxGBWoSb3
VN/Hx0B1AQxXl0C/uwxG3R1MlnG8t3jt2TC4yrnfFqPzpYpM1WPr0gtRxZeJ
AdO4t0ZzJzfwx32B/TLDDXc75rRqGKytgw97e4VbZvigpxeGMXj4G53Q0PBE
0aVuE0priuFgZ+jegZjZVTcZsEagKzrCJNurP42u590t/aFrMkYaBtHko/+O
X2fLxI9W7q5V1Tqgp9+jxzMkTOMXNtasvsEJXa1OjlyKrxEuK4ktCwxjLKP3
hzpLIXXHLMjgSEbBzMLBbCnFMkMM0+QYSLLii4besufCotxUWHMuHebzBcbm
ZxIJyfi4AANValmyiFHt8rkzmWXadGs1fu3ue3TuanQJ/tBwCXSuhEtWNEl8
nNqP/zGyNb8Pf8D+eUa2FpFmXfi9eJNgeksixS9my0SvbMouGcRSDUGM+2cm
piuK9wpoz4CIWoNg7ZJ47cW1VkWxaFhyHGvduiS2K0X6taYjHdaNp8MmsW2A
3zsBZhOAVSZwHtMBO/IS5O6nux8QXxrk7p4K1/bE8Yrk2HPvoeJfR6NgRSga
hbICXDkZdsjeZFeSKcgy63bDJdc2HTL6OGfNNAGZBuUr6UdM4M1TEyeyKH2K
JPdAmo5ZBT7TFAliFq9j5oHhOrGBEIpZqeqmhWNGMex57p9XcuAi2lZjNVz5
jF6VnaxB4rDqrKvi0TgkTsyNmJg4M3S7nTDmqYaRmmLMUF3BK5+5wmZ5NZ7l
VfsJMfquQpfBNuGcqEPxr2FmF5as3bhapG3V1FGbLjtqN9wNMOguhvt+qmXJ
NhvcamuH8Z4GGMOEOtbVB43ubsxfv+GaUzXP6HqMPT2/4HpToUYDbepmn7YI
qEVFOCI6+6eh9rwTbo9+GX4D0MioGcdzFWp9GLMUapp8bB9qhobWIs5jJmZt
Jnt23bBReuN6G3jrHdDZLK7LQeesaHuAnqnY7EbR6Lm5wQHzt8zEBJHBmpFu
FMoWXU6FxdmprBbplVxFQWtuDRV/c8fmwtyP8T1cK0cxifWSaKljHMVGUbr+
ZEYJlzKKIDvy4VZWjNac1pfJsij+tIW/emEgmVOX5IuyGf+niwfmcTlJhs3H
cjKuKg5im+1aJLoodr1RvJxjV7SKXdT6R5hE9BJ6rUWxduM6JPUSnbIYjl2v
d6YxXTpfjchXIB22fpqhdj011svOeqVVzYB9ufNYL+eRmZBzcBa7dWXXdMja
9QKXlCSYZbIW2g/IhT8N0VWwIQYKEa/K1WYofcPKcOXhew5chFfmThHBolgu
S8ieQGbtbshbTSdPiK0oZit/2ytQuOXFkJmPvE0vQfFb6Sao2k9FKUWwGlTL
eBJh0FuObOEfI69bsqVJtop5vzNats1qcvND5tjIq0h3vrtR7Y6WdwUgpwr3
FEOfywE3a0uVUSKG2dio/up8FKqCR3dRKG5n0TU4rDpLxfromj2kM6aiV5dZ
akUiuU51cCfsRnUtT8IJjqjN74eHTS3wyI9lqbuCWSKU3u/yw52udrjdXw/j
vS64ju9f9w9AT1MX1FfdgO7u3+g0TdYGUzfujIpAky1CG+y1/1yajDuYz6LJ
OJ32LJqodPQ0l4K3pUjSNF1lLq4VRw3tMJrKpd1Lf5sIX7Rz2Yc5PtCGtPkr
wYO5beZbibDLmwE7XBmQ4cF6sWY5pH6WSv2vjylqMUOf4/oVh6pfEU/z8JFe
0TO9v+RBquQJC0N8TB0RRJmCQJkpYzFShBPnrRerEyk7zdcYJ41pSuWiMFkm
ryidpoVIlr2QdihxtYhopetkhpklM7i7RTqlZaUyTBq7ZONMpQrCdQaV9ugq
aagZylgrRDLxo5X7XFQUbrmfocu0ZizFxDJZWabFrkTY60iBguOzoeDIDMje
k2hCkuhYO+FEKBFO1klhesa+Jf17TyphhCrHarQ4XUQpjGwZtKVKIl3dESoS
9fbPFacLkdy74drKKVIkDapej4XqDRjzNs7Qe/v6kMaGRCh+czmjpCrDFk+h
OgM6UF+OKpXBSF2d6OkLkDQI1BVDW10+gxQtW1vVOY6Jo7WhTfvewmKEoZru
Vc8s0fH16rcr+NjAnbpSNXZrkjNnxNJ1bxF/+matoKk3p9gaYZjWrrpYIhd1
S5q65OCZWXrUxJXfjeoGwZGdObpT64UvkKOnyBCx1OcuhTsd+HepC5m62wt3
+quZIxODZIaRzm7obniAv1EPIBD48xQInty8fv3xBJU+/vj33MSKfoZKNFeh
Glg/UqUfO1fxQxcni5Eqtd5rDZuZ1fh05+AHg+yRhR/t3MSi6bLhkSZdoNHr
rRBAyGm2tqcHq8ORVnA303mA6kYHquVtckBruxN6BopgYAxVGimF1oATFme+
Bms+XQ7bv0iHnbjWPV4Oi77CMvAbDEy4SJy5Uh6lkHo28bs2WPlgOaSQRHIt
xNC0GCPPEg5DaIso94RK9Gp23c/CQDLDIsRnoexSIUpmGaW4+45vxzaiRUWx
FJWozGvj2THReZcsSZyKZjBMqQIn0azSYMWpeWJ7EX0ysUNm9mlP0CcjT6pX
pfHjNFjYkgQrWtKYJkMbnnUim5ZXTIeD11KgODcDHEdf5sSUiWnp4s6ZenpC
nGyT2jThuLrYesQ0dA0X99rRJkpL+fjasS5K0GTWabpSsQHOZScJncycl6gD
L7OSqPDwB1gVAx5EqGZNHFS+EcvjFAIosw4UXZSj5HCaik1lx9KhofQK82ST
4SngrYS+unJe4nUR9DYXQ6CxDPqov4Sv+5oLYcCPUcpfCm31+dDTnh8jK0DF
FrXgI3Wy3KfqBVdRfGlYx04XZG5rAM/FZp6HlWOygq33ma17TSXMlr+K2CqC
nooiqNlxwRzWfKexWPuE+q5bf7bIkwCirmtGterhRVnU3altgS97e5ksEz9a
4E5DPfTjX7JPbyFp/R7Eyo1fSWRZMFENQIenG0Y7nzJbY2P/Hf9fDnavBgYe
h3Sv6AqwlJSMnSqjW9YI3as5/3FuGTcVdbceP+dFFT90hzXeLeIaGzRFqxrv
H40R2HcCNCv2YAhKW0uhCP9PrMbfPrrrSGMP/jEZqQTfdTcEbuNvK67Rj1rB
i0Z1DDnBP4yparQIhsYrYOy2C27c80AAP95/bAkcvLEN9j/KgG3o1xvo17qn
6bD+q3Q2avU3yzVmKnYCX0TcvAfIlWQrRYapxaLeUw0nAoteEV5hgImCzxSE
jnvtqVIxei1+kGgOaLFEVTUyVi4Yk7FKZ0yT1R+9NjJGW5Si+osRjp0Wjqnm
+4q9L8F6Wfk9wzIzP9phYVMSbBzOmGhZYDGscM2CwndToORMChReSZc9Kytb
dhlLsgs7ZsHFHTM5aF3bE2d53o1FWdlh1kK9zJC3Loodo7yFz5q0jBy76EyD
y5lJZJlNWkZJi1rwIZZZoWZDAnjWxYNnzRRe5WsTIH/7K4Izu76hmL0DMxYa
RlmrfF8SuJ2nwesuhF4MP2RXb0MJ/gp6mumqs91NTghgVO/rQtu6SvB1MR+k
G+ipgsFuNwx3Ux91qIePdfZU4CqBqxcyobkul9ta0WHAGcvE4N0zs+nmcQK4
GP1GSnTh/sy9HXzrkY58jwG6fIpmmmxq0ZmAoZpCrCaLYcBVYtYHYisnaWB1
StyMwJklcPXhjSu6qebDpoYQ4+61NMDHfS3w1W0/3OqvMhhnY+PoFcWzzroH
IdbFGCbCmpo+DJkIo6s3fvXVv4RsKBqts+gZLXhsM2ly6+zPqBz/TybCJpt9
7b7fDYEP6bQEPWow+OkgeIY84PbTH4/GIfrqwCcBCHweXENfDsHd39yFjvvN
0DxcCqMf082qBj9oxH9g6PX4Zz648wUW6PfroabHAZ1oXh/6NojWBW6UsnnX
77jh8Iml0NbrgO3jGWze3s8zYC16h87BKlwEm8xtJg5uMbp5tF5/uhyW3Epl
6xYq84ZpwGGeIalpOnS0gsWj2SAd9bdSI/S3lHRxpFqlXkSaDMQp9ExhmS1F
YKesI+dUt2sZurdMHl3aYLBud6h1qtklrIvlhheXlQ+C3lG/ns4xLaueAYXn
06D0VJLw7uJKTbboiTvV7LJNalxUMK+Rb2hZDrqWiysHP76agb9mAs7GutGX
0POVjfFsXCYaR85FGUYmrtQfg4IVxKQoI1k4WqibiR/joSp9Cia1RAxFyZj9
ZkDu2nj90tzZJ9fgryYdio4kQfnpFHC5TkNnZxGT1o90WREyD/7GDiBbNG1I
rNEa8dfBsL+GYVOslVzLNrFtGnS3BY+t2wzCqaZ9+J3Ra09mIjA0QOGBaMOd
0emVuD8JXySb7odphcGqchiqJtDcyjqizsSRzgzjXif4XA4sVcuhK+eaydCw
b85sYM1i9c6YMcz5Q6vQFq5CdeqoCm3nphghR+uzLj+MN9bB03E//PWDAfj6
die87y+EMX+15C5K547795V9zF2g+TOoLb9B5EUbemWh59LVyNjfhcy7GsUz
G3plv/uduMD/3J8mXqSrbHz1p68m3F/p6998DXf/2tgrs4SMjNGiZKdB5f1K
GiN+WAGOUUdw9Tug+3E3hrqnfHu/X2Pg+w2ur8foSr1I3Sx+XdlbhCSW6sjR
M7GnXj/4sg8G3q/HAOiAfgx3hF0vLgp8hB+B1zXogMr+C7AXo8quzzJg09MM
Bi8dF6W4Jd/QQBmlPGtIsUqF7MIRls7E1GmwcHAuQ2WoTTfdWs2bkvhZynSU
7VSrfr6hqUY9s2BLX5P16bzu2RDXIbijUEc3aDLxKy0Y7nxKPrSuMNg8W34x
NYqtMwvr6EwT57u5JnkInbjLkNNhB2U7LV6WrymXk2Bxq2ijLWpPEuRFQQq+
9YZP9Pf1TlrfSlhSlQj5Zxab2LsoKMZ0h+IxeKpCJfaojebYkzC5epjskLJc
hC0XE9xVfJ3HnTIyTxMSynQnSlQLXNmSqJNH69KVJDlaEQUXS1+HnMYL4Ngy
D4rTYqDk9SlQkpEAhZjc8tfSQXh8EQNl2+OgaucUKD48B3L2U7MvHpy7MeQd
xJC3Nw4yj6VA1XspWLOeIkxdlcegt7uKubPQowkfys2MnRkGmTlapcScJplz
l2ZziAtnLnxfMrTf742VI2LyTpjqPnIaJ7kp0F9F17MuUZP/yjesVp1wp8sJ
Y+35MFxTBKOeQujMzlPTsHa50ygwCw1xE3CjFpuHkBO40f0/ffB+fWMIbg/9
DfDN3V78ZRBvVvi0vxrf64S7/lpEzs2wIXDCOiuW791sW5hxNsMJ9fDOG43U
Pnr0PXfeYp9hnHF07Cca93z7AWb49vffwt2/usvOjX83buJ9Swv4PvVB0UCR
TpnzJl30rPLnxJz3r73Q+DeN+vL+lZdcQyG/56Hab4eYNQJOMGfmj2v7izi7
IW0mcs3EyFl05hoHi6C5TxBngm5MdnFw5J0VnPGorvUPOuHd/kOw9pN02PZV
Bme5dV+JXEfELZK9OBHqovS+HBG3YGRuSKBbMDjXOoE22g1Q4xY2uUugRi3k
7qYmnaM23ELRhpNDZDaY1TWDjVMrthZdK7erflw7tbjZurageWSd3ou7mGoL
Dl+oQlYc4jSGu00G7XYGw92iK3P1XUyrlG5ZUwpsGs3QpcvA1+ntiznUFbw9
S0hnY+muvbOAlSPd6Pkq/kzZe16ggnRPnFVevNbYleOzAFkb6LLcV5CzqzRT
QdzRa3w3i7puuPJ06gg+kfAub58Ol3JTmLrs6t2Q7doNWTW7uXzNxI8zXbsx
YVbStGymA0Nf7kpwbJ4KpVvjoHJPArh34jfk2U03EHXvioPivQng3E/zGORd
FBS+iUbvw0r33TSoeC+FwavEZyKv219lZvM04g6XqFw15R5GQI563WXgayqw
RIh36piA0T1a59g/MR/bW1iE5FXJ+lXEOyN+Mt5d2tqM/NW+6+Og112BMbOm
Em6JAVq4iZX2HYxXHw+VwIf9heCrEbukIzUFMOQqjtMnZHmDQZ+V7QRNeuc1
NOcscKe2VW/O3WkQBavG0NkQulqEjtYAr3t+L4NHaU4VslTAdtSOsXZh4lHX
nckbGvqvEZt2alo2EnlahKZd8n8OedMMF/CmsTNaJg55dnj45CHcfXQXHn33
CMYejoH/Mz/c+/4ejP95HIb+MASB3wRg/C/j4H7sxq8m9TRo+roJxn8/LtkT
j60ftjJ5tKL50QrN7zdDld/B+Klsh8+itk3gtxr6sJYdE7GOIt3RE8s43in7
OjBJHhjdC1vRPerb0fM62b/TzVObDYTeil8u51ynunYM3+Bc6ZpF3/lUIxrk
XnRYnLNyf85IHb37StdMM/tmNhavpJrenau3B0diSzBMnuGjS3K4X3bnZJoz
wrZ5nT3SCc04Cdya4uU6cDb5uKQxhafMCLcVvWmwthMzW/YGKH2HQk4pR52S
3AzIO/KKHI1F3zSuWjUeL1NnN8WlhF4ICkeE0VofDVmY5C7QxAV+fEW+f2lz
Alza8ypkH0qBq3uSIGvtFMhcPwMyt74KWRf2QZb7EFwt2o7J6dgM/KmuHE+E
q+8mQM5p+n3Lfo8fj8RB2dYYqD30Anj2xEcxaVFM2rWjs5k0As2J4a0AQxyR
VnQ+XQU4Eq22/gKHOJNOmlsnzSxhI9KGsLpFzsguPcc11+QaPIua4Flwt8FB
s2UmrlXpIHu1fnM6q6RNNedoafyYwDeqK3qzDWrebmHdKOqRcHS18MHafHgY
cMAnQ8WsGz3f7HBCt7sYq9gSFK4IfM5quQ+hGfYh/CB2U22G1p1YwTmzWgN5
7byF+rinl3t0X4y2S/I0+HKsFT7q9TB3mny8g+yNypyn2FP7E0b2Guo+Y/Y0
w1Caz/dhGHt/xqT394xbXAT2TBH6d/P+c9iLNlSzQfbw0cziafDot4/gyd8+
4WWiR4yh/5tv0vn7T+Du3yGK//cj+sX+M8+KPK3Vg1+0gvDnTcyfEUL/I78O
YQw/WqD9fjM0YMqTAPKzifKfiIJToOeuh1t73ddLuaI9gAxSEKTXxGAvkljU
64AV7y9nArcJBk3cz9M4AdIrSoYCQw1WfBWEUFW4KYPJ+kytRT6qcRD1DCsl
iCC2X5eGzOBauNJNlWcDqLlH6U+4aBFVLu3E1om0Rz6a1OCa4YCnmrm1Gc6s
r6DtCpn8CEljnUtn2A/IRULGy89R9MP6lpesdek0F75K5GJXDbORkNTry8ck
VIB+kJJFJ14N9vcwByopCUc1MEI5kD4WMTCe72mXue9VyDw0D7LeToPLCOCF
oyvh3dcT4dzuBZB5agtkHU7DrPciXFuF5W861qL4XLgyCn897tVmGgNZZcWK
OhEVtNPC6viIQNEOOSftkItQIpYaW6lB1qFpUIMAopP4pykIZf6RlwWSYVCW
nE0TUFoZyubGK0ykAJJbexbdRxdGvlLIPp9FNS372IMVZ1F2lkx6YpzE6KNx
o6KX23jVkkJE0hoh8AkV7Syhuos66Uj3HPZn+2GwygUddQ6411sKD/oK4OEA
DVORjVb4ALPfkLcIhj2lWCKXwnB1MdRfro/R8x8LGTxhoMnCtzmzbWJXz8KF
70etHVzw3u8QBa9C8evbVARXGFA0YzYUmfC2vxGG/VWa1NG4n2HiRy3ERnUy
wev9dMJUHFXBamB3ity5NdpIS3b5Fvw4EiffvjVzw09dxAiXmR0UNyImBmmZ
+NECX//D1zqItOjjKWyiFR7+7iE8/MeHbCItUhFN1DPhk4kU9n3ZF0ahKIhd
gSJoGi4jCq2yFu665YYW/D+fWnyH31nJ8GnMngVqRhyQe+sCrHq8nDMg4Wdi
62ws30p8RebRa4qAKz9fznMmel+PYqDs7VkNU7pG+eh/GAejIsBnkfwZW3wz
u2ZYxDaGMI+2bVvs+mEDeo6tDfWOBnWt+oWJktk6Mk9cv4ODoZG8rRHJQ9ad
qbCkRVAXJavdhfVJfGSKmFvYgKS1XICcwr3MW9HxV0W1O0OXTvX1WLij8+Dy
4QVw9c3ZkHV0Pn98ZV8SXMF4d/lACmTtnw9ZBxdAMca+/DT8K54WhcsM+ahY
6Sq6NbsZSnCZoGy12QQV+FLjWRQXLjd/QrCXt9YOV978IfZMkr3ctxLBgzmQ
wLNL9ip3TQHnoRkh7BUje1n7Z0LJu4sFe2You5QOTcwec2fVuSuBkrxrkHMu
T+eO46An18BdMA4aW3l9QeqCcdAt36I24kT4zBI+VeQSeoSfr6gG2vGn8Bw8
DUMdxdBZVQB3ejAWDtARBQqEVo6E1+sqGb573nKOhRXvtETryvn1ZKjXwaEd
PxrybTfCRx0/VfwSfGYJn0Cv0wCfBdPhgF4Q38ZkOOKvAqWfMRUK/Swh+rW3
/xI+/fT3ehoUc8D/hQvh+EnEk9due4Z4Mc+5iWs3XLbtyR+e8DLxI2a9v8H6
9tEYBG4HBHdmFg6/+J+/Y+FoTZfW0Xvjf4UF7l/uwsP/ge7900Oo/LJSWed7
6ptgHfUNlXX2sOYfpTs97Nm470ev1GpG95oxHVLoM3H1O539o9rXfd0Ble87
4OjNQ7DmcTrXvhQAybzFyjvpH4mo5u30ft+oPrSil8BU+qpNXOneZG0/q2F7
g3Z0X/LNwN8egi+Gi2C+WFFzcNuWQt7CUPRCM14w35F5Cjw67b4t9LS7BM8G
KxypvJdB6NHzxKxn5fm7jf4NMK/+Vcj3HIM89zFwFBzSwPFuGt2c90QaXDud
DpmnMyD7QDJkHsQIuCUOyjfboXhLPBRungZFm6ZaoHYbJdV6fKzbGA2uFagJ
GlfMjJF0Fn5N3pXiKsdVwZ+r5M8p8tS6sokGkHXsrCHYZb+Lr8/FQ85b06dI
4Mp3Ykn+1is6cIRbKSLnfPNlqLykF8AVlxE4n5Nds+glbynUVDrg6rlsyD5H
56kYuObaXD3PmQ15LnQKuJIv3SGKW4+e56pFqtOLXpNhu1ZJZ5GPSrjKd/BP
dnUr9BSRZtU73sESsP74ORj05WO8K4bx7nz4aLCQnfuQ410x3Kp3wUBNKW/j
0khx2ckWeRUjc0gBjEubAB0lvKYX9RGVerjdWAefD7bj9ySA+7Tfi5A1hpS7
RuBM/Ghl6Mb8LcwcLdrj6G74yGxIeDWu+9zkSzKcKVUNvng5m2K0TTX2UiLo
ZftxsJn40RoCGy26a9/Dbx+iQb/kevZvsZ79pye8TPyIvP3rd/Dtv34LT/7u
Cd2TGXmzMG+D3w5yjHv4l4fgeUpb/8I276+9EPhVIMQ248ZGHD/auLfn7naw
bcayNji8EgN1ASfsO57GoY5AozjXFnBA+W0HVD8QsG2/u83EiS5KN025pj8/
SDVu0y6Q566MuxXEGbG2qDQZ7Atigg099QU8QowV65T2OLB32IVh0WAvtnPX
jsIbL0/Qr2VFqVykWuWcsApty7k4FV09gizSIfeQyxJhgMydy36pLh7ZZZJT
xKsa0mCVVyxMtc1p+IdpVQ165toAb1cfgtyiY5Cbsw2cBYfAcQTh2j0HXJjW
ynZPx0iUALUn5kHFnhlQuWUauLfSBYxqtsahFfihjd8g1Lxb7cxaI73eEgNl
G6kgJdwEb0VyFVOIK2XNlG5kW5UMdCLMaVCE9ezlEy8zaKagcBbIfkvoxus8
RszDU/GXI3gr2TsthLcKzHcle+OhqGgebVco3qoc26Cjq9iwPWFl3tqbCuAK
qkYBLpuYO5+lclxRXpae48yGHKfKVXHQodZIXKhw7kmFs0rhKLtVn/ZBZ00r
VJ3OgsoNb+NXknA2Fi6Awn0UKIO7fQ4Urkhv7Zk4yZkhgMXr7bpSeSuGFsuE
Dl+36PCpnYxIY8bX3XUw3ujhORTl29ObHSiYW9asE31Toe42fs2YPMRFMyq0
o6Fw62/5HNrx5/r0o+8ijuFNlVu0CjfZukv9Ka5Z4W///m+Zq49/+zHZxa8R
LjN5FQN//P94Ck+CRVwptCitDX03BB//148ZrNbft+p9OM+vPDxgEo7W0C/E
ZN0UftR4wk714UQas09IYwTaxiNLwDcgwCK4GK07dC1e1wO6g0IZArbxA7ET
QalrNffd6CMzK0ZqrRJJzMRRTOOCVKmlUhUFL3Vc1ASzD//MFpwZ1rj+VHFM
MZYaSIZ4QRjEdtgtkrGQGrRtImNUe5rVldTU6Jz+PFfflMBMpiLZGrHJql+y
Yx1GMnHJSOTp1GJYdDQZ1pxaAVuLN0B6Yxqsq8LfClcarKxMgxVluPB5Zcci
WNSE30IX/nb48Nvo4PuaDtK38VbbHih1bgPHO0m8rryXBmUHk6Dp7SSoe/NF
E9tmhpq350DlnpeYM3aNNIth1/BDcOPb9E7d1inQjM+uLdFQg4uei+lCbAwa
yRbFzhFtZYboZsBN2Za9Lh6y3koIt82s20ZbGejaVANr12iLAkkr2oEVnycR
2vvx42vpUP5OkurGuXkTtkwfrKMhOyTNxKZpHNxINgItUnrTDMe6grsTtabQ
mlSVqdUg3jPrHTppWpREbcTVAj31fqjNLYXi9ccQspNQtfm4ZshsI50FcL+v
kkULz2tk2oAUbdBVirmvDYKkdfOFdYOH4o0zxR7jTDHdtOpOWwVXpBa9FUfV
aGkIaKoVF3zPCg/8fXDLX6mj1lXfTylNY9PM0OoKwGe3P4G7Q3fgwwdfzzZ0
4NT1JhMMuxNqtm7RT89qX/3DV/Db//e39MOyYY/+/EivK1+T+wrUQxv+dhjq
f0mXykPBolTqEpMkIYDRx4GfB0IAU90zL5aMImVZQybnaG07vgK8vQ4T64Xm
kV33HCyX8GsKnL95GlY+Et00UmuJ7KKpanJFeBUpzpFGSYXkyVESC148kPgD
allC535JLt4QoI+iwF6FH5fFMlshp0dzU1GbuVbjIS2plB6++JDDvJCLdKhj
7quPztbkSXdSasXxRSwWPS85kwxrnSvgjaw0WJOznJ+Xlc4zYRVJv7i1nhWw
1IM/Uwf+jL3460rrp1/XMvyVLEN90wa5mB2kb+pM+24oLDwLOZl0HIIUw6Lv
fDpU7Z8DjeiY54B0TIPa06ng3i7Q0pgsK3i3xbJrHsSsGl9Xb4klvEysF9Z5
+FjyhkWWnzpk9h+CjB0rX2WFrD3TRYdNCKYFBTsQC4KvqbyZULQvEQrPTId6
Tzx0D9ih78YL0NgzHfLRZCRMHySpKtgrDavg9loRTchJv85n8U4CyRUplmmG
qTm6akdvYZXeNwuvMqvZLQ+436rmHIZLxDAb3HT3wXBNO1xv64LavAZw7XoP
Stcexzh2jHBkvK4jTKMdZTDaVQj3eqvhTl++HscILgXY9doSHTBzSG+tO9hb
k6xFPj+P2Lia4H5nLdtlMWwmfNRbhU51RBTMKiPZA3+3LpjaVRA9NSt01AzB
vcE78NXHv+Q13ncTfv75716JcJB1moExdRuEH8nYAmPJ+c/fMmBTJWMf//Fj
nbE5/GiGgUcD4H7iBt/vfc+DmEph8QbEVFtM06fi8BskvfacTudmWCP+s6Oi
V+kduvM20RUFmTcvwJafi+ilhuDoee7Xc+n0gibjlhQrhCE19pFyfA7TJQ6e
4uf4qhzRYYcUCKnYIFjCK00f/ZhZRscjSSqNr7qmBtbMqlpUEcsIlmx7UX4i
lVZvmAFb1ybCnvR42HlgpgnSM+kOoAom8kiDtAY6QLGycwGs6l/Iy8KP+J5/
AaQ1z4cVPXRBN3rUGKtlA/jT9PM+wyDd7YqYOrgrE4qLzkIe/jUmqHLxOfcc
JpR9c6D+6Kvg2pMAVbviwbVvOlQfeQWqtiVw1jKxUlZ8GQvuHYjGlilQszke
3YolpkyslAaVW2OgdI013CpN75WV8SdIKusEq/LWx0Pmm4nahH2B44Kqmq02
UUPGs1ZVJ+Kh40YydI8ksFbdQ3HQPfoCuN0pkH8sKUSsmvoLKFYRSUU261GL
CsjwqFVdkhtyw6q2smvcHBNXtDVSFYxYVEISU2oSRDl13d0NN+pbMTD1wPtd
HVB/+RpcW3oUytYclU5FQ2/OVRhr8ED5uU7w11bBze5CuNNTBHd6nXrYMrFW
ZvaKLlZETTJfgcsU0h/rUWRF2gi4Ud2gLq120+2HMU8D3PW54K/u9VpDWmSd
kyYum3wkr25Kr9Q+QG/jBzDQOoj/HSmlsVNURhJTsyKcXjVipYbefiRWC+V7
//iP/6hjFT8pVhbo/bQXvPe84Pu1D/y/93PdaHuGWIPfDOrNrqlSLGOzyyy7
+ASVilzU6Grtd4A3IJpaAiszv952Yxt37HGZOFxpkPpUDOYSVXp9KDcogzuO
Vv14qaoRJVxWQ69+abBXr4Y2jGnLxIRpjJgaz9X40SqKxsJYlsxwnlRjrKbz
rVRWnkjltfjwXFiK8WnJOSz6ctJYqBVXUiD1bBKkVS5AqebBxsxYePOqHd7G
55P4w64aSJFikVzz+TmW38EatGk+LG+dx1phxoLl3Si1P4m9WtKTJPJVPJzv
2MNwZZ67Cg10EuBMEK+itxeC5+AcaD42m/GimOV+82VwHZwlQxbBZcFHO9ST
TlviRM9/Cx3CILXMrFYVfr58UzRxpT0bLkvIviYFrCs7ZhgDllRrL4q12Uxq
xbFaFj6e0FwWB6N9cTDWHwdd43Rdb7LLDD2ol2/oBSg4mwYFx5OMU27l5WeZ
LAVXFuar0BrRxhmrpy1fn9ItzsWP6wq5ox9tRGtXGTjXXuEDAHReaczdCaON
jfA+Bo9BRMqXmw/Fr78FzpXHoOj1t0QhqEHLyfP4976KjTLxoxWtqoARP1rU
UwwP+gtUrjJSReO6N2uLFVVdEHoVEJOhyYU+cZNLIXXd7UM5m+CDntZQpDzP
7HNFy1B1n8vBShjyNUFz1U2sA1vxWxY4fXT7cx5PI5ZmRuhzKZyov6XEWfzj
cEox4ET9d2IpTuL023//rV4UJsmNxutfX+fTUa5PXZym+v7QR0BZnzFUYdxo
TIjQ11JlodGnwH0v1PY4wD3iECWgnfvvLsMqv+uAne9vY6EoT9EwxaJfCqe0
CEaFz9PaF8RQLSjPiAanKNRmohYkKrQgjJM5y0RImeXeIh0hiCuIgznnX4N5
dEe7nLmwwpEmwLmQAisup8DiS0lmlsQu01EKr5WBRbCCzqsHFsLqjtmwq1B4
dAbXiUL6yy/SkzKJPorjRzOkedGiLjKJbKI7wvQkiRRlh3Ode+D021ThZEOB
IwdKq47pIF09l8Yg1UiQRNVnBfehn+F7Mxkk4ogwqqZQRRVetPQogTWiRRaR
SfSaOvRFoWnKHL77GMklas1f2j891KWr2zC1ZZiFS9uj7fIQQc2JOOh0x8HN
ATpESo9RMBKIBf+NmSJZyXRVWZ4E2ZisDD6Vn0/TfTIZfKJXVAvGsE8W/fg7
2dSIr/vq3NIli6jx6PDnrhIMUK1Y5/nljuIUDDuNMN7cwn+rR+q70CgXFsNH
OURVYLFHRV/V5uPMVMvJixikyqEhr9XMRlmgE4260+OC22QU/qNMWUpjoKwQ
qCnVzxP4nFUqQJkMFygK9qtqlUsjWOndammF+11N8GiowRpS7DVLfSaGpxgp
FoWnESxIm6o81JeySZIe3PiICSKMZkToUSmSVH+KrFkyOUnRET6l4tXf//Pf
w7f/j8hLsRH67EmyuCOSSBpiyfvYa6LQ9CyPjPOuCc9oUxk9okWnnsqHHBrr
EzPBo6xbF2DTJxn6wH+qOMykKEqZQFGwLSVnGszGa5oZ21LR8uvntM2CaU3x
EFuN2LhiTfzCDtOaE2Cm9yX4Wb1YMz0zIPWDZEi9nwwpNzAj3ZkLKXcwDI0T
C0QOAtSfiuBgWEJQ1je+DLsRmncM6IggJMCJl9is8FH5No/DT0r7aybZVEJy
+BUt43sUhsgfEws0BYrQoOL8YAM99wwadHQheA8nQd2hF1kgqug8b70Grh3x
yh8T98etbAxlIVolW6ZCJTWjttk1GY2In2KxIfgcABmruaz1Cdw/F2lIY4Fy
t2ImYsxIIIRnpyDIwxdlC55oqjwWB4FOCm+EEVYsA4RTLAwGEKLbr6jM1NGf
ACXZ88BxnObbdJNo8qsKjTGaRMVe7tlrrFG0NIkyE51savbmwmBXCfR73fpp
JfepRrSojS0SM1zR3HQij+75OqVHASzq6sG77x3eByxYfhh/PtQI2UeSNLhe
7USM2qRF4nGwvZhFoilXOthJMUmTkWnQQ+MPZTCKFV6ns2biICs3nRKlRGMe
/Evoa8dvxQ+PRzusITOsxVzKWSIkpFj53n1/NfQ0FcJHNz4AxdCXDx/DjZFx
pudFA0NqdCsRQm+z+RMYWmxgiNrkBJBdMvT1//xaZ0iUbVHw3X//Doa/Hta5
odhD236yhLM8p0jTDCJ5ZM/JFKGCaxwsAU9PGVQM5UPZ+3QndLHTR+2mdV+I
mas1T9ND4lDKQNAg41xpmEP02hxskcfrg6VqpXgRgCZcDeKZLot9yr0fTtbt
g3ca98PR8u18xetVn9ANIBd9QFdlTHkfEfocg9GXWLj9gq6A/ZRH9J9iIfWL
ubAA30afBE8xDM7KwHx+Jp72IEmnJE/Hmaf5RFeCbC+l0TfT+BrMb54NSd5X
mR+rpIhiEAFES1CE0cabB2UF2yDnZBJkYSS6dCUd3Afm8F6eV1Lkxhqo+tBM
qN0ex+nHLDtH5E/FVqzBtk3R6zJ+T2ai0F28GL35bRzAMjaUqC7L3BJvYX2s
kL15CtTi2zVviPRTTQlop92ITu0VUZkJdKw6OuIZQRpONOLT0PIyFGN1lo/4
lJyQ+Nh4bKG4LJvZoUVhSI4pyDCE32NpNnS2FcJQlwcG6mui5PFwdZ0ffj5b
Z5aT86OudrjRLEo0kx4m6qDhjBg/oPjjwDhUjnGoZM1RtmekwolRqM4m0fHk
tEAAf8L3+yrhtr8AU5S4tZwL/4oOh6LDLW/XKZ9sHNWzPOqmIlSUjXga8Fvx
4bfg45YRevO8HaRY/TMNWNe54ePBDvSwT9RlZvjo5ofwycMH8NknD+DpL/74
4qR9I3PIYUnU5ScaRIT99vvfskP2CFFojtyuo/ZS4CsxC2XiRzP4vvCB9xsv
t5GwYjM/YyTUOP6eyI+xE8amlEGUhjw9ZJAHDXKyQZX3HVbJEDWSNt7cwElo
xefLeQZq0qpMXVKR/kce8RXzO+aZYGED3QeEuFmEf8O316zFX9Xxyt343ttV
u+GUdy/0dpXjf+j3lWNq66F/mnq6CiCn9xhserwaljzFH4OcwR/jF8jULwQ/
yh78NCzB9xbhe4uH58awPSL6rOwX9qweSIX1DbNgH5pzWvpzDJf6/Mr+hfGq
uR3AH60No1A9X+4WJUL0fK+xRXKpdLTMPxcKHVcZIzM/YqypOAd51zbAtSuY
jnJS4OKJFKjY85oYLzjwIpTvojM1CVB9Yj6UbY0zh3WEZLfIRBSpSFQs9+JC
IlHMD+7G5VJ3+9gM7m7jv2tX3k7EBBXFKEWAySxhKt8RB+2VAiYzw6SFoGTi
xyjGqWtYNMI7++OgqmgllCHB+adSjNMHpJMjL0uXSQ5SqURU6MiCXr+DUxHh
RIlI7x7tKudUFDzOE8U03Wxu1P+CUyKi7a4b1aVQvuaIiX3CAm/5EZapYNVh
jKTvkkz4wwZpGvIV8ljoQLMDRmvLJU02ffCdLpRf8U6L4Vh3o07SqKsFC8Qm
rMco9vRg1GkKJYn6RZ4gSSYKQ3H6BlwXWlYOH/T3wdeYfb7BdX/4juhiW+CD
8Qfw4cM78Ovvfsnri0df0Wi4nPr8IzeIgipZQs4ySpl+bDxaYqBJTRKoaahH
/+URx6HJaNIkTR40penXTYom0w8MR6km93RJk7GJRCwRUYqkmu5KqBxnkqDU
SJPGjaMdD7bBogepOknGEU2zvFdaSnMyA0RrARJ0uv8AvIX40P8uNx2DM94j
UNx6wQS+DqrVe32V0N9JV/Gn87ACo25/KQS6i6EbP/f2je0mo0gLUZ6FTzD5
POF7HT3la+3jI6m06AtMQ71zIa0vGX/zFUvBDTVqVa9vnAX7JUvv4dpfNY04
ktEpZQq/sGKRNx+W+pPg5Zo5MN+DDDUkEU4mzklWXShVwC3rmQvu8lyzrNkK
8jKhpDQTquvfAWdeChRcTYJsZzr+TZsDFXvnQNux2VC7ayqU7YxjncpQq/Jt
sSIXRek6qR6R6mfLZwVVSSSotBCoROEWhKqMUtOaeE3WbJlH4qFiFf4l5S+t
5f9cQVWzla5pEYxPrrfjoL8rDn+7USliKVbUbVNhrD8WAkMJ+kadt346uHMy
oATTU17YRh1do0IBxROe57MUTgH855KuyxPoLIXedic0Xm6CKMOoJpVr4uIS
gihVrt3poFPP9Bfejo/dcL2hhOecytYcYZ9KUaaStcc5P9UcOgP3ulxctcUY
hBrDf/5uYVHVQ9eg8CqhLCzU+95KGKwu5CkmmkRXMlF9Rp0iUkmsRqNMkTpG
xjrNrpuF6cFXCp+O3iSjTPAd2mSFX9z7nKhiqahsG8IvfvzFRxpDpcHTJ5/z
fUEIq2kRjh2GN5RIHdMzukbPydfSML4IruhJN+Ui8RXFDaeKDyt4o4564aQX
USb9MhsmCsLpUv2mxuFS2HlyFZJViMut06Xmn4gvTFY2SRf1mFYMY5rq49ux
tdNm+bxmdATT0TH3XnjbtZuJOorp6KhrL3T68LvrKMBVhK9LoYcunocy4f/M
9MIEw301+OPeHmpksWhF86MV+vHb6PVj9sdvqQ//RFT7s+HgvS2aDE+LfjFP
J2zhk2Ql2NKnC1CvZGQHPeFFGY8Em2LYWBNKrR5chIr9DA6iXu9KxXbU/4z0
CkrWvzBWBSz8z5dgciLJTPxohUVe1Kx+NsctWpIzEbRegLRu1kyv/6gFVZif
Ce3+PLjmzIYyVw542o9BgUPQdu78MsjfnwS1+zB0HXkVyvZMgQo5+V12+GU1
PGAkjd8zcUfKyq6pOtDQE/+BfbqgatQLv3hkJk9x4p8So2oeGb/oWe+Mo2wk
mieTc5dFj13BetBioM1/6xWmjWJXSdY8cNNl07ACDp9B8DZcYNood2WhaPrg
uhWaG3Lxj0cp/6Gg1dnqgIbL9TaDbip6Kd1osmDMK6pCTaeim8OOe/8ZEk7F
LyoQKX6VIXANJWVQk+OnZKzjdqu7CKNXIfS4BW6axI1aUzSvTjt4AZcDf8pm
/CWrGXQfXPe0cgPKxLxpXBE+GmoJG4KicrCSy0LrpMrh3+YmD9zvv8m4meXj
F+MfwmjXEIwODpBnZknbr75+zEmMUEsIuXbi9yFNKuM1xLQIVj1jbj0Sbcvk
e//+7/8OX//la0Yt6hm0ffqnT/W4JcyyqV46b+/JoSk9lkVy7cWwA4Sbjiwj
z0wMmg1q8De2ajxf75WXIW9FYw4oHqERz+Lr1E8vGnZAQR++N+iA/B4HnHaf
hqzB96B23Ak1N5zgGsuHtvZiC7pFf9T6MWb195QxZyZh2f69G1k1CdoI0jaK
K4ZBi0LQyrlm6PNXM2jd/lb8uAnO9xyBRZ/PU4KlykqRYCPk6F0TJzMLLEbZ
0nqTsSzEpIQGrwws4OGmFNBCdNO37GROe5O38cg4LUS4OANtKwLJkNQwBz8S
tM3Bx7SGuZzTiDY5aiBos4bQlnX+ChQWXgRH/hWNXYtl2Srq97Jq+bkp8O7J
hZC36zWowlV9ZCaUIBskW9lRVO4gioOmiZrSonfYI00gqF2+kKgWPGVY9rqF
YQueMozimvLK+gS4ImfUSbVyVK1GaCbimkWHrSTDAq1FVi4kI4km+l3R/PFQ
j12ohmGttTcBCk8s1FUrOE5HlsQRazVZJXtcNjmLUF+XC71dhZgGy2EA/4hS
YOuqLSHRwCZv0UacUW9dnZMecjVyJXm/q0+2juzcJmo9eY7DGi3V7OLX+DxY
XgjNpZ1QcrYH/y8nz8zQUloH/e0FEPCUQ5/baTZQNlSTD3frSmDQVQ43kK8p
BsrG6hu4ggxS5sfSsVFeB1FQJmY5OycNbDHyPRJ5pLEaBhv9dFSPG+vvD96E
G/298OnHd/A94diXP3/MkYwEmxrhYmHTdMe+h3/5l39hfsw/zrGoCJ9aHmFu
yvYMx9Q+IC0LP1q5CU+OqVGFZ1wAcYZsvBd1FsEbB5aAq5Nuj1uNjxrfRbwg
kA/FAfKqaIA7XDcLoRpNI5toNb5fiN9ey0OqBZvvFkJfd5VOVRCsUlyV/JEA
S9NjWKysGbvoDyT+t0RUn78Jbeuup94cqvXe2AF4/ckSWS7GUu6CFGqeP+Ge
OiO1FNfqLxbB8r6FTMqqfiojmSrN0OAy5jB98AmfNxfZ4TCu93BRZbm9/mcm
/HEEcAv1WBYj4VJoEVlmfrRwlZnifS0ELh5MoEZ9p1Ar89wFaPPlQXlVDr5L
ZEWBtyUXKj3bmKzLmcvgPawxndtnQ8XB18B9+EUTe4Ul49uvQemeadIqQ09e
7g9yC8z0rF3BeChOt0IJUhWpJ0+V5WV5uRtFVTXZJMOX8Aq/docVOgotMN6F
5WPAbonQ8xLhy87vjfbaYQS5GsLn7uszmKzKollQfFSQ5TyBZB1TZFmhPGsD
lLuvQU1JPlSXOMQVXXNzNXDlZONP01SWC53OYqi/RNtD9KgxW6FX/LKKYzS5
rTpfYx6MUe2NFr3N3QQ9BdfkcRr9WA1UoGDluLoyszCJNUD+mSEoPBOYIvEK
eF3QXlMA1ZcbYLCmSA0qXK8rxVXIwwp36ypgwFVKt/eO1WfPW+VEgp/lEn7V
09RUSBQTrbDGHxhR0Hh7s5vmOlsDdEaYq80ndz9nwz66exP+gHp9+fkDePjw
psUQyR7//LeMWLyhQRY+UUXVpmqQWf7PKVsh3/v+L9/rU1aWSUcaQimzStDa
vmgD768EZep6huYIjXt13nn4yTD0fNzDiy7aT8+d73dC641W/BPju+3Df0Mr
u2qgeWwU1u7fAjXNJeDra8HqoBMCYwEsQ93gvUd/ujz36U+X574barAcbXxA
d5cQzjXeCTpniuCcOdw5ymUa/gPj1cvNKFludvsVe01MH6nXS/wN8o/qay+D
bbfeMPAnevqKP5HQrFx7En0EVZC/ZJMe0oJjDRa5ebgVqTtaaOfe/mlZglI7
P8Wud/bnwxyJnJUfo2FxXRLMa5it7zhS4an6Zz4MmbUNV/GXJrJYe18e5Jek
cw47c3YZnNg5GxzbXgH30TkEG5TtjmXbKk8kU/PMJipKssyi5y/D7iKochIR
e/bZmpz18Zy6Mt9OZMZMDJlIXq5V+DXbLRg2kLAmYo0gsxBlLFlwxdIxFnQs
IcQxWoEOO3T2vARNA6+A1z8TirN3QfmxNCg7QRFsAxS9mQaVb6VBza5kqNiV
Bu4zdOXVi/8/a+8dHdWVpX0/XUkZEY3dNlmIIJGxjW1yNAaMSSbYxoDBYEAg
QAKEQDmnklQllUqhpFJOiCBA5GAb2+0O4+7p6e7p7pl53555v1nfrG/NH/Nf
//ftve+5V7dEmW6/3ax17q0qCSGJen7n2c/Z99xl+/k+5G98NGRXhwt8b7cI
E7dK9ucKs7iC5HyM/Mogt6rQkpmMdINZO1VEtk3isZR1e3HZnSGOi9hl4Qea
8+KjG0VpF5F9Mg3OpEzUZZ0VfrXmXaLBj7PRkpcGX84ZtBefQWN6geyxLxZM
VZI6vLRjsWRkZoTxpoV97qxBhEmarydlraXVaCj0ozqrGvc6+m3KezG7Lvtb
8eX9W/TsF5r3In5d6WsVfOl1Zf91beNWHlF/oQfryZPv8Oc//5l+o38zxBaY
GiJ4kwbGly1IQ0QwiIUoUOX1aX3tpQ9KlUcL7A+18dEirIoSarn6XDKKm4qF
XMwtPjffbsaNb2/g6tOruP2L2/KYd4mwqD7Vge8G4L97E6s/2k/n++TjiHRV
uRY0dTXRvymAayDA9eSZAJeGXAIcoy1UAa6sLlmwFgi4iwK3WrFrOuBglxc4
T+Mzg26w+LQK3vi6DkabxfB1VkU3ztYW3opXtSYfo6QOnf5oCmY8pkFGj43d
wjvxim5xyooR3bzaOgEDjjE3zaZ61jVbNw3b34sgdJBaV0Wgns7bL7zMjs4i
VajVsHQ8QgxbN9VYNAiRY6hWjxYN1qNMvHgyddMyJiOr4ESYwC6KjodxKW8v
zpCLSzw1FzvWT8Q+E/AubogyIrVLH81E6rrh9MU1G3d25UgDdpahi5iv8a0s
HYaD+x7spZB7+3TtWBwm5F0g5HGDV6Z0WdhRctSOphxBXT6jjrEn7k1zcEZX
aaSqOJs8Uagq5WfasaEsEu6MCLjSufmXj+FoL4zEteIIdJWPgN8zFhXnRiFz
0VSUrp6K3LX0m1kTg7yVUyzIXcK/xOzNr6L42LGge7dmfJhvpl/GjgzNsWVU
orkob5B+USo+S6Oa86DJte0U18Zn7i9l+hWcLBXmsXszIXAYUvaXI+1YOY7v
LkPJmXx40y8S7pIIf0mEvzS05WWipeAiWspTcLmSqtCCFPjSC0LNhWi2tpRp
MyhYahSi9iC7FI5QLOSik/lXndtJ/Gtk/kEHYF9DJ660aQC0mwDYf71ToW9w
zeDJk98L+iJNANSvMNSDtSdP/tkI1v4OAFyoXuNODB2A1ud0Y3z779/Ce9+r
VgtUaMbB2vU85A/kqw6NcHmt+m613HskuyVbuFfRXRHAOzpbGHZWJl2EqeWM
Idf1+VcCOj4z7PLdRKwWrwa7EJRWlSLPny2w48G4y+49i5ze0wp0DpT6kgzQ
aYMhd8Fh8M2ikjVO1di/8dCWCkLIp6XIZbbmVK22Kk88nE0QN0rq1211awVu
8bzE+TAGs57EIP4JPX5C9SuhbhbHba0x0g2/sHamYG6+dIFNkQUF7bHu3EKN
yO30nAg4X4tALdHNT+fD+yVi0wtX83qCw/B0g4sJYYpzcQX0LeRP1hYTnBPF
y832TEFu4Qnl5YYJ3o4eP4AdOz+As/agrBx8dpQxNwFH3p6A1HcnIXvnBGPl
4PzGUTj/7othhqcz1jzfcIiDE649b80zXLjGG7J+smWswbT0tXaUJ5BdI5Ix
zYhrFnjSQulLeDJDUVMYiiaq8myoyuSrIbtKonCrfJhpROFJDVnNL7x876eB
+hHoIjrkbByHwremo3DlVGSvVvRaPlmjlwM5m19H4tp9Afe3LD6SHaHa47X7
ImVrni1ba7gIMRL/dMGVisgswikt8U9euAWuM0kGraxcadKRvRs/56EtcQ5H
fW4RDm31Ys38JqyY3UEAc1KVWQh3WhIBLFnA1Vx6Bt1Ex8vV9K1UJKPDeQZ1
GUUEUqfD2MfBaVSigwCr4O7UIUla5nOTtFAT1OoLPGh23kVtXjday+sMqHE1
erOvU3AWYoLao4e3AqBmdnURz0nZeK9qjsSMlE32uXnOZT/PQxnT8bvffSfd
G1aTl3vy+yfPLH8GrhGEy/2VGFmML3l8z4ui9iKkuFJQ0VchdwBuf9puwY1f
3eBJ436z4dJG6ft6EcDqb15B28MnBsQs8siK4tZm5DrPM8ig27bCmnzktWUH
2Las3mSqSc8ojvHRjgrvuaEko98GA8yO2KkTcSbxY3FqPNipWdirhRoLn6lE
sdNCMKaZqkRDBGTca3YJ25vWIf4R33VzqoUOcoUQsWwmcWwaN5S1xAi7rEIx
Gz2eKksGs7UcTsNXpFGIXqRKs4nGdRodNN65NFnIpXOLz2LYNICZDZuWycni
Qbii2CQi2NRirdEjrmwyZlTRqJ6EjWkrFMWG0/GIQTEeh4/tx/ncDTh9Zi4+
2DEN29ZOwFGi2dn14w2aSZXK66CbX9JKUYf4NXOBmvnOCJx9zdz+agtY7jy/
kF5OXuCgX9fBZS/hxIJIJC8NR/WZMPjOcpNG9alQ+h57ztsxkGI1xq0MKx6X
2fGNJwTf+IbRAx/vGkYP8VV9pCBMA1kYHtdE4BbBrD5jLLJej0XG/GkoIJhl
rJyM7HVTGWbQaGZD9pbXcHrtAbnFW9GRi/q9j7g7Q684uysqQ5Tsmwvy4ElI
EIBZ5BguDGOCcVLWknka/oJMg1p8Pvmxn71XhLwQgbwT5cg/VYb1izxYFt+K
5bPasG25D5Xp1Sg4n02QKoAn/QIBjPs2GF82AVhD3kU0ELGaM0ptOsBMLRtm
gPGiKsdpg11lmUaUNlzBqsNZAm9es8CqtfwG/KX1XCwaJWh7TSMe3b5GP9+z
sLKYlgT0ro1w00b6ATtwhTNyfuCCZjBYvWqCFW+qxd7LEmQhYLyiyrd/+hZP
/+WpbAY98PMBVN7ka0H9n/up8Bqo4QtC+924/dvbuPqLqwInPj/50xOH6brH
+7/VvNwok5fr+/qGkEojlMOwXPqoaG9ESTUVdZrtyirNQGFXvrJb2QEBmgYq
G5yNuu2S1cxQYZRDWsz4EQ/dcBGnQk2tGUwo9lRMKc7MPKqkdChMed2pSK89
gmXXF2DRk1lWhakZjzVMcdvbAu9MsVoWhSmuINlmqSUDm1ESDl53mEZ4alao
ap/Bm+JoRaSOK/1KxaGLmmFqbWB8ziRMKSRAFU1CPMEprlCaZamUtOKTuncE
Tzy0NQFezDxK45BAyirHUBw6uh+X0pYgIZFs19sTsXXteJxcN15glb7txxYh
Fdms7eOQsnGMgClEAYtBxdASWG2IRvq6SJxfHmFFAtmrCCTMCsXxaaFIoHGS
RtI0KsWm2OEcb0EFjYJxVAR+aMN9ssQ0vef8iP6Zr+n4DY2f0LDIkchUbsNP
qhhYodBp9XVDJL6sjVSGi49RQquehjHIeneykCrv9ckoWz8VmasmI0/RilmV
tXQy8vduQGN6KiJNPfiFh/P1hnsdU9woWp2UNIgpq1AqBIU79sGXn2c4KvZY
OqOkNgxT8VhuQhkqL5VgzYJWoRTbLCbV4e1u1OTVoSTVjeKLxagvyYa/4jy6
qtIUrUIJKcmoTS/SaSWw0jZxKOJWfIci1TVPyTOhv7YvYK5pw5lAqxWiPtJc
Qj9gTi+6qx8KvVzpbjzsHrAogPX7L6Otvk5KyAgFsG8/v4tb1zoEYhbTQsDD
B/8g6AoL0nYmdyiPEAzZjG3uVZj2vIsWza9pJaciW+CHXlcrC+YNbHgwzsYy
cixCMKswjB89/e1T+t6ffiev/eyJPPrNH39Dr/HVBVb867/+K5p6m4SN0aaa
VL64iWM6w5hXGsdCnuGYlpflcF4GvYaUwMxzCUU9RaYaUgvMDJjVJZnT/1Bl
uHSY+RTIOBYLMxY7zxgUI68VKvByoK4qEx5PKuqaU9HcloNPG7fhtXvxNoGY
FTPYZ7VxC8Z0BS+Hupo6VjrzF9QGBP/T+RBrUTjLIGy1KYTx2eSw2Kp5Z9hM
Df362maYCsHYWE0nbknw5ZqMmSVTZI/nyVQy7i5Z6xiCrQ/3fkS/AA1beeXH
kJa9GocTXsfW1eOwm7DFoVjm9klI3zrWIi0ZdlzY8hJS1g4zPFXycr4VZRId
Q+Vx0sJwnFoQheQ3huP8m8NxYVEUSucNQ1F8pAU5E2wEiNJJVBtO1kYFDRcN
90QLqib8CCWEsZ6DFjzM/BG+JFg9zfmRRrLQAJL9RD02kcxqgCzKAFm4HCPx
yBMJb/Y4XFgwCTnzxyH/9QkoXB+jgYxqSIZY4YrJKKHX3In7IkwMy//4gt5P
McgwLdxnhtnkaBeLlf3exyg9nYTcE2yvqtT+DlY95BekCcpC1DJlRUoJju7y
YvX8ZiyNa7EIz8KQ+FE93Fn1KE+vRXVhM3yeDniKCuB3FqOpIkWIZhWihaCH
V7fyzpM3qyCqlRLVqK7N1ypHh2G8nFQ5Dm0nG4y+dJw9u6eW1oPhLy6Hr/gm
752j7aV1sUpiMSYaD64gr7S1DnsOzrjNTG/RCOGjeC/9Lm737/+jkYMF2wQi
mB97DrwWqdqTyaPDa+DXA1EGtyyCLYcGru+0oUPrp7/5qU0xS/+WzPEcv9b/
k375msOCcGykiWP1NwdUragdzRzTq0hTHGZUkbzCmds0NPzX8jAt9td4VtR7
Rq1uCs/CVALGf5qJY1rnmVE4crd/EsEsRYeZhT2ZQyX8QrTa8/C18D5MzDQr
fM2Z2Nm9VkGNj8MkDpvXOVP2TZ1fM03FYMqA1WnXazPapLdWUv9pg3CzY9v+
l5ClvBkDrnUGR9WMN0cA6LTlUTnrvWocrs1yTTbhziq4i6ukWtLDlyvHyPbP
c8myTS2diHezVmKQd4eFdUw6mxyHy3NmIC8GnLq4FLu3xWI71ZUfvD0Jiesn
4uKOKTj/7kvkv17A2eUv4uzGmTjzGoFtQThKZ0fYUDgrnHdDmh+J6vkRcL02
Gq55o1E1fyT9RJ75fLV1RWyIAE4NixAvTJ6WEwNdCy24lkpvRgLZ5zS+yDGY
xwVPzo8swjzbUOpZBHn0cl2kMO8bXxQXmhECOxs+r4nEE08U7rijkH94ikWI
R3x/fTzK3puH9JVThHnOdZPh3jgNzt1TUZ58VL86Kf2DfFSdy6cqrFjFR1aV
52dIO6x1MB4jsr2xDc6U88hK4B1pNKiZaacvbTrkYyOQd6oIn2ypZtjJYN7x
edObTSg824SytFK4i+vR3XwD17vvot13FTXFRWipcMJfeV5op5HPjk7XeVSR
l/Oml6KxJAc9rgoT8dxBGmh14lWSAxns0OBS00y36qxmXPa2Cdn0bo2bfZ3D
hW42odtNRTdim3AMvO3NH57Zk4uTML3fLNg9hn4g1t4w9ZsN/GZASkCr4CYi
oKTULdmTX2lEu//VfYNu3HMreBulvhiTjmtW8746zDM9YBuheMbP9SjfFoRn
1uekYkVVRchqzxCSBUvFLIpqBT3Ms/OyeBluMmfNWnVprFmGqFif1yw97nMS
62uRfr7QjM92xTUuM2t9qfC38iaYGteqGi5gXc8iE9eisKRrPmb7pmAWUWaB
d7Cg1HvPzDE/Gy/+uA61HQS1XAJZp4Jaiwa12ukS7VvN7WnCsCkIV/wanz0R
M8snYopzIn13Gr+mkX2bUzYFu0rXqjLTHpDqHz9xAJ8lHKDPPJdyiN7JualH
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
bnk2zcIFz4Ryunqj5Kh1Mn60+G0ceiveFNDF4esr0/GwYzwp+EU8an6BVDwG
932jlIK1+z6b5Vv2wUu4NHcWfU8sX7tsWpE1byTyYqNo8uXBQV0+CXeMSLiM
hktJuJbU1zBVC+q8Y0nOo+kdOkaXsF1J2GZIuGsUTdZRZMQnR6BnVjR63n7B
XG9TjZS9GmtjPsU20qum35GGfjfTeDvyE2x5KxOf7SoTDX+6phJnjpViPWl2
y+RSbBhXgvU0FsR20y+2Gete92Hraj/e30Qa1a/tqiIb1ixBXLgpZ9PttVhr
62AKp4m11nMH9fW/4NTNnIgXF98SmQ5TYnWWPkZJZqeSqXbMOleOvo4GkemY
ICtwulj5Pl3cjvN9JXWw3Sx+oFiTTMGanrC/oNbczGLlwen6/fu/fUF9d598
kgj9TwQfvj8Zc+BBqwtXPZoo2Q5zr45JlJ4CrRLWcnLtmJNejWVLig1Rvrsg
G8qt8qRpQ+a5RJw5eIoM2HEc2HjJaoq7Dm1lqZ0wdvglAVpVmcsXYO5ZrUVc
u1bsk6Uxh66+OWn0JkkR3QWqL1Wq3EH1dRvqi5bjSE19b62TNfPb/jj8tH8a
vr42B19fX0g//Y9FeQ9JcdxL/IjssPkexp25EchcPZlVp4kuBOdmx6H6HJmI
8llwrnpBRFdAQmPZWWT2fAFFSnzuGDtqpmoZmHeCDe5RVAHTqCehNSrxNSvx
tdLgirc9mn73UZr4uqZGoXf2cFxLncTSs4n0bLJGVnRxHdZNPM7yC6a+DdGH
sOqlJCwfXokD28rwyQYX3p5ehqXDqrB6Qik2TSrFO6S+d8gDLyT/+xrfP291
FXZtVeqzISnBA095NSpLXVzbysRpV3vMmG9woE+abb5eNNR9Q8Xp72Tm0gvN
5uZHRgEbLccQEZ+n+KbIjkdlXh+qCj1ora8zhKcva5nXlHnaet7Sd7B9NH+g
8M6YlrZ++tM/SJ41Vi1mmYWnt+6OVd/a++/vN1QXrmZGLkyfnRkvDcml7EYu
pfW5PBtJswq5z8XCCtR7OvLUHMhzYefImRbSYhO9vGFdE95ZVYz9O07zGreu
Sa5J6yuoHt2eiJ3rky0yJ2rKPLmb++QSoefO5quMeBzYyDtxkzhXJch+LbxI
PTgtZoup5c64UCN6+v7OuBGm6GnvkrfRUhSLb67PteDbm4s4WyJNPmwfL3pk
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
Rh52z50tE/XOuXFoLhOnLcVx4OSs2WuRcPl4+ievlY2nn7ZDSblQG5qYhxuZ
VslLISgm0ZaSkCvo7FJi9pCrriER15J462joYvaFRaHBRl+GlUyfwlp2jEdp
2HjsGLMVK8cmYMUL1abISiuKFypjHSbHENHwmiU+0fDB3R4UZpbpFbDaxTXM
6BbS42FNuP+u5uh/k27aEKVNbvlhaTU0/AxVVb+F2/0rXrQZroTMiVVzsyZk
vSG3/9pX6GzolCnaHuQCHV3Ff6lxd34QWQbbH+Q5KtZ3gn5msw+9mYBjY944
lr+jbdtOjIZ2qQB/axUVD8VOK22LtHmGtiiR82tDRW622zY52mV7A71ovuz2
Sr5lU8K+UlOIvvpm3G7rR11Bj9Vkt/Ve/AjVi99c30P/ifq+cTex9/1eUkAf
ibJalnqUsLWJ144Mmp/9anWIV2eTdG1bWMpW9VmLSBOzZ3UjLu4hubs8bJKd
PVjNDqxakovXFroRPyMHr8dfwhszz/OcbAloTdJa8wNVnWmKuljVvVIzs55t
StXKeouebXIMN6KwVdzWuNJj+G5dzcuW3UNd3U90RZ88eZne670mRTuklp4/
PRN75s4SVX+8nOrn4hiHnnApIV+leZiELDq24LqIuWJFtC7kQTFHa+lXbBiK
RjpQQgJ20mAxV0Q64KKZt5qEW0NDE3M0iXkY6hwRqCcNW0XJDrhto1FmG48L
L76JFZMLsXxUKZY7yixYGuayBIm3IlShzEresKoBRek1KMnkLKtJKdiKLv81
NNR9KWq1f28JHCaOWL+jN++gVV//J/q8/yaH8wdS83ey/BplXFzzv+g1rTzW
ex1u3/opOkjKXAZbTY2B+gKQfrXKvXv/9NySeMFfOSFrzff6CpD+EX0u5gZe
PWiWHTik8g1TjRHctvv48R+NUI7krNp3QwIuOdT1fP26dtb1zM/5Y2bfzTOp
rme7UnVDdTNaKtL00Muiwmqeo/u8Fbju78OD7ts0T3MD+7NeO0KVz831XWip
v2qy9Ha0NVwjXV8jHd2nybuZJm+nctITZC0pXa0r3VJN/KdnfioTNE/O+oTN
j5cv8eK1Bf9/c+cBX1WxLfzlaSmnJBRpgnKlJYFAGgRigKCgotJBQBAbSJei
oNhASuglQEICSSBAAqEJhN47SAeli12v7Xrvffd+5fd9733vW2vNzD5zTiYh
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
8+7pcMi7/z+G0zStCidbKq7Mrs7UUqJrW51m2QnVtSkzQV2bbiZU11bJ9Nm/
ykH/v5VrrHjDS33LUSvNBpTZdykjoKet/hs62f9euZZKMLxkmvw6U+4rz1mm
llL9FPXyv0c1T1nOcnBFdWWd5f8wnKNp0VPZTImGl0yT4dPlvkUvvlim80vd
eXA/VZk8T9DUvT/E+SUFJ+f3/1WumZIML/U27JvBW3G70+jISP4fg//fj4sL
6M4r48yWVbqhtKlC7VTZDD9fM0TiPyvXTi0NL5nW2xHtVBuewp9Jx7Yh6nrX
r89t1RRlOu7TnVS9J69oqkVR96/yUvnMTDdgNi3uLdurleEl0xJeM+Q+Kl1v
h+2zXsPvfbWsEu4nP1T15b/RD/0D3VA+J9PNbstpqWTDS6aFAVVHRZo1DDVq
Pf/6etYA0jD6exn/V3YM/I/2M+lqkZ/JZ2G6dajplg2ybVobXjItNTpTa5tZ
qDX+thE9FNGXiJKLj/+rMxXKo/wSPUo+etPdF8tpkzaGl0xLGas2IbLCUTeo
XZzcJhEWWSNRX37dkGvpkik14aSCTqPJZ+QDd1WuOVIML5mWTp9dZnN4LRVJ
RvmjxjEr4RDyAZtuMWTaJ5vhEcNLpls1zNGa4UHZDC5uhnCrF9mE+8rx8O51
5hVx8rQIS/fxfs2Zpxpeetqwb6525tUDzjwU3pM80Ow/Q58YPCb3e/lqfGAm
3eZ999Gu+8QjPtO2hneablw1z6DqDjpTO7sjDnbgaJ7YL2kV7+J+k59lcqxC
jefYzvBO0y315hvO0eY/Rxf78RT29JRKvQPf8CuMfwXLDyw3yRS4mc+0veGd
prt+LtDOVNl+cZK1rJOkwIWSLJOkHu/E/5XxBsvtnBwBLs5fLl2q5ImmGd5p
ukHxIt4+wCf5JGonnWLwCVJ+hMbX3sQTpNV3JmFj/CGOiimtHWI8vQ6Gdz5u
2JfB29q8GBB5usGnRRkNWsOa1tiiFRXp9FJRfldfwzQYbT6tRw3v7GTYt5i3
tXhqHxkUCnDU6aySp0Pr49GCGbRkTGPZ9/xGd+ETBZypiMd8Ro8Z3mnat5S3
NayuZRqe0Sp5cfLkxaEzyUZZhtIIz4YWv/mVFp9yLvzDpkJ/l/FMOhreabpe
mbytbnUdj9NinNoZ5MgzyERZgjJadh9qTasKWG6VRa7kGZg0yQTSMt5WYWge
kekGddRZKEtRFqMsQhkhj74Y/98LigALbJqo7DQetolrU/eWzdsIy9d4Fw8p
+HAXoMxDGSoPuxD/V8iYmlYmMh+uqZc1mR0xD9Jn6UkbbGnShwztMOegzEIZ
LA93Nf6/lzE0rSVjPlKT4TO5AmICldvqbSbgUczHn5wrjy4dZRrKS7iflp4t
pyCbv9C0CIjDeIQmJ8TkkIn5geFWW3bAo5gtj2w6ygcok1Hao+XCI7QFGSBL
KU1rOpiPzOQCmpxiMXfAw21HSvksHsFU/MkpKO+jvIvykFyyVzMc/GHThH3z
0Zhcb1NwslJ+h2qnJPzVYXFxdj4MO6vYcorWlS6ZJt/af9MRFPA2xDoCShAQ
jHQA7bBtXkThd5rmcJp/2hRxmeL1tRIF9dN0OcjUpClbUPGfNMW6prQJb08Z
XrAZv7ar4Z2mTFWZXxt0tGDMUZiyhBX/RlMmyJSn5e3pe586GPNupgx5xb/R
lPM0DU3w9oxUi4AXUOi5/D5Tztk0IlTR7zPl+k1jcRX9PtMQi2nImLdn+aEj
4AV/05kGtUwD9xX4KtNIoqmYogJfZRrBNRW68PZc0AtaQ5mWZTNVIt3re0xj
76ZCsXt9j6n8wVTPx9vztLFprWKqQjHVXJo/bSoKMtXGmj9tqtUyVYnz9iJt
dEBfMLzTVP1v/rSputE00cOPT4j2aVMFqmmiD2/308ZL+0UyzFgpbJoDxtvN
tPHRfuE+wiuGd5qmC/J2lfXb4uSMpeAPlfXpxdZvi5IIY72+aS4zb2dYvy0c
QuM8DNNMed6+af22cAuMU25M1pa3w61PC1yNU65My8nw9nnryMWPGmfjmTwr
3nazfvsN8WnTxE2Tl8jbR63fnio+bZoEbPJ+eZtk/fZC8WnTrHKTd8/bJtZv
i/ns1krC+jtNUQxva1u/vUF8+jXDO00hG2/d1qf3iE+PMbzTtMbLf1gHLXwP
a2UX/U2mAPev1i9+LD44zvAmU5bia+sXxR2OYLzhTaaEzTXrF8WkDnjd8CZT
AuuM9Yui5gTeMLzJVPu1z/pFfi5GM2GC4Z2mtOCmwE8LnYWJhnea8sQrrYPm
543Fp980vNM0yJoR+NvC9YK3DO805eGnB/62yFDAJMM7TQMUEwN/W7jU8Lbh
nSGGfcMDf1tYWHjH8E7TAOLAwN8WPQ+8a3inaUi2W+Bvi8aG9wzvNA12dwj8
7eni0+8b3mkqKkgM/LTIL8JkeaYBwP+n8GCiAo92lfjEFHl2QW5cncCv3yze
/EHQgdB/b+DX7hfv5O40wtorXGKA+/4/E2uHWQ==\
\>"]],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "31", 
     RowBox[{"-", "40"}], "112.63233478027031`", 
     RowBox[{"-", "7.6753700907413895`"}], "600", "8.190631676930215`"},
    {"2", "30", 
     RowBox[{"-", "24"}], "114.90455328158971`", "0.7956523970846978`", "585",
      "0.8490659929543404`"},
    {"3", "27", 
     RowBox[{"-", "8"}], "143.61236675922356`", "3.398646844418651`", 
     "530.5000000000002`", "3.484434426073666`"},
    {"4", "27", "8", "146.4984698520096`", "2.698738209974338`", 
     "527.6000000000001`", "2.7668589165825836`"},
    {"5", "20", "24", "144.75857174437442`", 
     RowBox[{"-", "7.972217462697875`"}], "390.5000000000001`", 
     "8.500229002918749`"},
    {"6", "19", "40", "159.186413596276`", "7.9540542163500065`", 
     "367.60000000000014`", "8.480862778387655`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.579609914566024*^9, 3.579609965217921*^9}, 
   3.579610995350841*^9, 3.579611037923276*^9, 3.579655585509252*^9, 
   3.5796559927235436`*^9, 3.5796560411193113`*^9, 3.579656091539195*^9, 
   3.579657120490048*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "31", 
     RowBox[{"-", "40"}], "112.63233478027031`", 
     RowBox[{"-", "7.6753700907413895`"}], "600", "8.190631676930215`"},
    {"2", "30", 
     RowBox[{"-", "24"}], "114.90455328158971`", "0.7956523970846978`", "585",
      "0.8490659929543404`"},
    {"3", "27", 
     RowBox[{"-", "8"}], "143.61236675922356`", "3.398646844418651`", 
     "530.5000000000002`", "3.484434426073666`"},
    {"4", "27", "8", "146.4984698520096`", "2.698738209974338`", 
     "527.6000000000001`", "2.7668589165825836`"},
    {"5", "20", "24", "144.75857174437442`", 
     RowBox[{"-", "7.972217462697875`"}], "390.5000000000001`", 
     "8.500229002918749`"},
    {"6", "19", "40", "159.186413596276`", "7.9540542163500065`", 
     "367.60000000000014`", "8.480862778387655`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.579609914566024*^9, 3.579609965217921*^9}, 
   3.579610995350841*^9, 3.579611037923276*^9, 3.579655585509252*^9, 
   3.5796559927235436`*^9, 3.5796560411193113`*^9, 3.579656091539195*^9, 
   3.579657120821067*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"x0", "576.9088424447929`", "0.0010716283702061349`", 
      RowBox[{"{", 
       RowBox[{"576.9042316000605`", ",", "576.9134532895253`"}], "}"}]},
     {"a", 
      RowBox[{"-", "0.3725077837185944`"}], "0.00003416845807929302`", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.3726547987280206`"}], ",", 
        RowBox[{"-", "0.3723607687091682`"}]}], "}"}]},
     {"y0", "117.74876263790888`", "0.0016995037319314271`", 
      RowBox[{"{", 
       RowBox[{"117.74145026353747`", ",", "117.75607501228029`"}], "}"}]},
     {"b", "0.11987960472688378`", "0.00011506587481148998`", 
      RowBox[{"{", 
       RowBox[{"0.11938451622652511`", ",", "0.12037469322724244`"}], "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.579609914566024*^9, 3.579609965217921*^9}, 
   3.579610995350841*^9, 3.579611037923276*^9, 3.579655585509252*^9, 
   3.5796559927235436`*^9, 3.5796560411193113`*^9, 3.579656091539195*^9, 
   3.5796571212280903`*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"DF\"\>", "\<\"SS\"\>", "\<\"MS\"\>", \
"\<\"F\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"x0", "1", "1.5233354157987058`*^6", "1.5233354157987058`*^6", 
      "1.0599100680191886`*^12", "9.43467526326458`*^-13"},
     {"a", "1", "7273.850273483433`", "7273.850273483433`", 
      "5.061017460876766`*^9", "1.9758872316089082`*^-10"},
     {"y0", "1", "16636.223534238292`", "16636.223534238292`", 
      "1.1575192590472113`*^10", "8.639167159429917`*^-11"},
     {"b", "1", "1.5599979902617633`", "1.5599979902617633`", 
      "1.0854192443895966`*^6", "9.213017211351371`*^-7"},
     {"\<\"Error\"\>", "2", "2.874461639270186`*^-6", 
      "1.437230819635093`*^-6", "", ""},
     {"\<\"Total\"\>", "6", "1.5472470496072923`*^6", "", "", ""}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.579609914566024*^9, 3.579609965217921*^9}, 
   3.579610995350841*^9, 3.579611037923276*^9, 3.579655585509252*^9, 
   3.5796559927235436`*^9, 3.5796560411193113`*^9, 3.579656091539195*^9, 
   3.579657121249091*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"576.9088424447929`", ",", 
     RowBox[{"-", "0.3725077837185944`"}], ",", "117.74876263790888`", ",", 
     "0.11987960472688378`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0010716283702061349`", ",", "0.00003416845807929302`", ",", 
     "0.0016995037319314271`", ",", "0.00011506587481148998`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.579609914566024*^9, 3.579609965217921*^9}, 
   3.579610995350841*^9, 3.579611037923276*^9, 3.579655585509252*^9, 
   3.5796559927235436`*^9, 3.5796560411193113`*^9, 3.579656091539195*^9, 
   3.5796571212550917`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"576.9086124977812`", 
     RowBox[{"-", "0.37251889563221524`"}], "117.74792778850541`", 
     "0.11986107860429916`"},
    {"576.9088424447929`", 
     RowBox[{"-", "0.3725077837185944`"}], "117.74876263790888`", 
     "0.11987960472688378`"},
    {
     RowBox[{"-", "0.00022994701168954634`"}], 
     RowBox[{"-", "0.00001111191362085373`"}], 
     RowBox[{"-", "0.000834849403474891`"}], 
     RowBox[{"-", "0.000018526122584613947`"}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.579609914566024*^9, 3.579609965217921*^9}, 
   3.579610995350841*^9, 3.579611037923276*^9, 3.579655585509252*^9, 
   3.5796559927235436`*^9, 3.5796560411193113`*^9, 3.579656091539195*^9, 
   3.5796571212590923`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
ReConstruction - Reverse Function\
\>", "Section",
 CellChangeTimes->{{3.579609662188588*^9, 3.5796096825117507`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "=", 
   RowBox[{"{", 
    RowBox[{"X", ",", "A", ",", "Y", ",", "B"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"k", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"NormRay", "[", "\[Beta]", "]"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"A", ",", "B"}], "}"}], ">", "0"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"{", 
    RowBox[{"X", ",", "Y", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wn", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rw", "=", 
   RowBox[{"{", 
    RowBox[{"wx", ",", "0", ",", "z0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"r", "-", "rw"}], ")"}], ".", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"Cross", "[", 
      RowBox[{"wn", ",", "k"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "+", 
        SuperscriptBox["A", "2"], "+", 
        SuperscriptBox["B", "2"]}], ",", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ">", "0"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.5796070677251935`*^9, 3.5796070882803693`*^9}, {
  3.57960731803351*^9, 3.579607340556799*^9}, {3.579607396911022*^9, 
  3.579607490200358*^9}, {3.5796075228672266`*^9, 3.5796075882299647`*^9}, {
  3.579607704288603*^9, 3.579607917399792*^9}, {3.5796079776722393`*^9, 
  3.5796079784772854`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["A", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox["A", "2"], "+", 
      SuperscriptBox["B", "2"]}]]], ",", 
   FractionBox["B", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox["A", "2"], "+", 
      SuperscriptBox["B", "2"]}]]], ",", 
   FractionBox["1", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox["A", "2"], "+", 
      SuperscriptBox["B", "2"]}]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.579607089178421*^9, {3.579607323471822*^9, 3.579607342629917*^9}, {
   3.579607464849908*^9, 3.5796074907133875`*^9}, {3.5796075245873246`*^9, 
   3.5796075891700187`*^9}, 3.5796077049886427`*^9, {3.5796078165290227`*^9, 
   3.57960784655974*^9}, {3.5796078800956583`*^9, 3.5796079179648247`*^9}, 
   3.5796079789473124`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "wx"}], "+", "X"}], ")"}], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
   SqrtBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["A", "2"]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["B", "2"]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{"A", " ", "B", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]]], "+", 
  FractionBox[
   RowBox[{"Y", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
   SqrtBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["A", "2"]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["B", "2"]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{"A", " ", "B", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]]], "-", 
  FractionBox[
   RowBox[{"z0", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "A"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"B", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
   SqrtBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["A", "2"]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["B", "2"]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{"A", " ", "B", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]]]}]], "Output",
 CellChangeTimes->{
  3.579607089178421*^9, {3.579607323471822*^9, 3.579607342629917*^9}, {
   3.579607464849908*^9, 3.5796074907133875`*^9}, {3.5796075245873246`*^9, 
   3.5796075891700187`*^9}, 3.5796077049886427`*^9, {3.5796078165290227`*^9, 
   3.57960784655974*^9}, {3.5796078800956583`*^9, 3.5796079179648247`*^9}, 
   3.579607982510516*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"k", ".", "wn"}], ")"}], "2"]}]], 
    RowBox[{"k", "[", 
     RowBox[{"[", "3", "]"}], "]"}]], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "+", 
       SuperscriptBox["A", "2"], "+", 
       SuperscriptBox["B", "2"]}], ",", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ">", "0"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.579608024328908*^9, 3.579608057439802*^9}, {
  3.579608149513068*^9, 3.5796081560944448`*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{"1", "+", 
   SuperscriptBox["A", "2"], "+", 
   SuperscriptBox["B", "2"], "-", 
   RowBox[{
    SuperscriptBox["B", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
   RowBox[{
    SuperscriptBox["A", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{"A", " ", "B", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]]], "Output",
 CellChangeTimes->{{3.5796080406858435`*^9, 3.579608058694874*^9}, {
  3.5796081518742037`*^9, 3.5796081567264805`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["A", "2"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["B", "2"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{"A", " ", "B", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["A", "2"], "+", 
     SuperscriptBox["B", "2"], "-", 
     RowBox[{
      SuperscriptBox["B", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
     RowBox[{
      SuperscriptBox["A", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{"A", " ", "B", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5796080843003387`*^9, 3.579608115398117*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.5796080865394664`*^9, 3.57960811579814*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "the", " ", "set", " ", "of", " ", "eqaution", " ", "for", " ", 
    "DriftLength", " ", "l"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "wx"}], "+", "X"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"B", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "2"]}]]], "+", 
    FractionBox[
     RowBox[{"Y", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"B", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "2"]}]]], "+", 
    FractionBox[
     RowBox[{"z0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"A", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"B", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"B", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "2"]}]]]}], 
   "\[Equal]", "l"}]}]], "Input",
 CellChangeTimes->{{3.5796093938592405`*^9, 3.579609405396901*^9}, {
  3.5796097234700937`*^9, 3.5796097485955305`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"A", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"B", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], " ", "=", " ", 
    "\[Xi]"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox["\[Xi]", "2"]}]]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "wx"}], "+", "X"}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"Y", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"z0", " ", "\[Xi]"}]}], ")"}]}], " ", "\[Equal]", "l"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"X", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"Y", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"z0", " ", "\[Xi]"}], " ", "-", " ", 
     RowBox[{
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox["\[Xi]", "2"]}]], " ", "l"}]}], " ", "\[Equal]", 
    RowBox[{"wx", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Solve", " ", "for", " ", "X"}], ",", " ", "Y", ",", " ", 
     RowBox[{"\[Xi]", "=", 
      RowBox[{
       RowBox[{"A", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"B", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], ",", " ", 
     RowBox[{"\[Zeta]", "=", 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox["\[Xi]", "2"]}]]}]}], " ", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.579609417533595*^9, 3.5796096281166396`*^9}, {
  3.5796097724988976`*^9, 3.579609781362405*^9}, {3.5796098165724187`*^9, 
  3.5796098183725214`*^9}, {3.579610748323712*^9, 3.579610816045585*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "wx"}], "+", "X"}], ")"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"B", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "2"]}]]], "+", 
   FractionBox[
    RowBox[{"Y", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"B", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "2"]}]]], "+", 
   FractionBox[
    RowBox[{"z0", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"B", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"B", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "2"]}]]]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"wx", "\[Rule]", 
     RowBox[{
      RowBox[{"wstart", "[", 
       RowBox[{
        RowBox[{"J", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"J", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "2"}], "]"}], "]"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ",", 
    RowBox[{"\[Theta]", "\[Rule]", 
     RowBox[{"plan\[Theta]", "[", "4", "]"}]}], ",", 
    RowBox[{"X", "\[Rule]", 
     RowBox[{"k", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ",", 
    RowBox[{"Y", "\[Rule]", " ", 
     RowBox[{"k", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ",", 
    RowBox[{"A", "\[Rule]", 
     RowBox[{"k", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ",", 
    RowBox[{"B", "\[Rule]", " ", 
     RowBox[{"k", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], ",", 
    RowBox[{"z0", "\[Rule]", " ", 
     RowBox[{"zpos", "[", "4", "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.579611445076564*^9, 3.579611552217692*^9}, {
  3.5796528352189445`*^9, 3.5796528573752117`*^9}, {3.5796532030699844`*^9, 
  3.579653240690136*^9}, {3.579653391854782*^9, 3.5796534100138206`*^9}, {
  3.5796537308811736`*^9, 3.579653754439521*^9}, {3.5796543034359217`*^9, 
  3.579654312998469*^9}, {3.579654474311695*^9, 3.5796544895455666`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.6170073214037664`"}]], "Output",
 CellChangeTimes->{{3.5796114909271865`*^9, 3.5796115538487854`*^9}, {
   3.579652843500418*^9, 3.579652858012248*^9}, {3.579653203625016*^9, 
   3.579653241246168*^9}, 3.5796534107218614`*^9, 3.579653735485437*^9, {
   3.57965429413439*^9, 3.5796543142315392`*^9}, {3.579654475493763*^9, 
   3.5796544909786487`*^9}, 3.5796555950988007`*^9, 3.579656131575485*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "test", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"k", "\[IndentingNewLine]", 
   RowBox[{"J", "//", "TableForm"}]}]}]], "Input",
 CellChangeTimes->{{3.5796100118245864`*^9, 3.5796100244303074`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"576.9086124977812`", ",", 
   RowBox[{"-", "0.37251889563221524`"}], ",", "117.74792778850541`", ",", 
   "0.11986107860429916`"}], "}"}]], "Output",
 CellChangeTimes->{{3.5796100202830706`*^9, 3.579610024928336*^9}, 
   3.579611048162862*^9, 3.5796530425678043`*^9, 3.5796555923466434`*^9, 
   3.579656127412247*^9, 3.5796571332847795`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "31", 
     RowBox[{"-", "40"}], "112.63233478027031`", 
     RowBox[{"-", "7.6753700907413895`"}], "600", "8.190631676930215`"},
    {"2", "30", 
     RowBox[{"-", "24"}], "114.90455328158971`", "0.7956523970846978`", "585",
      "0.8490659929543404`"},
    {"3", "27", 
     RowBox[{"-", "8"}], "143.61236675922356`", "3.398646844418651`", 
     "530.5000000000002`", "3.484434426073666`"},
    {"4", "27", "8", "146.4984698520096`", "2.698738209974338`", 
     "527.6000000000001`", "2.7668589165825836`"},
    {"5", "20", "24", "144.75857174437442`", 
     RowBox[{"-", "7.972217462697875`"}], "390.5000000000001`", 
     "8.500229002918749`"},
    {"6", "19", "40", "159.186413596276`", "7.9540542163500065`", 
     "367.60000000000014`", "8.480862778387655`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.5796100202830706`*^9, 3.579610024928336*^9}, 
   3.579611048162862*^9, 3.5796530425678043`*^9, 3.5796555923466434`*^9, 
   3.579656127412247*^9, 3.5796571332967806`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DL", "=", 
   RowBox[{"{", 
    RowBox[{
    "7.93609667", ",", "5.18", ",", "0.5078", ",", "5.235", ",", "0.6856", 
     ",", "5.277"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wpos", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "742.86"}], ",", 
     RowBox[{"-", "757.86"}], ",", 
     RowBox[{"-", "619.7879"}], ",", 
     RowBox[{"-", "624.7879"}], ",", 
     RowBox[{"-", "639.7879"}], ",", 
     RowBox[{"-", "644.7879"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sign", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F1", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "-", 
          RowBox[{"40", " ", "A"}]}], "\[Equal]", 
         RowBox[{
          RowBox[{
           RowBox[{"sign", "[", 
            RowBox[{"[", "1", "]"}], "]"}], 
           RowBox[{"DL", "[", 
            RowBox[{"[", "1", "]"}], "]"}], 
           SqrtBox[
            RowBox[{"1", "+", 
             SuperscriptBox["A", "2"]}]]}], "+", 
          RowBox[{"wpos", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"X", "-", 
          RowBox[{"24", "A"}]}], "\[Equal]", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"sign", "[", 
            RowBox[{"[", "2", "]"}], "]"}], 
           RowBox[{"DL", "[", 
            RowBox[{"[", "2", "]"}], "]"}], 
           SqrtBox[
            RowBox[{"1", "+", 
             SuperscriptBox["A", "2"]}]]}], "+", 
          RowBox[{"wpos", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"A", ",", "X"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F2", "=", 
   RowBox[{
    RowBox[{"Solve", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"X", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"zpos", "[", "i", "]"}], 
             RowBox[{"Cos", "[", 
              RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
            RowBox[{"Y", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
            RowBox[{"B", " ", 
             RowBox[{"zpos", "[", "i", "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}]}], "\[Equal]", 
           RowBox[{
            RowBox[{
             RowBox[{"sign", "[", 
              RowBox[{"[", "i", "]"}], "]"}], 
             RowBox[{"DL", "[", 
              RowBox[{"[", "i", "]"}], "]"}], 
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
                  RowBox[{"B", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}]}], ")"}],
                 "2"]}]]}], "+", 
            RowBox[{"wpos", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}], "/.", "F1"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "5", ",", "6"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Y", ",", "B"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"X", ",", "A", ",", "Y", ",", "B"}], "}"}], "/.", "F1"}], "/.", 
  "F2"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.579836719610375*^9, 3.579836771634985*^9}, {
   3.579836825582787*^9, 3.579836953706092*^9}, {3.579837142718696*^9, 
   3.57983716628574*^9}, {3.579837822011516*^9, 3.579837843206191*^9}, {
   3.579837906296764*^9, 3.579837942389408*^9}, {3.579837981914651*^9, 
   3.5798380535243397`*^9}, {3.579838111609817*^9, 3.57983815519449*^9}, 
   3.579838375359219*^9, {3.579838424522407*^9, 3.579838453983266*^9}, 
   3.579838505208383*^9, {3.579838538289559*^9, 3.57983861298623*^9}, {
   3.579838741250483*^9, 3.579838767058257*^9}, {3.579838808631637*^9, 
   3.579838861948688*^9}, {3.5798389249452047`*^9, 3.5798389667058573`*^9}, {
   3.579841396201199*^9, 3.579841407822763*^9}, {3.579841704027131*^9, 
   3.5798418492517853`*^9}, {3.579841921724222*^9, 3.5798419705401793`*^9}, 
   3.579842013615946*^9, {3.57984208338593*^9, 3.579842083724615*^9}, 
   3.5798421756317663`*^9, {3.57984227308185*^9, 3.579842327284729*^9}, {
   3.579842366526843*^9, 3.5798423979913883`*^9}, {3.579842431636249*^9, 
   3.579842477971094*^9}, {3.579842541735269*^9, 3.5798426345780163`*^9}, {
   3.579847172838192*^9, 3.5798472799540358`*^9}, {3.5798473131564083`*^9, 
   3.5798473584524183`*^9}, {3.579847422224201*^9, 3.579847548764366*^9}, 
   3.5798476150348883`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.579842612982773*^9, 3.579842635124455*^9}, {
   3.579847270425095*^9, 3.579847280518051*^9}, {3.5798473141388893`*^9, 
   3.579847358950593*^9}, {3.579847497638659*^9, 3.579847549243948*^9}, 
   3.579847615660226*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "778.7202271620915`"}], ",", 
   RowBox[{"-", "1.2075764254917014`"}], ",", "3.1602539855317433`", ",", 
   RowBox[{"-", "0.517366789914984`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.579842612982773*^9, 3.579842635124455*^9}, {
   3.579847270425095*^9, 3.579847280518051*^9}, {3.5798473141388893`*^9, 
   3.579847358950593*^9}, {3.579847497638659*^9, 3.579847549243948*^9}, 
   3.579847615663055*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MWDC2", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "781.7211"}], "+", 
      RowBox[{
       RowBox[{"Crystal", "[", "1", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"-", "0.726182"}], ",", "0.23", ",", 
     RowBox[{"-", "0.308545"}]}], "}"}], ",", "500", ",", "0.2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"J", "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.5798443553096857`*^9, 3.579844449634989*^9}, {
  3.579844647096335*^9, 3.5798446614480343`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {GrayLevel[0], Arrow3DBox[{{180, 0, -40}, {180, 0, 60}}]}, 
   {GrayLevel[0], Arrow3DBox[{{180, 0, -40}, {220, 0, -40}}]}, 
   {GrayLevel[0], 
    Arrow3DBox[{{180, 0, -40}, {180, 31.717299999999998`, -40}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    Arrow3DBox[{{204.70982000000004`, 18.742700000000003`, -60}, {
      117.56798000000003`, -18.282700000000002`, 60}}]}, {
    {RGBColor[0, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     CuboidBox[{130, -38.282700000000006`, -48}, {150, 38.7427, -32}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     CuboidBox[{150, -38.282700000000006`, -48}, {170, 38.7427, -32}]}, 
    {RGBColor[0, 1, 0], Opacity[0.5], EdgeForm[Opacity[0.2]], 
     CuboidBox[{170, -38.282700000000006`, -48}, {190, 38.7427, -32}]}, 
    {RGBColor[0, 1, 0], Opacity[0.5], EdgeForm[Opacity[0.2]], 
     CuboidBox[{190, -38.282700000000006`, -48}, {210, 38.7427, -32}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     CuboidBox[{210, -38.282700000000006`, -48}, {230, 38.7427, -32}]}}, {
    {RGBColor[0, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     CuboidBox[{135, -38.282700000000006`, -32}, {155, 38.7427, -16}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     CuboidBox[{155, -38.282700000000006`, -32}, {175, 38.7427, -16}]}, 
    {RGBColor[0, 1, 0], Opacity[0.5], EdgeForm[Opacity[0.2]], 
     CuboidBox[{175, -38.282700000000006`, -32}, {195, 38.7427, -16}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     CuboidBox[{195, -38.282700000000006`, -32}, {215, 38.7427, -16}]}, 
    {RGBColor[0, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     CuboidBox[{215, -38.282700000000006`, -32}, {235, 38.7427, -16}]}}, {
    {RGBColor[1, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{103.125, -47.85337500000001, -16}, {
       123.125, 48.428375, 0}], {{{0.8, -0.5999999999999999, 0.}, {
       0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {
       22.625, -67.87499999999999, 0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{128.125, -47.85337500000001, -16}, {
       148.125, 48.428375, 0}], {{{0.8, -0.5999999999999999, 0.}, {
       0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {
       27.625, -82.87499999999999, 0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.5], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{153.125, -47.85337500000001, -16}, {
       173.125, 48.428375, 0}], {{{0.8, -0.5999999999999999, 0.}, {
       0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {
       32.625, -97.87499999999997, 0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{178.125, -47.85337500000001, -16}, {
       198.125, 48.428375, 0}], {{{0.8, -0.5999999999999999, 0.}, {
       0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {
       37.625, -112.87499999999997`, 0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{203.125, -47.85337500000001, -16}, {
       223.125, 48.428375, 0}], {{{0.8, -0.5999999999999999, 0.}, {
       0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {
       42.625, -127.87499999999997`, 0.}}]}}, {
    {RGBColor[1, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{99.5, -47.85337500000001, 0}, {119.5, 48.428375, 16}], {{{
       0.8, -0.5999999999999999, 0.}, {0.5999999999999999, 0.8, 0.}, {0., 0., 
       1.}}, {21.89999999999999, -65.69999999999999, 0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{124.5, -47.85337500000001, 0}, {144.5, 48.428375, 16}], {{{
       0.8, -0.5999999999999999, 0.}, {0.5999999999999999, 0.8, 0.}, {0., 0., 
       1.}}, {26.89999999999999, -80.69999999999999, 0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.5], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{149.5, -47.85337500000001, 0}, {169.5, 48.428375, 16}], {{{
       0.8, -0.5999999999999999, 0.}, {0.5999999999999999, 0.8, 0.}, {0., 0., 
       1.}}, {31.89999999999999, -95.69999999999997, 0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{174.5, -47.85337500000001, 0}, {194.5, 48.428375, 16}], {{{
       0.8, -0.5999999999999999, 0.}, {0.5999999999999999, 0.8, 0.}, {0., 0., 
       1.}}, {36.900000000000006`, -110.69999999999997`, 0.}}]}, 
    {RGBColor[1, 1, 0], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{199.5, -47.85337500000001, 0}, {219.5, 48.428375, 16}], {{{
       0.8, -0.5999999999999999, 0.}, {0.5999999999999999, 0.8, 0.}, {0., 0., 
       1.}}, {41.89999999999998, -125.69999999999997`, 0.}}]}}, {
    {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{78.125, -47.85337500000001, 16}, {
       98.125, 48.428375, 32}], {{{0.8, 0.5999999999999999, 
       0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {17.625, 
       52.874999999999986`, 0.}}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{103.125, -47.85337500000001, 16}, {
       123.125, 48.428375, 32}], {{{0.8, 0.5999999999999999, 
       0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {22.625, 
       67.87499999999999, 0.}}]}, 
    {RGBColor[0, 0, 1], Opacity[0.5], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{128.125, -47.85337500000001, 16}, {
       148.125, 48.428375, 32}], {{{0.8, 0.5999999999999999, 
       0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {27.625, 
       82.87499999999999, 0.}}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{153.125, -47.85337500000001, 16}, {
       173.125, 48.428375, 32}], {{{0.8, 0.5999999999999999, 
       0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {32.625, 
       97.87499999999997, 0.}}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{178.125, -47.85337500000001, 16}, {
       198.125, 48.428375, 32}], {{{0.8, 0.5999999999999999, 
       0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 1.}}, {37.625, 
       112.87499999999997`, 0.}}]}}, {
    {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{74.5, -47.85337500000001, 32}, {94.5, 48.428375, 48}], {{{
       0.8, 0.5999999999999999, 0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 
       1.}}, {16.89999999999999, 50.69999999999999, 0.}}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{99.5, -47.85337500000001, 32}, {119.5, 48.428375, 48}], {{{
       0.8, 0.5999999999999999, 0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 
       1.}}, {21.89999999999999, 65.69999999999999, 0.}}]}, 
    {RGBColor[0, 0, 1], Opacity[0.5], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{124.5, -47.85337500000001, 32}, {144.5, 48.428375, 48}], {{{
       0.8, 0.5999999999999999, 0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 
       1.}}, {26.89999999999999, 80.69999999999999, 0.}}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{149.5, -47.85337500000001, 32}, {169.5, 48.428375, 48}], {{{
       0.8, 0.5999999999999999, 0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 
       1.}}, {31.89999999999999, 95.69999999999997, 0.}}]}, 
    {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[Opacity[0.2]], 
     GeometricTransformation3DBox[
      CuboidBox[{174.5, -47.85337500000001, 32}, {194.5, 48.428375, 48}], {{{
       0.8, 0.5999999999999999, 0.}, {-0.5999999999999999, 0.8, 0.}, {0., 0., 
       1.}}, {36.900000000000006`, 110.69999999999997`, 0.}}]}}, {
    {RGBColor[1, 0, 0], Opacity[0.5], 
     CylinderBox[{{180., -58.282700000000006`, -40.}, {180., 58.7427, -40.}}, 
      8.24220555231387]}, 
    {RGBColor[1, 0, 0], Opacity[0.5], 
     CylinderBox[{{200., -58.282700000000006`, -40.}, {200., 58.7427, -40.}}, 
      7.940908337905699]}, 
    {RGBColor[1, 0, 0], Opacity[0.5], 
     CylinderBox[{{185., -58.282700000000006`, -24.}, {185., 58.7427, -24.}}, 
      5.205081729062966]}, 
    {RGBColor[1, 0, 0], Opacity[0.5], 
     CylinderBox[{{206.83702499999998`, -58.282700000000006`, -8.}, {
      119.06797500000002`, 58.742700000000006`, -8.}}, 3.7133180095005724`]}, 
    {RGBColor[1, 0, 0], Opacity[0.5], 
     CylinderBox[{{203.21202499999998`, -58.282700000000006`, 8.}, {
      115.44297500000002`, 58.742700000000006`, 8.}}, 3.7147151573678574`]}, 
    {RGBColor[1, 0, 0], Opacity[0.5], 
     CylinderBox[{{94.41297500000002, -58.282700000000006`, 24.}, {
      182.18202499999998`, 58.742700000000006`, 24.}}, 8.157674902823393]}, 
    {RGBColor[1, 0, 0], Opacity[0.5], 
     CylinderBox[{{90.78797500000002, -58.282700000000006`, 40.}, {
      178.55702499999998`, 58.742700000000006`, 40.}}, 4.965541956704632]}}, 
   Text3DBox["10", {170, 0, -40}]},
  ImageSize->{500., 444.925898478036},
  ViewPoint->{-1.9596970945741903`, 1.427096894170921, -2.360716364192273},
  ViewVertical->{-0.07330944325998502, 
   1.5581512206161752`, -0.32915157578500454`}]], "Output",
 CellChangeTimes->{{3.579844399877239*^9, 3.579844450316362*^9}, 
   3.5798446637925777`*^9, 3.5798502863809347`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "10", 
     RowBox[{"-", "40"}], "11.077494039205602`", "8.24220555231387`", "180", 
     "10.186180000000034`"},
    {"1", "11", 
     RowBox[{"-", "40"}], "14.011480991712615`", 
     RowBox[{"-", "7.940908337905699`"}], "200", "9.813819999999957`"},
    {"2", "10", 
     RowBox[{"-", "24"}], "8.578757587848713`", 
     RowBox[{"-", "5.205081729062966`"}], "185", "6.4327319999999615`"},
    {"3", "7", 
     RowBox[{"-", "8"}], "0.2911872459097923`", "3.7133180095005724`", 
     "130.50000000000006`", "4.677700800000029`"},
    {"4", "7", "8", "0.2849722772574496`", 
     RowBox[{"-", "3.7147151573678574`"}], "127.60000000000004`", 
     "4.6794607999999736`"},
    {"5", "6", "24", 
     RowBox[{"-", "4.43796594970801`"}], "8.157674902823393`", 
     "110.50000000000004`", "8.773473600000031`"},
    {"6", "6", "40", 
     RowBox[{"-", "12.381820182901995`"}], "4.965541956704632`", 
     "107.60000000000004`", "5.340376000000025`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.579844399877239*^9, 3.579844450316362*^9}, 
   3.5798446637925777`*^9, 3.579850286387836*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"J1", "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.579850026631208*^9, 3.579850049736802*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "31", 
     RowBox[{"-", "40"}], "0.`", "8.624491699735646`", "600", 
     "9.14928080424616`"},
    {"2", "31", 
     RowBox[{"-", "24"}], "0.`", 
     RowBox[{"-", "1.4296255034655818`"}], "605", "1.5166163562450092`"},
    {"3", "24", 
     RowBox[{"-", "8"}], 
     RowBox[{"-", "5.383438755277865`"}], "7.460395511875354`", 
     "470.50000000000017`", "7.753989186611056`"},
    {"4", "24", "8", 
     RowBox[{"-", "4.249875671305942`"}], "5.8894982975621515`", 
     "467.60000000000014`", "6.121271458218118`"},
    {"5", "24", "24", 
     RowBox[{"-", "0.9105107714767625`"}], 
     RowBox[{"-", "1.2617902388839923`"}], "470.50000000000017`", 
     "1.3114462701748144`"},
    {"6", "24", "40", 
     RowBox[{"-", "2.044073855448685`"}], 
     RowBox[{"-", "2.832687453197192`"}], "467.60000000000014`", 
     "2.9441639985677504`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.579850027672016*^9, 3.579850050309413*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MWDC2RaysFlat", "[", 
  RowBox[{
   RowBox[{"Ray\[Beta]", "[", 
    RowBox[{"1", ",", "35.3", ",", "0"}], "]"}], ",", 
   RowBox[{"Ray\[Beta]", "[", 
    RowBox[{"1", ",", "36", ",", "0"}], "]"}], ",", "500", ",", "1", ",", 
   "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.5798493647711973`*^9, 3.579849375054962*^9}, {
  3.579849565589488*^9, 3.579849600167836*^9}, {3.5798496615754433`*^9, 
  3.579849667545878*^9}, {3.5798497997648373`*^9, 3.5798498050564823`*^9}, {
  3.579849995872837*^9, 3.57984999650642*^9}, {3.579850038264264*^9, 
  3.579850038508772*^9}, {3.579850317484256*^9, 3.5798503178911247`*^9}, {
  3.579850358815336*^9, 3.579850375075918*^9}, {3.579850631620124*^9, 
  3.579850649734457*^9}, {3.5798507674652987`*^9, 3.579850781431616*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], ArrowBox[{{500, -40}, {500, -10}}]}, 
   {GrayLevel[0], ArrowBox[{{500, -40}, {530, -40}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    ArrowBox[{{514.0177141104483, -50}, {495.6197696939805, -10}}]}, 
   {RGBColor[0, 0, 1], Thickness[Large], 
    ArrowBox[{{527.7421306788801, -50}, {509.9329832665387, -10}}]}, {
    {RGBColor[0, 1, 0], Opacity[0.2], EdgeForm[Opacity[1]], 
     RectangleBox[{490, -48}, {510, -32}]}, 
    {RGBColor[0, 1, 0], Opacity[0.2], EdgeForm[Opacity[1]], 
     RectangleBox[{510, -48}, {530, -32}]}, 
    {RGBColor[0, 1, 0], Opacity[0.2], EdgeForm[Opacity[1]], 
     RectangleBox[{530, -48}, {550, -32}]}}, {
    {RGBColor[0, 1, 0], Opacity[0.2], EdgeForm[Opacity[1]], 
     RectangleBox[{495, -32}, {515, -16}]}, 
    {RGBColor[0, 1, 0], Opacity[0.2], EdgeForm[Opacity[1]], 
     RectangleBox[{515, -32}, {535, -16}]}, 
    {RGBColor[0, 1, 0], Opacity[0.2], EdgeForm[Opacity[1]], 
     RectangleBox[{535, -32}, {555, -16}]}}, {
    {RGBColor[1, 0, 0], CircleBox[{500, -40}, 8.556537161563254]}, 
    {RGBColor[1, 0, 0], CircleBox[{520, -40}, 9.613626388971182]}, 
    {RGBColor[1, 0, 0], CircleBox[{505, -24}, 2.671876906887586]}, 
    {RGBColor[1, 0, 0], CircleBox[{488.125, -8}, 4.9363287167937235`]}}, {
    {RGBColor[0, 0, 1], CircleBox[{520, -40}, 3.0054218834084034`]}, 
    {RGBColor[0, 0, 1], CircleBox[{525, -24}, 8.070091694017407]}, 
    {RGBColor[0, 0, 1], CircleBox[{513.125, -8}, 3.076643891918291]}}, 
   InsetBox[
    RowBox[{"{", 
     RowBox[{"26", ",", 
      RowBox[{"-", "442.86`"}]}], "}"}], {495, -40}]},
  ImageSize->500,
  ImageSizeRaw->{500, 339}]], "Output",
 CellChangeTimes->{{3.57984960096247*^9, 3.579849626600883*^9}, {
   3.579849663971508*^9, 3.579849668486878*^9}, {3.579849800656683*^9, 
   3.57984980579438*^9}, {3.579849989104*^9, 3.579849997255271*^9}, 
   3.5798500391818027`*^9, 3.579850157212635*^9, 3.579850223424305*^9, {
   3.5798502971788054`*^9, 3.579850318583111*^9}, {3.579850363326652*^9, 
   3.5798503757919703`*^9}, 3.5798504666202307`*^9, 3.5798505681744013`*^9, {
   3.579850617709838*^9, 3.579850650357481*^9}, {3.579850768565654*^9, 
   3.579850782154852*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"F1", "=", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"X", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"zpos", "[", "i", "]"}], 
             RowBox[{"Cos", "[", 
              RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
            RowBox[{"Y", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
            RowBox[{"B", " ", 
             RowBox[{"zpos", "[", "i", "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}]}], "\[Equal]", 
           RowBox[{
            RowBox[{
             RowBox[{"DL", "[", 
              RowBox[{"[", "i", "]"}], "]"}], 
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
                  RowBox[{"B", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}]}], ")"}],
                 "2"]}]]}], "+", 
            RowBox[{"wpos", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"X", ",", "A"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F2", "=", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"X", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
              RowBox[{"A", " ", 
               RowBox[{"zpos", "[", "i", "]"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
              RowBox[{"Y", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
              RowBox[{"B", " ", 
               RowBox[{"zpos", "[", "i", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}]}], 
             "\[Equal]", 
             RowBox[{
              RowBox[{
               RowBox[{"DL", "[", 
                RowBox[{"[", "i", "]"}], "]"}], 
               SqrtBox[
                RowBox[{"1", "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"A", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
                    RowBox[{"B", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}]}], ")"}],
                   "2"]}]]}], "+", 
              RowBox[{"wpos", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}], "/.", "F1"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3", ",", "4"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Y", ",", "B"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X", ",", "A", ",", "Y", ",", "B"}], "}"}], "/.", "F1"}], 
     ")"}], "/.", "F2"}]}]}]], "Input",
 CellChangeTimes->{{3.579836259674918*^9, 3.5798363433114433`*^9}, {
   3.579836404373564*^9, 3.579836466110083*^9}, 3.579836716589093*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1824.2526223426096`"}], ",", 
   RowBox[{"-", "56.638975086536306`"}], ",", "1399.9440540783137`", ",", 
   "75.48774983504147`"}], "}"}]], "Output",
 CellChangeTimes->{3.579836467167799*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"generate", " ", "the", " ", "DL", " ", "combination"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PossDL", "[", "J_", "]"}], ":=", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"Binery", "[", 
         RowBox[{"i", ",", "6"}], "]"}]], ")"}], 
      RowBox[{
       RowBox[{"Transpose", "[", "J", "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{
        SuperscriptBox["2", "6"], "-", "1"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5796608564157305`*^9, 3.579660871717606*^9}, {
  3.579661126338169*^9, 3.5796612175353856`*^9}, {3.579661318458158*^9, 
  3.5796613199442434`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DL", "=", 
   RowBox[{"PossDL", "[", "J", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DLref", "=", 
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", "J", "]"}], "[", 
    RowBox[{"[", "5", "]"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.579661226298887*^9, 3.579661234783372*^9}, {
  3.5796612974499564`*^9, 3.5796613394383583`*^9}, {3.5796616368263674`*^9, 
  3.5796616593956585`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "7.6753700907413895`", ",", "0.7956523970846978`", ",", 
   "3.398646844418651`", ",", "2.698738209974338`", ",", "7.972217462697875`",
    ",", "7.9540542163500065`"}], "}"}]], "Output",
 CellChangeTimes->{3.5796616598136826`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Poss\[Beta]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F1", "=", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"X", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
              RowBox[{"A", " ", 
               RowBox[{"zpos", "[", "i", "]"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
              RowBox[{"Y", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
              RowBox[{"B", " ", 
               RowBox[{"zpos", "[", "i", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}]}], 
             "\[Equal]", 
             RowBox[{
              RowBox[{
               RowBox[{"DL", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "i"}], "]"}], "]"}], 
               SqrtBox[
                RowBox[{"1", "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"A", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
                    RowBox[{"B", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}]}], ")"}],
                   "2"]}]]}], "+", 
              RowBox[{"J", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "6"}], "]"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"X", ",", "A"}], "}"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"F2", "=", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"X", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{"zpos", "[", "i", "]"}], 
                 RowBox[{"Cos", "[", 
                  RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
                RowBox[{"Y", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
                RowBox[{"B", " ", 
                 RowBox[{"zpos", "[", "i", "]"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}]}], 
               "\[Equal]", 
               RowBox[{
                RowBox[{
                 RowBox[{"DL", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "i"}], "]"}], "]"}], 
                 SqrtBox[
                  RowBox[{"1", "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"A", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}], "+", 
                    RowBox[{"B", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"plan\[Theta]", "[", "i", "]"}], "]"}]}]}], ")"}],
                     "2"]}]]}], "+", 
                RowBox[{"J", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "6"}], "]"}], "]"}]}]}], ")"}], "/.", 
             "F1"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "3", ",", "4"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"Y", ",", "B"}], "}"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"X", ",", "A", ",", "Y", ",", "B"}], "}"}], "/.", "F1"}], 
        ")"}], "/.", "F2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       SuperscriptBox["2", "6"]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5796563093236523`*^9, 3.579656497776431*^9}, {
   3.579656541089908*^9, 3.579656552849581*^9}, {3.579657345630925*^9, 
   3.5796573496301537`*^9}, {3.579657411039666*^9, 3.5796574165009785`*^9}, {
   3.5796576142802916`*^9, 3.5796576315432787`*^9}, {3.579658453886314*^9, 
   3.5796584669560614`*^9}, {3.5796598562555246`*^9, 
   3.5796598834940825`*^9}, {3.5796605016624403`*^9, 3.579660545773963*^9}, 
   3.5796605916545873`*^9, 3.579660852922531*^9, {3.579661350929015*^9, 
   3.5796614516687775`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"k", "\[IndentingNewLine]", 
 RowBox[{"Poss\[Beta]", "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.579661457593116*^9, 3.57966146570758*^9}, {
  3.5796617141187887`*^9, 3.57966173407693*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"576.9086124977812`", ",", 
   RowBox[{"-", "0.37251889563221524`"}], ",", "117.74792778850541`", ",", 
   "0.11986107860429916`"}], "}"}]], "Output",
 CellChangeTimes->{{3.5796614607412963`*^9, 3.5796614660105977`*^9}, {
  3.5796617155718718`*^9, 3.5796617343459454`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"576.9086124977812`", ",", 
   RowBox[{"-", "0.3725188956322152`"}], ",", "117.74792778850555`", ",", 
   "0.1198610786042912`"}], "}"}]], "Output",
 CellChangeTimes->{{3.5796614607412963`*^9, 3.5796614660105977`*^9}, {
  3.5796617155718718`*^9, 3.579661734351946*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "using", " ", "Poss\[Beta]", " ", "to", " ", "regerate", " ", "DL", " ", 
    "at", " ", "5", " ", "or", " ", "6", " ", "plan", " ", "and", " ", 
    "check", " ", "the", " ", "difference"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PossError", "=", 
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"ShortedHitList", "[", 
                RowBox[{"Poss\[Beta]", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"5", ",", 
                RowBox[{"5", ";;", "6"}]}], "]"}], "]"}], "]"}], "-", 
            RowBox[{"DLref", "[", 
             RowBox[{"[", 
              RowBox[{"5", ";;", "6"}], "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          SuperscriptBox["2", "6"]}], "}"}]}], "]"}], ",", "j"}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.579661497256385*^9, 3.579661568888482*^9}, {
  3.5796617720050993`*^9, 3.5796617785344725`*^9}, {3.5796653716047735`*^9, 
  3.5796654942239075`*^9}, {3.5796655265373287`*^9, 3.579665529721511*^9}, {
  3.579665569617159*^9, 3.5796655757655067`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SortedPossError", "=", 
   RowBox[{"Sort", "[", 
    RowBox[{"PossError", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "<", 
       RowBox[{"#2", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5796655560675993`*^9, 3.5796655565842285`*^9}, {
  3.579665596247053*^9, 3.5796656056985893`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PossError", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "10"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"SortedPossError", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "10"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.579665615455143*^9, 3.5796656398809195`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1.3050179340842956`*^-13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11.138718706226921`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7.9871291816568935`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "9.119956390502216`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5.789820258501424`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8.574304630761743`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7.436112287977854`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "10.703080624353806`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "4.054179801169668`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "9.057341752723765`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5796656249308786`*^9, 3.5796656404549522`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"49", ",", "1.3050179340842956`*^-13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "1.3050179340842956`*^-13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "1.3050179340842956`*^-13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1.3050179340842956`*^-13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"61", ",", "3.9444963629321563`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "3.9444963629321563`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", "3.9444963629321563`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "3.9444963629321563`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"59", ",", "3.9944553191607732`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"43", ",", "3.9944553191607732`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5796656249308786`*^9, 3.5796656404599524`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Poss\[Beta]", "[", 
  RowBox[{"[", "33", "]"}], 
  "]"}], "\[IndentingNewLine]", "k", "\[IndentingNewLine]", 
 RowBox[{"Abs", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"ShortedHitList", "[", 
     RowBox[{"Poss\[Beta]", "[", 
      RowBox[{"[", "33", "]"}], "]"}], "]"}], "]"}], "[", 
   RowBox[{"[", "5", "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", "DLref"}], "Input",
 CellChangeTimes->{{3.5796615954740024`*^9, 3.5796616258427396`*^9}, {
   3.5796616668170834`*^9, 3.5796616681901617`*^9}, 3.579661751766942*^9, {
   3.579665386167201*^9, 3.5796653886631413`*^9}, {3.5796654223354425`*^9, 
   3.5796654300908813`*^9}, {3.57966565082514*^9, 3.5796656921154757`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"576.9086124977812`", ",", 
   RowBox[{"-", "0.3725188956322152`"}], ",", "117.74792778850555`", ",", 
   "0.1198610786042912`"}], "}"}]], "Output",
 CellChangeTimes->{{3.579661610552865*^9, 3.579661626587782*^9}, 
   3.5796616689162035`*^9, 3.5796617524829826`*^9, 3.5796653893491807`*^9, {
   3.5796654262992682`*^9, 3.5796654308521233`*^9}, {3.579665652993462*^9, 
   3.5796656927591114`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"576.9086124977812`", ",", 
   RowBox[{"-", "0.37251889563221524`"}], ",", "117.74792778850541`", ",", 
   "0.11986107860429916`"}], "}"}]], "Output",
 CellChangeTimes->{{3.579661610552865*^9, 3.579661626587782*^9}, 
   3.5796616689162035`*^9, 3.5796617524829826`*^9, 3.5796653893491807`*^9, {
   3.5796654262992682`*^9, 3.5796654308521233`*^9}, {3.579665652993462*^9, 
   3.579665692763112*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "7.675370090741393`", ",", "0.7956523970846978`", ",", "3.398646844418818`",
    ",", "2.6987382099744495`", ",", "7.972217462697824`", ",", 
   "7.954054216350126`"}], "}"}]], "Output",
 CellChangeTimes->{{3.579661610552865*^9, 3.579661626587782*^9}, 
   3.5796616689162035`*^9, 3.5796617524829826`*^9, 3.5796653893491807`*^9, {
   3.5796654262992682`*^9, 3.5796654308521233`*^9}, {3.579665652993462*^9, 
   3.579665693064129*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "7.6753700907413895`", ",", "0.7956523970846978`", ",", 
   "3.398646844418651`", ",", "2.698738209974338`", ",", "7.972217462697875`",
    ",", "7.9540542163500065`"}], "}"}]], "Output",
 CellChangeTimes->{{3.579661610552865*^9, 3.579661626587782*^9}, 
   3.5796616689162035`*^9, 3.5796617524829826`*^9, 3.5796653893491807`*^9, {
   3.5796654262992682`*^9, 3.5796654308521233`*^9}, {3.579665652993462*^9, 
   3.579665693067129*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"X", "-", 
        RowBox[{"40", " ", "A"}]}], "\[Equal]", " ", 
       RowBox[{
        RowBox[{"L1", 
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox["A", "2"]}]]}], "+", "W1"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"X", "-", 
        RowBox[{"24", "A"}]}], "\[Equal]", " ", 
       RowBox[{
        RowBox[{"L2", 
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox["A", "2"]}]]}], "+", "W2"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"A", ",", "X"}], "}"}]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.579837554189546*^9, 3.579837591449903*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "16"}], " ", "W1"}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"L1", "-", "L2"}], ")"}], "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "256"}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"L1", "-", "L2"}], ")"}], "2"], "-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"W1", "-", "W2"}], ")"}], "2"]}], ")"}]}]], "+", 
         RowBox[{"16", " ", "W2"}]}], 
        RowBox[{
         RowBox[{"-", "256"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"L1", "-", "L2"}], ")"}], "2"]}]]}]}], ",", 
     RowBox[{"X", "\[Rule]", 
      RowBox[{
       FractionBox[
        RowBox[{"384", " ", "W1"}], 
        RowBox[{
         RowBox[{"-", "256"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"L1", "-", "L2"}], ")"}], "2"]}]], "-", 
       FractionBox[
        RowBox[{"24", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"L1", "-", "L2"}], ")"}], "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "256"}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"L1", "-", "L2"}], ")"}], "2"], "-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"W1", "-", "W2"}], ")"}], "2"]}], ")"}]}]]}], 
        RowBox[{
         RowBox[{"-", "256"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"L1", "-", "L2"}], ")"}], "2"]}]], "+", "W2", "-", 
       FractionBox[
        RowBox[{"384", " ", "W2"}], 
        RowBox[{
         RowBox[{"-", "256"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"L1", "-", "L2"}], ")"}], "2"]}]], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "L2", " ", 
        SqrtBox[
         RowBox[{"4", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "16"}], " ", "W1"}], "+", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"L1", "-", "L2"}], ")"}], "2"]}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "256"}], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"L1", "-", "L2"}], ")"}], "2"], "-", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"W1", "-", "W2"}], ")"}], "2"]}], ")"}]}]], "+", 
               RowBox[{"16", " ", "W2"}]}], ")"}], "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "256"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"L1", "-", "L2"}], ")"}], "2"]}], ")"}], 
            "2"]]}]]}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"16", " ", "W1"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"L1", "-", "L2"}], ")"}], "2"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "256"}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"L1", "-", "L2"}], ")"}], "2"], "-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"W1", "-", "W2"}], ")"}], "2"]}], ")"}]}]], "-", 
        RowBox[{"16", " ", "W2"}]}], 
       RowBox[{
        RowBox[{"-", "256"}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"L1", "-", "L2"}], ")"}], "2"]}]]}], ",", 
     RowBox[{"X", "\[Rule]", 
      RowBox[{
       FractionBox[
        RowBox[{"384", " ", "W1"}], 
        RowBox[{
         RowBox[{"-", "256"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"L1", "-", "L2"}], ")"}], "2"]}]], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "L2", " ", 
        SqrtBox[
         RowBox[{"4", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"16", " ", "W1"}], "+", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"L1", "-", "L2"}], ")"}], "2"]}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "256"}], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"L1", "-", "L2"}], ")"}], "2"], "-", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"W1", "-", "W2"}], ")"}], "2"]}], ")"}]}]], "-", 
               RowBox[{"16", " ", "W2"}]}], ")"}], "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "256"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"L1", "-", "L2"}], ")"}], "2"]}], ")"}], "2"]]}]]}], 
       "+", 
       FractionBox[
        RowBox[{"24", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"L1", "-", "L2"}], ")"}], "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "256"}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"L1", "-", "L2"}], ")"}], "2"], "-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"W1", "-", "W2"}], ")"}], "2"]}], ")"}]}]]}], 
        RowBox[{
         RowBox[{"-", "256"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"L1", "-", "L2"}], ")"}], "2"]}]], "+", "W2", "-", 
       FractionBox[
        RowBox[{"384", " ", "W2"}], 
        RowBox[{
         RowBox[{"-", "256"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"L1", "-", "L2"}], ")"}], "2"]}]]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.579837585045864*^9, 3.5798376105154037`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "16"}], " ", "W1"}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"L1", "-", "L2"}], ")"}], "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "256"}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"L1", "-", "L2"}], ")"}], "2"], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"W1", "-", "W2"}], ")"}], "2"]}], ")"}]}]], "+", 
      RowBox[{"16", " ", "W2"}]}], 
     RowBox[{
      RowBox[{"-", "256"}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"L1", "-", "L2"}], ")"}], "2"]}]]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"W1", "\[Rule]", 
      RowBox[{"W2", "+", "\[CapitalDelta]W"}]}], ",", 
     RowBox[{"L1", "\[Rule]", 
      RowBox[{"L2", "+", "\[CapitalDelta]L"}]}]}], "}"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.579837622895721*^9, 3.579837669986907*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"16", " ", "\[CapitalDelta]W"}], "-", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[CapitalDelta]L", "2"]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "256"}], "+", 
       SuperscriptBox["\[CapitalDelta]L", "2"], "-", 
       SuperscriptBox["\[CapitalDelta]W", "2"]}], ")"}]}]]}], 
  RowBox[{
   RowBox[{"-", "256"}], "+", 
   SuperscriptBox["\[CapitalDelta]L", "2"]}]]], "Output",
 CellChangeTimes->{{3.579837664907658*^9, 3.5798376705908127`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Y", " ", "s"}], "-", 
        RowBox[{"8", "H"}]}], "  ", "\[Equal]", 
       RowBox[{
        RowBox[{"L3", 
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox["H", "2"]}]]}], "+", "W3"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Y", " ", "s"}], "+", 
        RowBox[{"H", " ", "8"}]}], " ", "\[Equal]", 
       RowBox[{
        RowBox[{"L4", 
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox["H", "2"]}]]}], "+", "W4"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Y", ",", "H"}], "}"}]}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.5798391095804777`*^9, 3.579839280741641*^9}, {
  3.579839345785862*^9, 3.579839377808695*^9}, {3.579839828174404*^9, 
  3.57983988617907*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Y", "\[Rule]", 
      RowBox[{
       FractionBox["1", "s"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"128", " ", "W3"}], 
           RowBox[{
            RowBox[{"-", "256"}], "+", 
            SuperscriptBox["L3", "2"], "-", 
            RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
            SuperscriptBox["L4", "2"]}]]}], "+", "W4", "+", 
         FractionBox[
          RowBox[{"128", " ", "W4"}], 
          RowBox[{
           RowBox[{"-", "256"}], "+", 
           SuperscriptBox["L3", "2"], "-", 
           RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
           SuperscriptBox["L4", "2"]}]], "+", 
         FractionBox[
          RowBox[{"8", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"L3", "-", "L4"}], ")"}], "2"]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "256"}], "+", 
               SuperscriptBox["L3", "2"], "-", 
               RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
               SuperscriptBox["L4", "2"], "-", 
               SuperscriptBox["W3", "2"], "+", 
               RowBox[{"2", " ", "W3", " ", "W4"}], "-", 
               SuperscriptBox["W4", "2"]}], ")"}]}]]}], 
          RowBox[{
           RowBox[{"-", "256"}], "+", 
           SuperscriptBox["L3", "2"], "-", 
           RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
           SuperscriptBox["L4", "2"]}]], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "L4", " ", 
          SqrtBox[
           RowBox[{"4", "+", 
            FractionBox[
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "16"}], " ", "W3"}], "+", 
                 RowBox[{"16", " ", "W4"}], "+", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"L3", "-", "L4"}], ")"}], "2"]}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "256"}], "+", 
                    SuperscriptBox["L3", "2"], "-", 
                    RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
                    SuperscriptBox["L4", "2"], "-", 
                    SuperscriptBox["W3", "2"], "+", 
                    RowBox[{"2", " ", "W3", " ", "W4"}], "-", 
                    SuperscriptBox["W4", "2"]}], ")"}]}]]}], ")"}], "2"]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "256"}], "+", 
                SuperscriptBox["L3", "2"], "-", 
                RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
                SuperscriptBox["L4", "2"]}], ")"}], "2"]]}]]}]}], ")"}]}]}], 
     ",", 
     RowBox[{"H", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "16"}], " ", "W3"}], "+", 
         RowBox[{"16", " ", "W4"}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"L3", "-", "L4"}], ")"}], "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "256"}], "+", 
             SuperscriptBox["L3", "2"], "-", 
             RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
             SuperscriptBox["L4", "2"], "-", 
             SuperscriptBox["W3", "2"], "+", 
             RowBox[{"2", " ", "W3", " ", "W4"}], "-", 
             SuperscriptBox["W4", "2"]}], ")"}]}]]}], 
        RowBox[{
         RowBox[{"-", "256"}], "+", 
         SuperscriptBox["L3", "2"], "-", 
         RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
         SuperscriptBox["L4", "2"]}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Y", "\[Rule]", 
      RowBox[{
       FractionBox["1", "s"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"128", " ", "W3"}], 
           RowBox[{
            RowBox[{"-", "256"}], "+", 
            SuperscriptBox["L3", "2"], "-", 
            RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
            SuperscriptBox["L4", "2"]}]]}], "+", "W4", "+", 
         FractionBox[
          RowBox[{"128", " ", "W4"}], 
          RowBox[{
           RowBox[{"-", "256"}], "+", 
           SuperscriptBox["L3", "2"], "-", 
           RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
           SuperscriptBox["L4", "2"]}]], "-", 
         FractionBox[
          RowBox[{"8", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"L3", "-", "L4"}], ")"}], "2"]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "256"}], "+", 
               SuperscriptBox["L3", "2"], "-", 
               RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
               SuperscriptBox["L4", "2"], "-", 
               SuperscriptBox["W3", "2"], "+", 
               RowBox[{"2", " ", "W3", " ", "W4"}], "-", 
               SuperscriptBox["W4", "2"]}], ")"}]}]]}], 
          RowBox[{
           RowBox[{"-", "256"}], "+", 
           SuperscriptBox["L3", "2"], "-", 
           RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
           SuperscriptBox["L4", "2"]}]], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "L4", " ", 
          SqrtBox[
           RowBox[{"4", "+", 
            FractionBox[
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"16", " ", "W3"}], "-", 
                 RowBox[{"16", " ", "W4"}], "+", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"L3", "-", "L4"}], ")"}], "2"]}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "256"}], "+", 
                    SuperscriptBox["L3", "2"], "-", 
                    RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
                    SuperscriptBox["L4", "2"], "-", 
                    SuperscriptBox["W3", "2"], "+", 
                    RowBox[{"2", " ", "W3", " ", "W4"}], "-", 
                    SuperscriptBox["W4", "2"]}], ")"}]}]]}], ")"}], "2"]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "256"}], "+", 
                SuperscriptBox["L3", "2"], "-", 
                RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
                SuperscriptBox["L4", "2"]}], ")"}], "2"]]}]]}]}], ")"}]}]}], 
     ",", 
     RowBox[{"H", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"16", " ", "W3"}], "-", 
        RowBox[{"16", " ", "W4"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"L3", "-", "L4"}], ")"}], "2"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "256"}], "+", 
            SuperscriptBox["L3", "2"], "-", 
            RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
            SuperscriptBox["L4", "2"], "-", 
            SuperscriptBox["W3", "2"], "+", 
            RowBox[{"2", " ", "W3", " ", "W4"}], "-", 
            SuperscriptBox["W4", "2"]}], ")"}]}]]}], 
       RowBox[{
        RowBox[{"-", "256"}], "+", 
        SuperscriptBox["L3", "2"], "-", 
        RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
        SuperscriptBox["L4", "2"]}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.579839275201273*^9, 3.5798393396116753`*^9, {3.5798398205891323`*^9, 
   3.579839852768341*^9}, 3.579839888227273*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "16"}], " ", "W3"}], "+", 
      RowBox[{"16", " ", "W4"}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"L3", "-", "L4"}], ")"}], "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "256"}], "+", 
          SuperscriptBox["L3", "2"], "-", 
          RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
          SuperscriptBox["L4", "2"], "-", 
          SuperscriptBox["W3", "2"], "+", 
          RowBox[{"2", " ", "W3", " ", "W4"}], "-", 
          SuperscriptBox["W4", "2"]}], ")"}]}]]}], 
     RowBox[{
      RowBox[{"-", "256"}], "+", 
      SuperscriptBox["L3", "2"], "-", 
      RowBox[{"2", " ", "L3", " ", "L4"}], "+", 
      SuperscriptBox["L4", "2"]}]]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"W4", "\[Rule]", 
      RowBox[{"W3", "+", "\[CapitalDelta]W"}]}], ",", 
     RowBox[{"L4", "\[Rule]", 
      RowBox[{"L3", "+", "\[CapitalDelta]L"}]}]}], "}"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.579839869433131*^9, 3.579839929100134*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"16", " ", "\[CapitalDelta]W"}], "+", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[CapitalDelta]L", "2"]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "256"}], "+", 
       SuperscriptBox["\[CapitalDelta]L", "2"], "-", 
       SuperscriptBox["\[CapitalDelta]W", "2"]}], ")"}]}]]}], 
  RowBox[{"256", "-", 
   SuperscriptBox["\[CapitalDelta]L", "2"]}]]], "Output",
 CellChangeTimes->{3.5798399301047287`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1035, 837},
WindowMargins->{{Automatic, 55}, {Automatic, 53}},
ShowSelection->True,
FrontEndVersion->"8.0 for Linux x86 (64-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 121, 1, 88, "Title"],
Cell[CellGroupData[{
Cell[725, 27, 131, 2, 74, "Section"],
Cell[859, 31, 2662, 75, 164, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[3558, 111, 102, 1, 74, "Section"],
Cell[3663, 114, 5132, 122, 572, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[8820, 240, 279, 5, 39, "Subsection"],
Cell[9102, 247, 31910, 850, 1566, "Input",
 InitializationCell->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41061, 1103, 149, 2, 74, "Section"],
Cell[41213, 1107, 17500, 404, 1013, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[58750, 1516, 155, 2, 44, "Section"],
Cell[58908, 1520, 8078, 190, 395, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[67023, 1715, 157, 2, 44, "Section"],
Cell[67183, 1719, 3076, 82, 289, "Input",
 InitializationCell->True],
Cell[70262, 1803, 3328, 94, 183, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[73615, 1901, 149, 3, 30, "Input"],
Cell[73767, 1906, 147, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73951, 1915, 3902, 110, 278, "Input"],
Cell[77856, 2027, 161526, 2669, 624, 9850, 181, "CachedBoxData", "BoxData", \
"Output"],
Cell[239385, 4698, 1516, 34, 108, "Output"],
Cell[240904, 4734, 1516, 34, 108, "Output"],
Cell[242423, 4770, 1529, 34, 116, "Output"],
Cell[243955, 4806, 1509, 30, 151, "Output"],
Cell[245467, 4838, 648, 15, 50, "Output"],
Cell[246118, 4855, 1188, 29, 60, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[247355, 4890, 128, 3, 74, "Section"],
Cell[CellGroupData[{
Cell[247508, 4897, 1737, 52, 128, "Input"],
Cell[249248, 4951, 817, 23, 52, "Output"],
Cell[250068, 4976, 2453, 76, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252558, 5057, 675, 21, 68, "Input"],
Cell[253236, 5080, 604, 17, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253877, 5102, 1109, 33, 33, "Input"],
Cell[254989, 5137, 95, 1, 30, "Output"]
}, Open  ]],
Cell[255099, 5141, 1761, 54, 90, "Input"],
Cell[256863, 5197, 2007, 58, 174, "Input"],
Cell[CellGroupData[{
Cell[258895, 5259, 2729, 80, 111, "Input"],
Cell[261627, 5341, 428, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262092, 5352, 244, 5, 69, "Input"],
Cell[262339, 5359, 381, 7, 30, "Output"],
Cell[262723, 5368, 1472, 33, 108, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264232, 5406, 5342, 134, 302, "Input"],
Cell[269577, 5542, 429, 10, 30, "Output"],
Cell[270009, 5554, 460, 9, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270506, 5568, 560, 15, 50, "Input"],
Cell[271069, 5585, 9680, 166, 460, "Output"],
Cell[280752, 5753, 1575, 37, 137, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282364, 5795, 125, 2, 30, "Input"],
Cell[282492, 5799, 1422, 36, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283951, 5840, 784, 14, 30, "Input"],
Cell[284738, 5856, 2194, 40, 348, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286969, 5901, 4050, 105, 274, "Input"],
Cell[291022, 6008, 248, 6, 30, "Output"]
}, Open  ]],
Cell[291285, 6017, 884, 25, 52, "Input"],
Cell[CellGroupData[{
Cell[292194, 6046, 452, 11, 50, "Input"],
Cell[292649, 6059, 273, 6, 50, "Output"]
}, Open  ]],
Cell[292937, 6068, 4939, 121, 312, "Input"],
Cell[CellGroupData[{
Cell[297901, 6193, 232, 4, 50, "Input"],
Cell[298136, 6199, 312, 6, 30, "Output"],
Cell[298451, 6207, 308, 6, 30, "Output"]
}, Open  ]],
Cell[298774, 6216, 1482, 37, 74, "Input"],
Cell[300259, 6255, 441, 12, 30, "Input"],
Cell[CellGroupData[{
Cell[300725, 6271, 299, 7, 50, "Input"],
Cell[301027, 6280, 893, 23, 73, "Output"],
Cell[301923, 6305, 922, 23, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302882, 6333, 713, 15, 88, "Input"],
Cell[303598, 6350, 435, 8, 30, "Output"],
Cell[304036, 6360, 435, 8, 30, "Output"],
Cell[304474, 6370, 474, 9, 50, "Output"],
Cell[304951, 6381, 475, 9, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305463, 6395, 778, 25, 86, "Input"],
Cell[306244, 6422, 6795, 205, 382, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313076, 6632, 1106, 36, 68, "Input"],
Cell[314185, 6670, 541, 16, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314763, 6691, 930, 29, 86, "Input"],
Cell[315696, 6722, 7998, 214, 582, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323731, 6941, 1196, 36, 89, "Input"],
Cell[324930, 6979, 498, 15, 58, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    643292,      12511]
NotebookOptionsPosition[    636143,      12273]
NotebookOutlinePosition[    636504,      12289]
CellTagsIndexPosition[    636461,      12286]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Walk Effect of Trigger Plastics ", "Title",
 CellChangeTimes->{{3.570423552386003*^9, 3.5704235694960833`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"physics", " ", "of", " ", "scattered", " ", "protons"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"geometry", " ", "of", " ", "trigger", " ", "plastics"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "ligth", " ", "signal", " ", "propagating", " ", "and", " ", "attenuated", 
    " ", "along", " ", "the", " ", "plastics"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Result", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.570423737781705*^9, 3.5704238248382597`*^9}}],

Cell[BoxData[
 RowBox[{"Remove", "[", 
  RowBox[{"t1", ",", "t2"}], "]"}]], "Input",
 CellChangeTimes->{{3.570849946732895*^9, 3.5708499498527603`*^9}}],

Cell[CellGroupData[{

Cell["General", "Section",
 CellChangeTimes->{{3.57084875287316*^9, 3.570848758986904*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]plastic", "=", 
   RowBox[{"1", "/", "1.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "299.792458"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", 
   RowBox[{"-", "1000"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q1", "[", 
   RowBox[{"Q_", ",", "x_", ",", "att_"}], "]"}], ":=", 
  RowBox[{"Q", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{" ", 
       RowBox[{"Abs", "[", 
        RowBox[{"x1", "-", "x"}], "]"}]}], "att"]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q2", "[", 
   RowBox[{"Q_", ",", "x_", ",", "att_"}], "]"}], ":=", 
  RowBox[{"Q", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{" ", 
       RowBox[{"Abs", "[", 
        RowBox[{"x", "-", "x2"}], "]"}]}], "att"]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W", "[", 
   RowBox[{"Q_", ",", "Qth_"}], "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"40", 
     RowBox[{"Log", "[", 
      FractionBox["Q", 
       RowBox[{"Q", "-", "Qth"}]], "]"}]}], ")"}], 
   RowBox[{"1", "/", "3"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t1", "[", "x_", "]"}], ":=", 
  FractionBox[
   RowBox[{"Abs", "[", 
    RowBox[{"x", "-", "x1"}], "]"}], 
   RowBox[{"\[Beta]plastic", " ", "c"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t2", "[", "x_", "]"}], ":=", 
  FractionBox[
   RowBox[{"Abs", "[", 
    RowBox[{"x2", "-", "x"}], "]"}], 
   RowBox[{"\[Beta]plastic", " ", "c"}]]}]}], "Input",
 CellChangeTimes->{{3.570848978782321*^9, 3.570849095217211*^9}, {
   3.5708494574938803`*^9, 3.570849550640934*^9}, {3.5708496625426826`*^9, 
   3.570849663341591*^9}, {3.57084996338824*^9, 3.570849968927425*^9}, {
   3.570856932962677*^9, 3.5708569418624887`*^9}, {3.5708571125350733`*^9, 
   3.570857117227273*^9}, {3.5708578242488527`*^9, 3.570857826138463*^9}, {
   3.5708588578069153`*^9, 3.570858923268734*^9}, {3.5708591370259132`*^9, 
   3.570859138861483*^9}, {3.570866333383109*^9, 3.570866334438978*^9}, {
   3.5708668074851027`*^9, 3.5708668179645452`*^9}, {3.570867308824798*^9, 
   3.570867349079603*^9}, {3.570868276595867*^9, 3.570868278561635*^9}, {
   3.570868376993709*^9, 3.570868378267373*^9}, {3.5708687615064774`*^9, 
   3.570868780191326*^9}, {3.570868892456977*^9, 3.570868914116613*^9}, {
   3.570868988484626*^9, 3.570869000113*^9}, {3.570871628944707*^9, 
   3.570871653122303*^9}, {3.5708754926175833`*^9, 3.570875510414502*^9}, 
   3.5716803545722876`*^9, {3.60972665025299*^9, 3.609726652498608*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "Q"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Exp", "[", 
         FractionBox[
          RowBox[{"-", 
           SuperscriptBox["t", "3"]}], "40"], "]"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "6"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "2"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.57086647319143*^9, 3.570866532576326*^9}, {
  3.570866642316856*^9, 3.570866735307625*^9}, {3.57087524266098*^9, 
  3.570875279527505*^9}, {3.570875312894825*^9, 3.5708753287026157`*^9}, {
  3.570875399204297*^9, 3.5708754272619543`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Q$$ = 1., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`Q$$], 0, 1}}, Typeset`size$$ = {236., {214., 218.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`Q$25635$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`Q$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`Q$$, $CellContext`Q$25635$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[(-$CellContext`Q$$) (1 - 
         Exp[(-$CellContext`t^3)/40]), {$CellContext`t, 0, 6}, 
        PlotRange -> {-1, 0}, AspectRatio -> 2], 
      "Specifications" :> {{$CellContext`Q$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{281., {257., 262.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.570866501836828*^9, 3.570866532958536*^9}, {
  3.570866645613109*^9, 3.570866735777461*^9}, {3.5708752505585203`*^9, 
  3.570875279892803*^9}, {3.570875314130625*^9, 3.570875329320361*^9}, {
  3.570875421752571*^9, 3.5708754276567802`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"W", "[", 
    RowBox[{"1", ",", "\[Alpha]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", "0.9"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5708673732979393`*^9, 3.570867436884074*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
FpA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 0.9}, {0, All}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.570867427738578*^9, 3.570867437689125*^9}, 
   3.570871633927102*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{"W", "[", 
          RowBox[{
           RowBox[{"Q1", "[", 
            RowBox[{"Q", ",", "x", ",", "2180"}], "]"}], ",", "Qth"}], "]"}], 
         "-", 
         RowBox[{"W", "[", 
          RowBox[{
           RowBox[{"Q2", "[", 
            RowBox[{"Q", ",", "x", ",", "2180"}], "]"}], ",", "Qth"}], 
          "]"}]}]}], "}"}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Q", ",", "1", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1000"}], ",", "200"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"{", 
    RowBox[{"Qth", ",", "0.1", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570849148596053*^9, 3.5708492515232563`*^9}, {
  3.570849322748776*^9, 3.570849354544032*^9}, {3.570849394023816*^9, 
  3.570849394404524*^9}, {3.570860018793312*^9, 3.5708600466004753`*^9}, {
  3.570860090765799*^9, 3.570860093425481*^9}, {3.570866258772705*^9, 
  3.570866261721148*^9}, {3.570866357492806*^9, 3.570866438873105*^9}, {
  3.5708668414462957`*^9, 3.570866948339994*^9}, {3.570866999243861*^9, 
  3.57086699935215*^9}, {3.5708670322022953`*^9, 3.570867041858989*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Qth$$ = 0.1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`Qth$$], 0.1, 1}}, Typeset`size$$ = {
    360., {169., 173.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`Qth$17924$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`Qth$$ = 0.1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`Qth$$, $CellContext`Qth$17924$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{{$CellContext`x, $CellContext`W[
            $CellContext`Q1[$CellContext`Q, $CellContext`x, 
             2180], $CellContext`Qth$$] - $CellContext`W[
           $CellContext`Q2[$CellContext`Q, $CellContext`x, 
            2180], $CellContext`Qth$$]}}, {$CellContext`Q, 1, 
         8}, {$CellContext`x, -1000, 200}, PlotRange -> All, AspectRatio -> 
        1], "Specifications" :> {{$CellContext`Qth$$, 0.1, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {212., 217.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5708491734601727`*^9, 3.5708492518513813`*^9}, {
   3.5708493417397413`*^9, 3.5708493551477222`*^9}, 3.570849394946074*^9, 
   3.570849632278974*^9, 3.5708571195350533`*^9, {3.5708600221392717`*^9, 
   3.570860047241755*^9}, 3.57086009395327*^9, 3.5708662629105*^9, {
   3.570866381614286*^9, 3.570866439604766*^9}, 3.570866882239161*^9, 
   3.570866927765792*^9, 3.570867001329089*^9, {3.570867036344615*^9, 
   3.5708670423218517`*^9}, 3.570868384650777*^9, 3.570868788289412*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Q1", "[", 
         RowBox[{"Q", ",", "x", ",", "att"}], "]"}], ",", 
        RowBox[{"Q2", "[", 
         RowBox[{"Q", ",", "x", ",", "att"}], "]"}]}], "}"}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "1000"}], ",", " ", "200"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Q", ",", "0", ",", "50"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "50"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "50"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"att", ",", "2000", ",", "5000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570775017982339*^9, 3.570775162954471*^9}, {
   3.570775195781805*^9, 3.5707752319038963`*^9}, 3.57077526828268*^9, {
   3.570775302009427*^9, 3.570775366845072*^9}, {3.570775508807377*^9, 
   3.570775509109564*^9}, {3.570849562530574*^9, 3.5708495894036703`*^9}, {
   3.570858930055225*^9, 3.570858987554924*^9}, {3.570869240146508*^9, 
   3.570869244158341*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`att$$ = 2260., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`att$$], 2000, 5000}}, Typeset`size$$ = {
    360., {176., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`att$20629$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`att$$ = 2000}, 
      "ControllerVariables" :> {
        Hold[$CellContext`att$$, $CellContext`att$20629$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot[{{
          $CellContext`Q1[$CellContext`Q, $CellContext`x, $CellContext`att$$], 
          $CellContext`Q2[$CellContext`Q, $CellContext`x, \
$CellContext`att$$]}}, {$CellContext`x, -1000, 200}, {$CellContext`Q, 0, 50}, 
        GridLines -> Automatic, GridLinesStyle -> Directive[Dashed], 
        PlotRange -> {{0, 50}, {0, 50}}, AspectRatio -> 1], 
      "Specifications" :> {{$CellContext`att$$, 2000, 5000}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{405., {219., 224.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.570775118232278*^9, 3.570775163883733*^9}, {
   3.57077520116543*^9, 3.5707752325092087`*^9}, 3.57077526877944*^9, {
   3.570775305730568*^9, 3.57077532564672*^9}, 3.5707753674456997`*^9, 
   3.570775510108843*^9, 3.570849590380947*^9, 3.570849974933779*^9, {
   3.570858936265712*^9, 3.5708589882223673`*^9}, 3.57085914789283*^9, 
   3.570868793041259*^9, 3.5708692449248123`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"t1", "[", "x", "]"}], "-", 
         RowBox[{"t2", "[", "x", "]"}], "+", 
         RowBox[{"W", "[", 
          RowBox[{
           RowBox[{"Q1", "[", 
            RowBox[{"Q", ",", "x", ",", "att"}], "]"}], ",", "Qth"}], "]"}], 
         "-", 
         RowBox[{"W", "[", 
          RowBox[{
           RowBox[{"Q2", "[", 
            RowBox[{"Q", ",", "x", ",", "att"}], "]"}], ",", "Qth"}], "]"}]}],
         ",", 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"Q1", "[", 
           RowBox[{"Q", ",", "x", ",", "att"}], "]"}], 
          RowBox[{"Q2", "[", 
           RowBox[{"Q", ",", "x", ",", "att"}], "]"}]], "]"}]}], "}"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "1000"}], ",", " ", "200"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Q", ",", "1", ",", "8"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"TableForm", "[", 
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            RowBox[{"\[Beta]plastic", " ", "c"}], "att"], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"\[Beta]plastic", " ", "c"}], "att"], "5"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", " ", "0.5"}], "}"}]}], "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"att", ",", "2180"}], "}"}], ",", "2000", ",", "5000"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Qth", ",", "0.9"}], "}"}], ",", "0.1", ",", "0.9"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.570849674855485*^9, 3.570849814329262*^9}, {
  3.5708498586174297`*^9, 3.570849858950148*^9}, {3.570849899035245*^9, 
  3.5708499198603477`*^9}, {3.570849985262809*^9, 3.570850018581208*^9}, {
  3.570850266822475*^9, 3.570850394107328*^9}, {3.570850768427044*^9, 
  3.5708508041190443`*^9}, {3.570850883963729*^9, 3.570850895145851*^9}, {
  3.5708509264581337`*^9, 3.570850929497241*^9}, {3.570851062679799*^9, 
  3.570851110215963*^9}, {3.570859732795617*^9, 3.570859751751793*^9}, {
  3.570867120308404*^9, 3.5708671251253977`*^9}, {3.5708674844286623`*^9, 
  3.570867484535831*^9}, {3.570867834780624*^9, 3.5708678377853107`*^9}, {
  3.570868408732946*^9, 3.570868412385516*^9}, {3.570869037664385*^9, 
  3.570869047059929*^9}, {3.570869081579603*^9, 3.570869087479369*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`att$$ = 2180, $CellContext`Qth$$ = 0.9, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`att$$], 2180}, 2000, 5000}, {{
       Hold[$CellContext`Qth$$], 0.9}, 0.1, 0.9}}, Typeset`size$$ = {
    360., {170., 175.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`att$3145$$ = 
    0, $CellContext`Qth$3146$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`att$$ = 2180, $CellContext`Qth$$ = 0.9}, 
      "ControllerVariables" :> {
        Hold[$CellContext`att$$, $CellContext`att$3145$$, 0], 
        Hold[$CellContext`Qth$$, $CellContext`Qth$3146$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{{$CellContext`t1[$CellContext`x] - \
$CellContext`t2[$CellContext`x] + $CellContext`W[
            $CellContext`Q1[$CellContext`Q, $CellContext`x, \
$CellContext`att$$], $CellContext`Qth$$] - $CellContext`W[
           $CellContext`Q2[$CellContext`Q, $CellContext`x, \
$CellContext`att$$], $CellContext`Qth$$], 
          
          Log[$CellContext`Q1[$CellContext`Q, $CellContext`x, \
$CellContext`att$$]/$CellContext`Q2[$CellContext`Q, $CellContext`x, \
$CellContext`att$$]]}}, {$CellContext`x, -1000, 200}, {$CellContext`Q, 1, 8}, 
        PlotRange -> {{-10, 10}, {-1, 1}}, AspectRatio -> 1, GridLines -> 
        Automatic, GridLinesStyle -> Directive[Dashed], PlotRange -> All, 
        Epilog -> Text[
          
          TableForm[{$CellContext`\[Beta]plastic \
($CellContext`c/$CellContext`att$$), ($CellContext`\[Beta]plastic \
($CellContext`c/$CellContext`att$$)) 5}], {5, 0.5}]], 
      "Specifications" :> {{{$CellContext`att$$, 2180}, 2000, 
         5000}, {{$CellContext`Qth$$, 0.9}, 0.1, 0.9}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {226., 231.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.570851110756384*^9, 3.5708597544566317`*^9, 3.570867125744122*^9, 
   3.570867486142276*^9, 3.570867569462756*^9, 3.5708676907634077`*^9, 
   3.5708678384208517`*^9, 3.57086828906958*^9, {3.5708683895208693`*^9, 
   3.570868422520072*^9}, 3.570868802500008*^9, 3.570868946244165*^9, 
   3.570869048132243*^9, {3.5708690837362213`*^9, 3.570869088075242*^9}, 
   3.6095693239244556`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"W", "[", 
    RowBox[{"Q", ",", "Qth"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"Qth", ",", "0", ",", "500"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "500", ",", "2000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570870101406493*^9, 3.570870161575666*^9}, {
  3.570871029944468*^9, 3.570871089056329*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxtmndAVMfzwBEktqAoIhpFpAkiKiAgouJQRERQUAJIqFIUkHIgIEe9A6mC
UqUK9oJYYoIFe0xExV4D5huJvSV2sYC/58HsOY/f/RH8ZPbN29md2ZndfeqL
IxYEysrIyDyVk5H5+pf8IAX2h7U2hLVaAmVnxoVacwq1znjw5H6MtTnxnAVB
jIsk7UMY95L8jeA9L2Ac/hWHLefpi2V8mxM35K3g6RcyRlMk/fwgZvZQdmaM
9lC5H2O0BxntQUZ76PMCxmgP1RfLGO2h+oWM7b/+o3cSYzIPyNxPS6I3g9lL
2Zkx2kvlfozRXmS0Fxntpc8LGKO9VF8sY7SX6hcyRnuR0V7C3O+rmrC6bGYv
ZWfGaC+V+zFGe5HRXmS0lz4vYIz2Un2xjNFeql/IGO1FRnsJcz87Sbs8Zi9l
Z8ZoL5X7MUZ7kdFeZLSXPi9gjPZSfbGM0V6qX8gY7UVGewlzP8lrJ65h9lJ2
Zoz2UrkfY7QXGe1FRnvp8wLGaC/VF8sY7aX6hYzRXmS0lzD6c2sB9WfGzoyJ
PzO5H2PizxwTf+aY+DN7XsCY+DPTF8uY+DPTL2RM/Jlj4s/I3O/L119mEbOX
sjNjtJfK/RijvchoLzLaS58XMEZ7qb5Yxmgv1S9kjPYio72EMX6NS2j8MnZm
TOKXyf0Yk/jlmMQvxyR+2fMCxiR+mb5YxiR+mX4hYxK/HJP4ReZ+BV+faytl
9lJ2Zoz2UrkfY7QXGe1FRnvp8wLGaC/VF8sY7aX6hYzRXmS0lzD3a5HoKWP2
UnZmjPZSuR9jtBcZ7UVGe+nzAsZoL9UXyxjtpfqFjNFeZLSXMPfT/KrXvILZ
S9mZMdpL5X6M0V5ktBcZ7aXPCxijvVRfLGO0l+oXMkZ7kdFewtxv2df3PKhk
9lJ2Zoz2UrkfY7QXGe1FRnvp8wLGaC/VF8sY7aX6hYzRXmS0lzD3+/Xre4uq
mb2UnRmjvVTuxxjtRUZ7kdFe+ryAMdpL9cUyRnupfiFjtBcZ7SWMP6jh7X9q
mL3IaC+V+zGm+58a3v6nhrf/qWH2ItP9Tw1v/1PD2//U8PY/NcxeZLSXvs8Q
vqotdBAx+5El79NIZnJsL4n/4HXdfHkmMrbnM/992A/K0v5R/epd9X5sKmPJ
n2vrusZ/bzJj7D+/PV8/tqdy6X6Rr5/f/zVf//+RKsbUX9W78l9nt78+SGDj
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
   "], {{{}, 
     {RGBColor[0.3832788717922978, 0.21365166523014575`, 0.6557251372861325], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVDtPlFEQvd8dLMQES42JiTYUxISQ2PEDMDYaOhqIxgcWgg+QbYyhUAoS
Ex+gq/jCXUChMRpBoxarCVoYkf0DIggKuooLFILoOZlDKCYz99658zwzOw82
1zbFEEIvyECFJISfoCzkCF4JqoO8FUpbQLtxfghaBvXpfRpUAmqCgRXoHjd/
75fOVXOdK+B52KiA3Ap5W3S7tHkP5yL4fXNbjcH9vsB5E3RegpeCr+CtBpSG
3K6YOhO3RTt79D6Bvz3mudwGPwFaxd289PjvAs6bIc+BTwX3MyYb/0AtOO/C
fRv4meh2W1gk8NPgO6TDnHm3F6yatTSv3wj4Sfmlf9ZiEvJrUC3OHeBvwV+p
jlGx0xfjZ/0GQeOKYQhyWfB3ninPBo+X+hn1j743Ru8TfQXIrdFz+g16LN20
6s84vuG+K3hNqJ8or0fmspnrzIK6cb+o2rFu15XLU/PeRtViRHW4Y44J2ivA
1rC5jRvgG6DbFrzf7Al9MIYuxUS9B+BLoEzida6QfcZQBjkXHAvpuB5Hh2o8
pzhZ90s4l0P+EJ0onzKvQVpYYk/ZL/a9CvJM4jGWyzf7y/dyyYPmmBwCv2le
n2vmRDltjhX+XYD9bnObXeZ1Zk+2B8cRfdNvSjhnv4nHUmHvGf48Ye9Y18R7
zP6+199m8z4H9e6iMMr3rOaLc9YiPFCnwRxD9eZ1Yk1ZK2KEWKG/BdU6J6yN
Caf1+jsNW1/1b1x7g7PLHs3hbQDno+Y9Yk3Y1zJhZxh3dzWnPZqVatV/Ur6Z
4zv1aRS8IfEZblOMRcXZaI6V5+B/osu8+6tZOGaOoWJw/aLmgRjt1uwQd780
V2z5m8RxwJ10S7glfgvBscW8iY8GxfMp+jynoDMvnY/B4yWu21TLBeW333x/
7VNencqtSrjjXPxQPJzxov7m5HtOdqY0C4truamHo4qNtmZlK9F7Rvshqzpy
J/RyBwuTR8x30Gp0PwXlkpcOdVPaRTXaqe1xfU+0ax4vay/kheuU9Adkg3uM
eGzRPNBeSvuOc5/V7A/pT5nizynHQ+bxfI++Y/vXdqY5FpfU/z7lS6wVkvWe
Z7RvDpj3fgb6n6PX7pwwlRHGJqJj4qx5H4rCZ6UwUqe6ZuWrRL1kHw9rbpej
96xPcZ43n6kvqvO8+slc86rRf6OeHEo=
         "]], PolygonBox[CompressedData["
1:eJwtkksrhFEYgM/5zlgYO1lIKTYWFi7/wo78gUEu2cxExMJlQ5RSrrnkkjEu
MxaUDWGlhp2SZIcyasglmoUZl+f1zuLpe973fN+Z9zKlTaH6oGeMqQIfLDhj
ZnkmrTGL+DK8Ws0t4fNOz0aI5/AwfBBHiNfwddg32Ry+4vRM7ljFO6EM/yHX
gQ9ADvGj/AbeDeW4gS68D3x4AqbxFMV6Vt+ZJJ5x+m01XHP2A5t4GqKceVDM
dWHiZvwQtq3WeIDXwhhxAG74NgFJzt6gkbMH4gvO8ngeEY/CJfEWPJHbIc7g
fnwI/5Wc1VyMuB2ieC75fHwQ4lZ7lt7T5CN4CjaI++HUas/SewHErPbUivfC
idUZ9OANUGO15gA+5XRWlXDF3c+e9i41S+2fns5WdjBBvAvG0xnJrM6c7raQ
3DleAUWezqgOb3Pau/QovUrNUrvM9Iv42OmspCapTXbwvwv4Jv8CGSmB557T
ncnupOc7PESuxOo7Qacz9Wd3MIy/e/rfkXfGnc40NzvDFtw5vVt6kt5kBjIL
mdktHnfam/QkvcnOZfeyk3v8D4a4bkU=
         "]]}]}, 
     {RGBColor[0.5630046153768934, 0.5261461956904372, 0.9083514118583975], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
         "]], 
        PolygonBox[CompressedData["
1:eJwtlFlsTlEUhe+9u9pSpcYQYnwgQcxPhKQlIaZSc2KqannQGkOI1BAP5nlW
syC8qBgqPJhqrDYRQ9CoKiJF1BSpIb6V3YeV/1vnnP/ec/fZ67RNzxmVHQVB
kIliUKIFwcYwCNJRV7ge2hD4WBr8lsVl+GL8avwozcMxjF+AP/H7FP8YrcFf
RftD/88VeDbKx59D2fAItJi5afhUeD66BBegBXofSuOZ2axJgJ/DU5m7h97A
39Br+BXaxHwpPkOMRuMvozjG+uNnwn/gavgXOoFvreeHvmft/TC+DvwDHYfP
oTK4G+/PhxugfvgZaAychDaH/s5u5jVQLSrxu833oL1MRy8Zv4ivxe8XfB48
T/+B+6qmjJ8xr20SOg1PRvtCr+EUOMe8dl1YX8T6dea1boBfCzdCKfgsNA5+
xprJOgs0FF+C2kW+RmsXmtd6CP9/FHkNVUt981f8O5QX+h60l2HmZ6FnDoff
M38g9DXTdJY6c3gia8qYq8Cn8jsCHwevMD+7WLQczkWFofdAOesu4WP5/c7Y
EfgDmorvgO8Mr0JFcDxaCc9B50Ov4Vz4ReS9ux6NNK+paluO32L+jfrWCvxW
/D98IjwAZapXUW24Ch2CfzOfACfrzPGGWsDP0Fm4PWrKmlx8CjzQvFeaMFYI
9zQ/C/Wceq+7ee+oZ9Q7R82/VT2n3vsc+bOVEWXluvnZJjF+Aw7kdV6oD9wR
TQg9A8rCR/V34HvMYO4+uoJvyfgD+A5qHnlmld1r5s9uiJrBt1DjyL9J33bQ
vBaxNWeTZd6bekclYzvwswI/w53wXvQx9B5Xrx8w73XVVLXdY56NOLQLvm2e
fe3pLnzMPHvKbAF8yjyr+oaT8EPUJvIe7g0vRZOYN7QE7oXaRr5Ga2+af5tq
ptopg8qieqgCLmKsVeSZVraVKWWrFL/RfI/aq75pn7JjfraqkWr1M/JeUs8v
wieb94LulLvM3TOvvd7RAx6vHg18j8XwOzQ28jtWd63uKN1V6rnqyHtYvaw7
T3efMqAsrEaDVXvz3lQP/2W+KvK9KxPKhjKv7KtGT5jrZJ5FZUrZqm+eJe1B
exlk/mz1VAlj28yzfAO/HV5mzjrz18zXNc+y7mjd1fHmZ5Fak/3vkWdPd7ru
9v86iNJA
         "]]}]}, 
     {RGBColor[0.6953607397007908, 0.7389134098481922, 0.9124974452604115], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
zVxDt8K7JUeMtar9CjXUtXRZEfY39tpy4GAT9d08XyHnONc7z3ttO/Fr/K8C
8xPIq86vvjP6XNfuhch8K7pYr8XI5HW+c/uNtoX1bjczP5Gc7Nxs3Z+Cz0z2
GBs3cif33bwg9/4uB+5qweavc9xVfpXjnem6vIncM/DOKKLuun665rnmP8O6
brDvGJmcI54/kWNdJ/n9RWxg/O8mnw/eF7pY1wLvXeQx10bnxrZi6E7h81wT
9pAPnUecB06nuMv5TWbd/TaxfVzDBmoTfnPsOg/4fv4EetiP9mEjOu/hPL+F
/I/Cb6NHWbseGbvJCb5jGSffzvGWtd9qiNNm6pDHfgf6n8rj6Gl7rsGmHvue
5zWzwXYF+4xP4+ARePuMwX8F9ehZhaweV3POfPQ3do1b18pT2HQtNvXZW6nX
rtv2w8ustX+OMx587y3DTy/hn81p6B+A1/Vwxjrs6DNqr8t/HewzBm7nreQ3
k+19gDObiF3fwa4ydt8xsijF3cX2eRgbDf7Psn/sQ/ftx+4csfghsfQQfjGP
hcRIPb61btuI16X4fD16PMxe5xbfl1aQS/0OcKzaF86XK8iZjfD3He9jvH/9
Dm5ARvN2fC+Bp/ODa04vsqzDP3Upvnn+Zt62fuM6Hnx3dL3zfbOLPLkEPS3P
Yfa+is/WgDvfU1aSh/29jnz15xR3P/+TGIcOFdhlLfudn5qw2/8Bnb9cVQ==

         "]], PolygonBox[CompressedData["
1:eJwtlFtoz3EYxn+//zsMk1w4E3/MeZmNTIiYw2YkhzlGUZIL7tRGzJTDpJxd
ucbFbhyuduMUzYYlLSUbRk5JKbG0+Dw9/4un93m+39/ve3jf5/1md+5fuy+T
JMkakAcmR5L8I5Yx+Bp+D1SlSTII/QB+P8xrGZsPvwUy6HHos/AWMBp9Hl0d
XkNrLWLNNuIrsAO+mNipeeJhdDnxLXoM+Isu1rfwN8Sr6GXEd+hfxC7WLgJ9
0U/A7tR7tsJ/Ez+i74IadCPogbeDBvgf5j/Dm0Ed+jYIxprQB+D9wKbEY3fg
3cTvzLWCevQNjcELwLXwGXXWLP80EyehC5nbrn3gpeFvq3Ru+EywAF2Bfg8f
BYait6A/wXeBwehGsBfeBPIz3vM6/Bs4gu5hv0L4QdUodU7bGR+OHgI/BP8a
3kN7NTLWQWxDX+D7PWA2PA/UwdeDsfBycBS+AbTwfW/0cZ0PTIFXghPwreAF
86vQDfBS0D98Z919DvtNhC8P/6uc9IIvBfWpPXMTXgRKUq+xOlxj1Vo5KoY/
BDWpPTgM3qk6J77DRtUKXIRfApuVW+UEfkVnDntQXlQOlcuOXC7O6Y7hnCv3
ytlI+MJwLlSTNOxJebMMPUO1ApdTn2le2MPysu6gu6wEJ+HTQR/444xrqTPp
bPJAVe4OusvLjL2snCq3p8NeVQ+cgj9jfnzqmqg2P3K119iZcI1V627GRsCP
hb2qnvnA+ED03NQelpfzw2dTj6hXCsK1U0+oN9Qz6h15qlZeCPeKerSL+Qnh
2sqD8qJ6Xr2vN+MnY9PQ21LnQLnIhr0kj8lrs8LeU82ew1eE3wb9UwH/kruL
ekC9MCCce91hHXxq2HvypLz5NFxLvQElqkW4F6vRS3S2MJfnHoV7XL2uN0Rv
id4wvWV6I/RW/AcT6Z5m
         "]]}]}, 
     {RGBColor[0.8208884367657152, 0.8664253028369917, 0.8879317205353494], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlctvTVEUxs85G0GvIXrrnZTe29tKSiu95WolEmpA0gnBqNJBPaomgmBC
GPkHqCBRM1cIhpgZEEnrkbTMvQZG5r4v69fEYGets/ba6/mtdTaNnh2ZKLIs
e6aTdOr66Bet6jwVX86zrE18h/hz4k/mIW/qtIrv1F2baE10SrK7OmvEXxK9
qFMq4s04diro2N4Z7Fl+RfSQzmrxvxTIQfHlFP7PoDMrepvvCjYmsD1JLO2i
h30v/p11RPfKzhadI5L/EN0u+TaddXnYmCI35zz+X04byKuKXdv0ux7nnsX7
bfA92HT8f0Vz3Z2Xr0Up9DaJDhRR33oWPsxXsbmdt8ekNyz9laI3dGbE3xTd
WcT7CvnfpnZHdbdU7xop3vjta9FVedRwme7mRHuJs68I3nX5QU06Usj6qElD
dJfOfuncoT7uqXt5B979Nw7clyHRQXIug49WavewiFxPysd9yU6IThchH5D8
segL6rA8i7gd8yz+D6TI33V4Ivo7RX/bU9hYqKXzuJZHn9brbkR0IAWmVoGr
JSnq1ym6hrvvostSxO6+2Z/9fnJc4rdKvjxFPQaJyfG+JHfHME0cFfJxLpY9
Qt5E33fu2wS983w4TmPN9bJeOQssus7GdJWYHXsTG9Y5T8zPRa/nkb/ndgS7
w+TmHNcS/zQ1N8ZfEH+DOHcRYxO5bVzCTolZdpwrkFt2hHrbbx3sGb+21yB3
Y3YM3LoP7rF7US3C1sKuWIGvBvp1ZqolC9wayw/ARp5iXwyKbmS+PGdXwZ9r
OQVWXcsZZsZ3I8z1Qi4lYuhh/hzfJDlbp0u0Zj3JLzNTzqPGPLUwIyX6dQKc
/+S7jX3iPlzmbb90OnX/xXOaohaf6acxNszMlsGUd90ocfYyo63MvGf/rWRD
5L8nhY0hsNpkh55K0fNx9pxxZNtlbNqfd8Ji8LQvRb3vUfNr7FX3+zS+7HOM
Xlfo3W74LnZAmf7VwO170QuSH08xC5vZ4Z4z5+/c7ecb+/aW9L6K/wMW3Cf3
6CV7w3nsSGFjRnQ+D/0OZuEC/R4E48PM1yT/DevP4Ws3uexnNxu7/WB4J/wj
5si2XBv32j0YQ9+4vcvO9L/lY4ocZ5lBz59j6C6iRsaVaTf1aqc/9uUdcY44
bbMCBoyFKnwb/0r/M2vYdJ1L1LyFHs+BGf8LXZsP1N0x2k8n9ieo/Tw1qbO/
69iYp7bee97vzudNill65VzZz7/Z2bPM3j//gLQD
         "]], 
        PolygonBox[CompressedData["
1:eJwtkrsuRFEUhvc+m4SE1p2YxDAjaGQYJIPGpSHRUNBMiYxWgYaoeAENXoCG
Fh0hkRiDGJcaDY/g+7NO8WX9a+21z16Xk8ivzRUi51wPVMBKcK7RO7cFq+gO
mEdvwwT6DDy6D87RwzCHnoYh9Hiwuw3Qih6FTXQ9377loSf8NDYPg+hFWPf2
jbZgMZ2loIT+xh5xdgh5/G5IoXPEP9DX2CpnOcv4z8ohVsAfQOdgAz0LzcF6
UC8L0IkukTvF/THsJ/4DNos/gn0P1oN66cV/QScUw8/gl4PFdFbDnRtsET+J
PSBnKRjSRfiK39BbmmG13gtWq+48oidhx1sNquVUOd52coL+U13edpLEbwnW
m2bs0XtQ9paj3K5gveqblegLqI1sB3XaNcx4m5FmpRlr1sfwE+9Au9BMs8Fi
OtOdJvxX6I9sJu3BZqbZaUfpYDvKxTMuYi+D/Suq4Qp9rxo5eyO2H2xGmpV6
3g0240ycc4f9jSxXPapX/VP6t1SDavkHt29RBA==
         "]]}]}, 
     {RGBColor[0.939559132984491, 0.9059988179332751, 0.8347673549740207], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtUS1vAlEQfNxqkKhCQiBIJLS42iZNuOrWYLlwkn/Q30D/RDlLKB8CCJYW
ikfxCwBFmMmOmJt5+3b3ze5VuulbPwohNAADFvgUEJiD41wICXBE/AXck57h
/gr+AU+lGSua583Mc6kvuEtwzlgPXiLvFVgD48j7zcED3A9z/uY3MALywfuw
P/NS6HrkPck16ZFqztAT9V8Bn+axE3QJuoOcZ/BCnul9qBljvdOTZ9aw9sMc
1L/m71R192juaWceqylOP5n8P5nP1gYf5IFemFuV/z+dt+wP3Di/ONMuEu2T
e1hpxqX2Ru8PwWOxcprmO/oHt+RzDy4DX9Dv5j35r9mXsYH6bCL3Sb871bb0
b1Pt5w6QeE7i
         "]], PolygonBox[CompressedData["
1:eJwlkDsOAXEQh2f3r6WzlUiEOIKgopVI0FJpiS3dgCtwiaX0imei0iAcwCFQ
iW8yxZf5zSPzynTD1sAXkQBikHQifU9kAm30Dd7EcxTd0VuokUvg79FjmHlW
M0KfiGchInbE7uBF7gt7dIeaKbkU/gX/gR961jNAr3zLNfEP6Kuz2XkooBfY
j9gMnaU1WlvHrqFHzRz/BxG6AnGxWB9dhYZnMc09nfXWHYronbPb9Af6i5mz
Xnqj3rrx7RbdQXfRH+mvhlBCn33bRW9eYsvOcnpzGv0HcX8wPw==
         "]]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{712, 983, 797, 833, 832, 876, 875, 942, 943, 903, 902, 744, 
         861, 978, 979, 977, 822, 982, 824, 980, 823, 981, 790, 958, 960, 959,
          789, 859, 825, 826, 798, 860, 716}]},
       "4"],
      Annotation[#, 4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{778, 949, 948, 886, 757, 777, 990, 724, 842, 722, 989, 810, 
         774, 809, 988, 721, 839, 773, 807, 1000, 806, 838, 804, 1003, 805, 
         752, 908, 751, 909, 718, 836, 715, 986, 801, 772, 800, 985, 714, 831,
          769, 796, 999, 795, 830, 793, 1002, 794, 746, 866, 745, 867, 874, 
         711, 829, 858}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV0DkvRkEYgNFBQWKPgk7QSBB7RUUkxJLYadVCjcZSoeBfoNBQqqyJXSVi
++yJQkOBROFMcfK8985M7uQWjYz3jCWFEEbJTwmhgcAeBWyzyw6NrLPAIvN8
JIdQqFccmpu0mRL2KeaAFjbYZJlPe5f0S0v1hgtzq7ZRzjtltJPKC2l82zeh
k0xx6bkj3kETWkEXnaTzSgY/1qd1hmfzNd3x2/qglWTSSxZvZPNrfVbn4h3M
t/SZ7/RRq8ihmifuve/XXE6p4YgTjhlgi1XWWOHPmdp4LxLmQc2L/4R6zqjj
nCGG+QemVTvm
         "]]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwNzbsuA3AUwOG/9g3EC3gBr0L6AG5pXQatomFQXUhMEq37ra4dMNSiCDMG
MYiIDQkdSBOJGIjLN3z5nXOW09iZiiXrQggdVCMaDeFFW7WNds445dl9QsfZ
Z48/t2591Ul907hGKBPlgJp7nyZJcWWf0nft1zQDXNun9UMHdYgMN/a8fuqw
jvBgvqVgnmGULI9ud8ya5xgjx5PbPc3mFpo455ILYhyywCLzLLNEhVXWWGGd
IkdsssUGO2xzzAk9fPlZ0m9NaD29/Nh39Ve7tIF/RJA+TQ==
         "]]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], {}, {}, {}}}],
  AspectRatio->1,
  Frame->True,
  PlotRange->{{0, 500}, {500, 2000}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.570870114647584*^9, 3.570870161958641*^9}, {
   3.5708710731328697`*^9, 3.570871090060111*^9}, 3.57087166256339*^9, 
   3.570875583374217*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{"W", "[", 
          RowBox[{
           RowBox[{"Q1", "[", 
            RowBox[{"Q", ",", "x", ",", "att"}], "]"}], ",", "Qth"}], "]"}], 
         "-", 
         RowBox[{"W", "[", 
          RowBox[{
           RowBox[{"Q2", "[", 
            RowBox[{"Q", ",", "x", ",", "att"}], "]"}], ",", "Qth"}], 
          "]"}]}]}], "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "1000"}], ",", " ", "200"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Q", ",", "500", ",", "2000"}], "}"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1000"}], ",", "200"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"att", ",", "2180"}], "}"}], ",", "2000", ",", "5000"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Qth", ",", "500"}], "}"}], ",", "0", ",", "500"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.570851433911298*^9, 3.570851511859428*^9}, {
  3.570851887416168*^9, 3.570851897482723*^9}, {3.5708558213090563`*^9, 
  3.5708558402984962`*^9}, {3.570855909542966*^9, 3.57085590961605*^9}, {
  3.570867259834401*^9, 3.570867270577977*^9}, {3.570869186902276*^9, 
  3.5708691911137333`*^9}, {3.570869426220752*^9, 3.570869438709722*^9}, {
  3.570871686506858*^9, 3.570871690759296*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`att$$ = 2180, $CellContext`Qth$$ = 500, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`att$$], 2180}, 2000, 5000}, {{
       Hold[$CellContext`Qth$$], 500}, 0, 500}}, Typeset`size$$ = {
    360., {173., 177.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`att$3182$$ = 
    0, $CellContext`Qth$3183$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`att$$ = 2180, $CellContext`Qth$$ = 500}, 
      "ControllerVariables" :> {
        Hold[$CellContext`att$$, $CellContext`att$3182$$, 0], 
        Hold[$CellContext`Qth$$, $CellContext`Qth$3183$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{{$CellContext`x, $CellContext`W[
            $CellContext`Q1[$CellContext`Q, $CellContext`x, \
$CellContext`att$$], $CellContext`Qth$$] - $CellContext`W[
           $CellContext`Q2[$CellContext`Q, $CellContext`x, \
$CellContext`att$$], $CellContext`Qth$$]}}, {$CellContext`x, -1000, 
         200}, {$CellContext`Q, 500, 2000}, AspectRatio -> 1, 
        PlotRange -> {{-1000, 200}, {-6, 6}}, GridLines -> Automatic, 
        GridLinesStyle -> Directive[Dashed], PlotRange -> All], 
      "Specifications" :> {{{$CellContext`att$$, 2180}, 2000, 
         5000}, {{$CellContext`Qth$$, 500}, 0, 500}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {229., 234.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.570851435619013*^9, 3.570851478138558*^9}, 
   3.570851512377284*^9, {3.5708518887690887`*^9, 3.570851899032263*^9}, {
   3.570855822644252*^9, 3.5708558409084*^9}, 3.570855910145207*^9, {
   3.570867264300753*^9, 3.57086727113913*^9}, 3.570869191710012*^9, 
   3.570869439369134*^9, {3.570871643604055*^9, 3.5708716915771646`*^9}, 
   3.609569327301601*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PP elastics", "Section",
 CellChangeTimes->{{3.570848733945065*^9, 3.5708487485937443`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "physics", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mp", "=", "938.27203"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "=", "299.792458"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"mm", "/", "ns"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tinc", "=", "260"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"\[Theta]NN_", ",", "\[Phi]NN_", ",", "id_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mp", "+", 
       RowBox[{"Tinc", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"id", "\[Equal]", "1"}], ",", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            FractionBox["\[Theta]NN", "2"], "]"}], "2"], ",", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            FractionBox["\[Theta]NN", "2"], "]"}], "2"]}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "id"]}], 
       FractionBox[
        RowBox[{
         SqrtBox[
          RowBox[{"mp", " ", "Tinc"}]], " ", 
         RowBox[{"Cos", "[", "\[Phi]NN", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]NN", "]"}]}], 
        SqrtBox["2"]]}], ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "id"]}], 
       FractionBox[
        RowBox[{
         SqrtBox[
          RowBox[{"mp", " ", "Tinc"}]], " ", 
         RowBox[{"Sin", "[", "\[Theta]NN", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]NN", "]"}]}], 
        SqrtBox["2"]]}], ",", 
      RowBox[{
       SqrtBox[
        RowBox[{"Tinc", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "mp"}], "+", "Tinc"}], ")"}]}]], " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"id", "\[Equal]", "1"}], ",", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           FractionBox["\[Theta]NN", "2"], "]"}], "2"], ",", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           FractionBox["\[Theta]NN", "2"], "]"}], "2"]}], "]"}]}]}], 
     "}"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5704238610813007`*^9, 3.570423895762998*^9}, {
  3.570423972131967*^9, 3.5704240459451323`*^9}, {3.570424098296206*^9, 
  3.570424128303945*^9}, {3.570428835810305*^9, 3.5704288414090347`*^9}, {
  3.5704853418544827`*^9, 3.570485420416012*^9}, {3.5704854611520557`*^9, 
  3.570485536531888*^9}, {3.570616037881128*^9, 3.5706160500778255`*^9}, {
  3.5706161065540557`*^9, 3.5706161095952296`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Observable", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"KE", "[", "A_", "]"}], ":=", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "-", "mp"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mom", "[", "A_", "]"}], ":=", 
    RowBox[{"Norm", "[", 
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;", "4"}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "A_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;", "3"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", "0", ",", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"A", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"Norm", "[", 
         RowBox[{"A", "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", "3"}], "]"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "[", "A_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;", "3"}], "]"}], "]"}], "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", "0", ",", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"A", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"A", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", "[", "A_", "]"}], ":=", 
    FractionBox[
     RowBox[{"A", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "mp"]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]", "[", "\[Alpha]_", "]"}], ":=", 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox["1", 
       SuperscriptBox["\[Alpha]", "2"]]}]]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5704241408858*^9, 3.570424335830439*^9}, {
  3.57042447317397*^9, 3.5704245142642*^9}, {3.570424666539598*^9, 
  3.5704247616163683`*^9}, {3.5704261761502333`*^9, 3.5704261767329197`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["1000", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"t", "+", "k"}], ")"}], " ", "c"}]], ")"}], "2"]}]]],
          "-", "1"}], ")"}], ",", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["1000", 
               RowBox[{"t", " ", "c"}]], ")"}], "2"]}]]], "-", "1"}], ")"}]}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "5", ",", " ", "30"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.609726718307268*^9, 3.6097267826698227`*^9}, {
  3.6097268127127037`*^9, 3.609726862933148*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 2.325, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`k$$], 0, 3}}, Typeset`size$$ = {285., {214., 218.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`k$1757$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`k$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$1757$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{
        1/(1 - (1000/(($CellContext`t + $CellContext`k$$) $CellContext`c))^2)^
          Rational[1, 2] - 1, 
         1/(1 - (1000/($CellContext`t $CellContext`c))^2)^Rational[1, 2] - 
         1}, {$CellContext`t, 5, 30}], 
      "Specifications" :> {{$CellContext`k$$, 0, 3}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{330., {257., 262.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.609726778452569*^9, 3.6097267830919743`*^9}, 
   3.609726863992639*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "geometry", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1400"}], ";"}], " ", 
   RowBox[{"(*", " ", "mm", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]p", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Pi]", "/", "3"}], ",", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "/", "3"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fl", "[", 
     RowBox[{"A_", ",", "plasticID_"}], "]"}], ":=", " ", 
    RowBox[{"d", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "A", "]"}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "A", "]"}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]p", "[", 
          RowBox[{"[", "plasticID", "]"}], "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "A", "]"}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]p", "[", 
          RowBox[{"[", "plasticID", "]"}], "]"}], "]"}]}]}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToF", "[", 
     RowBox[{"A_", ",", "plasticID_"}], "]"}], ":=", " ", 
    FractionBox[
     RowBox[{"fl", "[", 
      RowBox[{"A", ",", "plasticID"}], "]"}], 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"\[Alpha]", "[", "A", "]"}], "]"}], "c"}]]}], " ", 
   RowBox[{"(*", "ns", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HitPoint", "[", 
     RowBox[{"A_", ",", "plasticID_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"fl", "[", 
      RowBox[{"A", ",", "plasticID"}], "]"}], 
     RowBox[{"Normalize", "[", 
      RowBox[{"A", "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;", "4"}], "]"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Obser", "[", 
     RowBox[{"A_", ",", "id_"}], "]"}], ":=", 
    RowBox[{"TableForm", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"A", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"KE", "[", "A", "]"}], ",", 
         RowBox[{"Mom", "[", "A", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "A", "]"}], ",", 
          RowBox[{"\[Phi]", "[", "A", "]"}]}], "}"}], 
        FractionBox["180", "\[Pi]"]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", "[", "A", "]"}], ",", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"\[Alpha]", "[", "A", "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"fl", "[", 
          RowBox[{"A", ",", "id"}], "]"}], ",", 
         RowBox[{"ToF", "[", 
          RowBox[{"A", ",", "id"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"HitPoint", "[", 
        RowBox[{"A", ",", "id"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.570425163904866*^9, 3.570425435767775*^9}, {
   3.5704255497280293`*^9, 3.570425566129052*^9}, {3.57042618221136*^9, 
   3.570426208971541*^9}, {3.570426289469638*^9, 3.570426291014389*^9}, {
   3.5704263475968103`*^9, 3.57042646696006*^9}, {3.570427822899479*^9, 
   3.5704278850259533`*^9}, 3.57042884623094*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Obser", "[", 
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{
       RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", 
       RowBox[{"\[Phi]NN", " ", "\[Degree]"}], ",", "1"}], "]"}], ",", "1"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", "0", ",", "140"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Phi]NN", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "20"}], ",", " ", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570426212601223*^9, 3.570426267701977*^9}, {
  3.5704274814061337`*^9, 3.570427510770319*^9}, {3.5704855917035646`*^9, 
  3.5704855935094757`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]NN$$ = 
    31.200000000000003`, $CellContext`\[Phi]NN$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]NN$$], 0, 140}, {{
       Hold[$CellContext`\[Phi]NN$$], 0}, -20, 20}}, Typeset`size$$ = {
    299., {43., 48.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]NN$17955$$ = 
    0, $CellContext`\[Phi]NN$17956$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Theta]NN$$ = 0, $CellContext`\[Phi]NN$$ = 
        0}, "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]NN$$, $CellContext`\[Theta]NN$17955$$, 0], 
        Hold[$CellContext`\[Phi]NN$$, $CellContext`\[Phi]NN$17956$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`Obser[
        $CellContext`P[$CellContext`\[Theta]NN$$ 
         Degree, $CellContext`\[Phi]NN$$ Degree, 1], 1], 
      "Specifications" :> {{$CellContext`\[Theta]NN$$, 0, 
         140}, {{$CellContext`\[Phi]NN$$, 0}, -20, 20}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{344., {99., 104.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5704262427285137`*^9, 3.570426268483769*^9}, {
   3.570427503788323*^9, 3.57042751134513*^9}, 3.570427931889278*^9, 
   3.57048559571665*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ToF", "[", 
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", 
         RowBox[{"\[Phi]NN", " ", "\[Degree]"}], ",", "1"}], "]"}], ",", 
       "1"}], "]"}], ",", 
     RowBox[{"fl", "[", 
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", 
         RowBox[{"\[Phi]NN", " ", "\[Degree]"}], ",", "1"}], "]"}], ",", 
       "1"}], "]"}]}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", "20", ",", "140"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]NN", ",", 
     RowBox[{"-", "20"}], ",", " ", "20"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570426108147499*^9, 3.570426161913308*^9}, {
  3.570426231043017*^9, 3.57042623598166*^9}, {3.570426929058868*^9, 
  3.570426954276613*^9}, {3.570427529324625*^9, 3.570427545135765*^9}, {
  3.5704856174070063`*^9, 3.570485630821765*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
4LGVvYpCNNWPn9m0zV5BoP1kxhjhfhKTt0VsFprPhHZ3cVG9PwnbvQYarlwW
fMLq0n4RVL9t1fs+wFFCUZ/GqQ99cTj9Q9H52gFVcLmG50Ra4xBRtEePl6mJ
D7JHC4q+xeHNNfdicqwuVA5Or9qg+N8X3/+2+v1v68//bfj738av6Px5Pp8/
m/P5cwWfP+vx+fNWPn+u/R/48yY+f57B589f+fzZms+fx6b9X/z55P8h/vzf
po9M9pxt1d3NxpLlvxLkq1KxeIN4wnKqHx6Q3KcSqpQKNpFsv8SGjapHz8v1
76biwFZvA1JHCZNqx0sme6ehXaO/UmwuC96zqtt7V6eAHBTKG3Oaifmblo7s
MU5G1emAyKNCLOz62NfCYKbgW1zK6ivqTKRN4Vx4sicJL6/LXNF5SGA4MqXM
NywRN7gmFQ4TmPgZq9wdYJoEsXe+z0Ko+t6YPuay/8cETMHZzxZUfjwJWzFH
WTEBt38317zZRuB09oqWzBsJuPVGiD1E5dtb4IfK+XhU4U3ewBgC232KW778
4cH5w7HACcIETI+sWuuzOx5qs2Lk2TIEXBeN9O2M52Fm1PdE3/EE4pITTrVJ
8pCkurKk/iMDGdJrl7O38tB89bXGpUUERhQX6b0t4cL8lNmqWBsKr4S7nd+u
5GL6hNm65EQCGf5FNUtPcZG0Iti5+QaBGRvC7AOmc8GL3J5h/Z1Av76i+ZV8
Dj49ut7teZxA+iXp7oQmDm79ORQ3O5gJL/dFj0apfL/Y84EVM0D1E6kP528u
4eDJl9nnXSyZsNRTbaqw48A73qd13EMWZn+RSQpeyMHcTfsmW3uxMax/tT1z
kMR2L4MJGYFU/jx75Fj7i8Ir6QNBzeFKyLwZf3XNKInLd3mVkRHKWCNE/sQz
EucMGjb1mSrBavSPWOddEkGsrTPHyKvi4B2L31c7SdxvbpLqi1FDcHmbjnEJ
9bpzc19mqQpeW3vvXZBG4vqT8Ru9yjWAWb8fN1N8Sm/Z611dx7SgcttwwvJm
EnGvks6Yb9XA868LNny9RMIs4JJj1Gwd9D5O4cxR5CCqsex7UaMuZnp8yZg4
h6rv6NFPx1u18e69dR+7lkTCtU0HJ8WwYPHc0unMtFSMl1nyQB9sNLvvr5p9
NRWbCyJtlOYooSyWvNW+JQ1c3SnXhfYw4SrT1f1QNhl2nt89kz4xkWJhrvFt
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
v6XzITq/pfMhOr+l8yE6v6XzITq/pfMhOr+l8yE6v6XzITq/pfMhOr+l6xW6
/vw3vULXn3S9soevPxfw9Sddr9D1J12v0PUnXa/Q9Sddr9D1J12vmPD1ZxVf
f9L1Cl1/0vUKXX/S9Yo7X3/a8fUnXa/Q9Sddr9D1J12v0PUn3U+g+0N0P+EI
30+4w/cT6P4Q3U+g+0N0P4HuD9H9BLo/RPcT6P6QG99PmMf3E+j+EN1PoPtD
dD+B7g/R/QS6P0T3E+j+EN1PoPtDdD+B7g/R/QS6P0T3++h+9L/5fdV8/9mD
7z/T/T6630z3+wr5/nIk31+m+30ufD95Cd9Ppvt9dP+Y7vfR/WK63/eZ7w9f
5PvDdL/vKd8PtuL7wXS/j+7/0v2+GL7fu5rv99L9viK+v9vA93fpfh/dz6X7
fX58/7aJ79/S5wv0+QN9vkCfJ9DnDfT5AX2+MI0/L6jgzwvo8wT6fIA+P6DP
A+jzArr/T58P0P1++jyA7u/T/X+6n0/3++n+Pd3fp/v1dD+f7s/T/Xu6H0/3
61/6LB1dtIWN0ev9/lUlqdA0tw/MnsxChdmXFv2FKShrbplvS/Wb4D2HFW/Y
JmGA67/Q5wCBPdymN2cqE3DycuZ2bTmqf9VsnVIYGo+Yc85lvD8MPLofv/L8
ER4WZcWqEUwCc7uUt767yMXkOxRNoPqdnX5V34rflH6YpTb19A4mvnqEXY89
wEGV6o/cP8ksiLVOEK6U4+DE2sWum7cpQTH9V6zyOxIHT8s+De1RwRbjiXO/
UP1tywNZk7xzGrjKcAy1rCTxo/HgYN6wNn5V9PbvHiKxLm929+KVbJzhiT9e
m5+KlTpPX/sPMtG5ZEZHgUwKDryNv5s7TOkpzb5tM9WTUPJqqsS9DQSm6308
9Sg5AQGsd0nB/VS/3mTSa2kbD6EfjOf1rxiYf/lQZvdKHmpLirwGhxi4afs9
V3QvFzlZmg8+7iKgwyj9sK2Eg9pZUw5F6jCR3f9iWewiKn+G3oYObGNB9lpU
9xnqflYUzs4JVVRCzeMlPgeSKX5VbmK/IlUFu4wbVvqdoPi1amODuIEGZlZ4
LsoNI/FYteV3V5k28gJfjWrlkdioWflHcQEbB+12GSVeTMW6V0XBnc1MLNp/
2eBxfzLqfszqsmonsOv4FrEa8STUTdnLem1AIGeMel2TXwJ6P3EmLqhl4FLd
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
E0g12dvBzEnEuXZf/zVUPM99KUkRGonHxj0LfUpZVP5VBHJO6yTAbfrg0+w2
Biy2G0d11vFANJ5dvpzq13GejID7Qzww+88tvdnJQE3YHAnNdi6+boiUVypj
wGi48uW9IS7K++ZpCekSuFKvcy5yHhenum8X5VL9QXGRZkuoChfRxGTe9moC
vUsI27IwDjT9LxYTxwhEGrp52oRwUPbk86SQp0xo7dl3hjWNgykal9jjNzMR
rf6+Q1KcA8i25I4zYSPwwGHFVY9J3M0Lnf8siwWflWYp3TlUPiQ5J262UUaH
9+aujngSsueNup9EKaFYNnWPtT8Jsa2Khds2qGGO8PjlydEkGsz2yVSYqULh
+eddKdtIaOXfVQqy14JTXe3LyZdJ3J9T+vqotiZ2VrXqED4klh/d57zvsi5U
73WG1HRQfOiXl+3+cB0wsnr/zjtP4nnIlL0DJ1hQvnBztYxkKr6bxhbcqGbh
ScP6tbtXp4IbMGvzXnElNAWk3PyxLg2Kv5pOntzEhNVDzXHPh5Iw0b73+fJI
JhJLD24z2JKMcx6Hjh2KICB1v3byr8WJCLLpyt5FxfftTFed+shE3NYbNr8h
TOD0bteYv7XxCL3zt11PiqpfC8PJUpOpfr06d/RoMaWndWwYVVd46LTdfS76
NgN2L2od91DxVRMdufGwhIHS+g1FBgVc2E22f8vOZEBNZ8St/hUXSx+fHOig
+o1jq/zuun4OYpZIXp77loHWO1YXmOO46G4veh12nkD9ptK2FXYczHngOCfS
kcCanJsvDm/mYNLJ9k3i8UwsjiGaattI2K7TuHhfnwnXjzW215tJGDYue3ZB
jI2rPrsbhs+RsHn/wvz1MRZeS3KufwsisebuWJFl8sqYdts9x5WKz5XpfieK
N1P4UNkYF2FJ8eXVJvdfTFBD9gVdoQRbEq8qIpmkhCq4F4j4V3okZhWuOmil
oYWj1V981b1IhEQ+ndr4WQPSq7dtFwUJt6fnx7P36ULeL+9sXAYJM9W/BfpO
Osie9zx23W4S8rUefzX2siARZhBe8zcFTsMMtVsPWQj4ebHP0ywVc+J8Nt/6
y8ZTu09vnq5IQ/6X9PPs5UwMnA8MNWxKwuIFsqYTjjIh//b9+o0rkxFuf2hL
134Ck65j4OvcRHQlzM5fF0dAkZ2VUuObCIX6jTHyPQx03/G9MuZGPDQck7fu
ofiC7tLSJ5sH43Fiwkvl11R8MGoaohHGw7wb67uI8wyMexQ46HyHh53+D8Z3
ZlD812zmABHDhYtK8c7hKIr/vxo6eu4WFzpfBjgR1O+Xjl93x6WKg/ttTpJj
qPzYjbKQ4nYOHrKe6Osdp+IZ0NazX5uDGTHxTbNBXZ/33toRqj/PdWHkiu1n
Yoyq0NhoSh80Heu8ckiOiS9yd4al7pNYPHd95c8mFrzWrn2l4k7CI/StjJAT
C9JLvTbKupKISZS+fKBTCfl1uybXGVDfnz/9sPkCJdgpr5HdoEThfbtr8tVX
qgjOXRwmp0LCT4OjV9+kgvNfV/+VnUzinkUaUS+phXfkvH1ui0hwjQ932tzS
QEKp5evg6VS9uspUt1roYuiphprWfhJyD+TvjV2kg4Q10rvLzUms/ObSlLqV
hc37TX2OfUpBfbb55ru3WOgqbtu0clEq1HcdjHYdYOPX2h8dk5emIZ230jHd
gIkrO2L7fB4nYYLP+dZDPkwsSQjNEzNMxo+oa2F3thLQW7Buy2rxRGyv4a7b
G0bgaZrEVqFtiZCaPvOPSyP1fE/MUu2Oj8c1rlGn02cGsu5Nc3H9EI/Yne4D
ZAwDDtuCFFq8eDgxeKOom3rtd+NzoNdFHlSu/3QaofSo2OwR6wcHubCKFUPY
MQbM7H6KPUnj4oGcSOVDqj+PZ8rYfr/OQTVhVql0nQEdA+ZizeccyIpPPqW6
k8Dsw/vchaZwqP49YnWRwvvrt+a1XGRz8C43R8rYlok0/65rkkkkMqLK9o+j
8NytzvRWF1UPve0JnReLWNCskxc+SvH/a9N/pYosY+Hjt65QmZUkttbdPHGy
WAkmf7K9m+VIDAcyvcfMUkKkqKOnyySKb+5/u37/JVWUasnnXhlPIvh6fzTz
vgoMflm3Sf2Ig/rESfvOtmmi5eqv26uo+FklLkr1jdZAZGxP1tKROPTlPd+t
xdbFX7UU7pzVJB407I0KZuog18pHWU6ZxPiC9ZwlDiwUd52bznyXguQTa4iH
1yk8uL4yftzCVOzrujS67wsbm23jPStMqHhquSV1qzOhF6Vyz+12EkyXX5p6
xoMJk3Wmz8y0klE/wYzZbEvpxTDFpDFDCfjzSdzxbiCB3XlXheztEyGR5FHs
V8nACmfNVUnh8ZipmRv+/QMDZz94FYo2xGOQw9yXRunRw98uLSty5MFYZvOq
56cY+Dp53o5jPB68rj3V7TzOQH+Rs1frNi5uXb26P9eXgQjbECmHOC6un552
37mUgTI15elbkziQWGrodIzSsxXxvgErizl4ajVy09SGAH6ZrXkwSt1//saY
cfMITNhauXDVDA5GRleGeS2l8GSKf9lEiv8/3bHolfYgxcfSn2Iaj+I/6/sN
dmeysHu6VE2BLomEjKyv+QtYuPNOyOi+EaUHLfbtZVxWwoZj6/QNxpL4qGi+
vlBSCWYWfbsPj6Hw7qt0YNkpVUxtOK4oSun98hcRpYuyVPD89Wqf0I9xuLRi
UmnlA024O1joBlGfd7crG9fir4FHlcpXhL7GoTc3+nTxZF1wboc+GqX+/ubm
7TlBcjowuya3fpjKn/3nza5OsmHhRrSE/L3aFCyLHBAqvsbC+I1H35MLUuHz
eLz7p2424mqKQwaN0/AiRePJLzYTP2POaEtfT0KQh9V6E3cmylJ26AmrJ+No
5HQbS2sCidlXcn58S0C79NOZKkcJbCkNNKm0SQQjQPSqNcVfoqzzfooGxqNc
5+EOdisDF4cvNJi8ikdfSF57xxEGJNrjOnOtefBVq9z6OJSBB4pFf0PieIif
NNgb4c/AMr0eCy8HLooMtzt5+FD17SBjteAsF05vamNW32Xg5KSRWZHnOND9
89ppII2Bx91rPcbc5+DsxNufbS0JrA8NLQ/7TiKteqUSczbVfz1qDr+dysGm
021OflT/0Rvaa+1zmIS1Qmbw114CR8xuhR+JJXFm941oIoGFTS+Ne66ySUxJ
vzmrT4cFYtAt4vd8Eq+Tp1yckaCE9wtf2ud9j0Mpl+VgLUrV69s5muF/4rD3
g7f15kOqkDfKOf/9QxxeKuXMGLygAmnjs+5O/+yjndrzV+yqJsZ5LK9+0R+H
pdKhqzb7aKAtvbsxoSsOW4V5V5yEKfwca9P8j19QbtsS/k5GB6+M1uavliEx
tEY/SWQDpbeOtzbjlWB9djyVWlL8mQ0ROd6Ls4vS4Pl8b+oTFqW3fj7asuOa
YH2q8yRl/qwh8KTDY63SV8H6XLCh5XUbxWfOpxalzjoqWJ+ueul+DocZuN4l
ZnZ9jWB9hi7PvdZ6kIHVsa4jG+0E63PR2TapY3cYsK0x3rwtWrA+986dob95
BYHzwWUplv2C9am328Zu+XwmnPd+a597SLA+q08ev3Cd0gNWqfah5kzB+mTI
mUZacZXg7fDqiA4VD3p9nv0mPFPuoCqu/5g/YtcqWJ+6Evcc5C5pQk/biDGV
ql96fa65IlrbMVYXJRpf3l9XFKzP6qm23QxbFtQufirIaxDEz4a03tsj39hw
UvLwSEEaxEwfWdmrMBF/beLsnfmC+PmwRFmpZz2BlfW/GmIGEgTwc7n3i1vq
TxhQbVyp9i5IED+3m/5dOBzIQMoEs5qbNoL4eTzNUqqNivfQpTpuvJMgfmrU
rLL5ep+BIs/dvh9IQfx8xRHVXk3l26bXPmLCQ6QAfo4/d8Kr0ZiJs0tsjKYd
F8TPxB7zZKlUFsLzx3UcVhPEz1CxmpW3UpVQabdtS/5QnAB+1hTeiP4cqIqb
3oqu6lS90fHzFFP/3Nd8TdypsHi44lecAH5Whc14by2uizcTTNJsVAXxM6dU
VtaT4mez1C+UyX4Q5LfXfObfSPnJRup8p+E5y9Kw3jnVPluHibuf2/unPRDk
t0fXF+sqbiZgdcR8kckYQX679Rx7WPclA+dE43oszwry22Dr32K1EQzImc/X
rtgqyG+DwgrU48MofrzDeayplyC/nbp3f9+FZww0qPyMk8kQ5Le+Z5ii+tT1
PZDrCygSE+S364Rlby9YxYQ0JQuczwryW/PTr0RW5rKw/0Xtki2LBPlt+Nmw
sB03lNB1sanCTFKQ36qc8Evt5ajiyiNxi6DfcQL8Ns5wAXnluSZ+RE8QPiEp
yG8VCizW3ZyhSz0/g0txiwX57dGW/rj37ixYukmPc+9PEdCf6svjX2QIKcH6
8acc6dVpeGjXlFuxmInrB5T0j9YI6s9oR2Re9CBw/Mrt2bpTBPWn8BGhgrFU
fxWe8PfaoQxB/bn05+srPYmUXqwVtRj1F9SfHp86H09LYMDkoOxc52BB/WkX
sfrjrRYGRu5qXJpwX1B/3vIsPKW8j4D2m6Tec/ME9Sev1Sbj2DYmCrW3PZme
Jag/HZsshMMqWbAT3T1zip2g/tz5SKUp9JUSVof61UmyBfWnc5ZMp/09Vezp
kXwaJCeoP9/WnzY480cT62ET8VlZUH9Weno+MJqvC6H+DXfPOwvqT3OlDb3h
/iwc2np53mZhQX+oT9dg8zRpJVj5T1X3t0vD1u/jrhVaMzFxbN3o5e4kAX/I
pLjzddAxAsyMiS+CNQX9oSLTFMdLPxlIP57w7liJoD/kYyD6bdMNip8Gbtm5
lyvoD61r8nLeR70ft6Zy1rQLgv7Qtdz4P0v/MLCrz+/8j2aOgD90fvRKuvVZ
Atx36ktylgr6Q5tOvPVtPsmE+9esSQeqSQF/yHlt4LiRPkqvpxUVVxwW9Id8
hWU4m0aUMNbWO2uplaA/VKr4rNT/qypmHjA86b1Y0B/6oc59MTpTC73hgfrP
1wv6Q7MXyLaqbNLFIf+NkjURgv5QaPDXJM8zLGh1+8mHy6TiMt+PluX70ZJT
+236FJWgkrQ7wXZ7GobUP8qdcmPC8f5Ps6sSgv5zzO1w+edcAq2h2idWrRP0
m0NMB78vlqVet4peC+iKF/CX+2UcupdQ/Xj6ya0XLR7woMX3k+/x/WSi8wSn
lorvgYdLnsRUcgX84406XzX85hBYW3Riqoi4oF/8RMGp/n0BAZ17699Z7eGg
kO8PB/H9YSsp8te560zMW9tx5tYfEif4fvAivh/cUT187ec8NlxDirc8p+qX
7v8qz2+XMtVXRp39vjyTo1R8+X7vAN/vdXvyc1aJhhqenZw8coGKz3i+v7ue
7+/adETZVizRwsOP7hXnwgX9XKbqHoP207pQzH2rFFVKCvi3UPwlF3ORhbnL
NrIeMKj6/HHtl5g0G9yTpw+/OZKKMOufjkYGSngzdJGbsz8N7EVaC1YEU3zh
9td3CdrJOL3L7VHAW4rfyjZtFalORv96x6pk6nlNiYLrlcOJMLKZZJgzTODA
cKLWHNEkTJ83x6ZTj0CIZasPZ2oCXE1cg25S/XmujeZtblQCUk97rSij4tcd
FL3oxlceRmp0UzUUCLw+2q7yzjEeer/sLrn/ZcB9zCMN2REu9JuE2U7TCATc
Un+xwYWH1i371p+m+Gvy6+nvA4y5SHjKrhih+Jme5LPctRT/tTB/wJrTSaC4
I+rK3QscTJ9gcutpC4Wf+mVHTQc5uOSed+VrOxPa6hYJ2rocHMs3zWl6zMSp
Ko0+k8McmAcLOTdsYmNoqYfDiQ5K7z1w6j/KYMPxY6LCDYpPLThdeyzbTxmy
C4/quxVS/dRF44CRvDKuFha/VflBgvdG5uWzI2oIvDCd5Ob+01/LjMvaVHFI
a1m0eieJGa5iGiE+WohLvbP+7jMSN8IfOI3r1cSKzBWRRlR+3a32Ptr5RBcI
cKz2keDA/vVl455RHew08F5TTV0vPX70+DZIjjv7vJCNUGOo35qUJhBfejzp
8XaI7bz+zIoF7V7lFTOvpQjEt48ff1l+/CdubFs9bQkTbWlL5QNzkwTiTc+H
qQdXe78PJXD/k15b3uREgfjT8yMwbbt381RKTz24f2dKYbxAPtDzxeWYwb7q
TgYmJj15/iOVJ5Af9Px53xk5v3eYgUeLD09WvMcVyBdzfj495OeTWqh3zj/8
cXnsl+h2Ya5A/tDz69mJc2+fTmLCzlXbzOcARyCf6PlmWJ516yGbhXy3vrQA
KY5AftHzT/G2fJF4MRshe8e+73osmG8cfj4e4+dj5q7ZziVSKri3Q25PzgXB
/JvOz88Yfn4mq8s+arRXR3eV6s27FD7Q8/EOP19N+Pk6eUrXe6np2sh6X2rY
UyaIJ+99b3V/yGDj5diuFtexlP7i44nS/4An4WLvDlToszCmZlq+0OkUATy5
NartUEPp8Z4D5TPcI5IE8GQxwbpU5k7p7+PrA051CuKJytunNTKDDNy68nPs
3khBPBncH6W6tJQBUn79Ct19gngy68bW2dsaGOgtt6n1Pi2IJ69rCw3n6RII
zr/cZPdKEE96LhedTHtP1deDl+9FlwriSfrj8rw935lYfYAZNO21IJ60aPFK
Z4axccZ/WdWmaEE84TB7U6c+U4YU45rivV2CeHKvNWKbuqQ6OvOdL0zYKYgn
B/yfLp77SQv9+Z+/Tw0R5Hv32+YuTCLZcAlb9Cxn8N/53g5/+9kGipQ+WbZG
dr53igDfK08z+p00mYndIl3ndngmCfC9Msmq4pXWBIasJ96XLRfke5uKFj70
fsNAttcu/zEe8QJ8b1nX83wvir+PbQkNkF3NE+B7Kz2myrMp/i85e8+5iu2C
fM8yfuoUBWkCJk9UfxhlCfK9Cy/FUy3vEXjmqbV9z3RBvnf/ZfTvHxVMxM7S
L/t2VZDvWe8qW21jz0bfjLeVJ7YK8r2fZkOnVsYpI5jpkffHSJDvvTH6Nb3k
mRrefxA+rDhfkO8x5oU3hxRrwZMkr1xdJ6jHEjwTfg2Fs9Ge4XCd1/PveuyP
S6a8hCwLuZ809mQ4pAjosYqk2XM9Rgns2DV61WVDkoAeq8/c0W1nQqD+uOk0
jauCemzjE8sNjRQ/d598fUz8mngBPfaWvJ7MPsvATo/snu3aPAE99mjv30MS
qdT7R9JOD1oI6jF/jRyDdgpvKqbWPLU8LajHkp0ctU+mEFjXdklny5CgHvs9
3XSxaBYTcZkpr/MjBPXYlC7HhTb6bBREKN4bhqAe0zKZ3d3toYw1izJPisoL
6rF8x08BIglqOGrcOho+WVCP7U67YP3+ghYyX5d90VQV9EsurTJMGQxk4+P7
j+PmfPx3vyTpsO4CAzEW3o11YCy3TBHwS/o9X8WrDhBYIC3+12xpkoBfcnQM
52GTFoENl9/vfMhLEPBLalVTq/UKGPA6pTsy2zhewC9RF2k9uP44A1Kf9lwX
ns0T8EuWtnTEdkcyMC9hmFemwxXwSzJMoj+ZtzPQuMn5i80BQb/kqvbT+TMj
CIyGpBw4/0HQL9EvMN/nEsvE+ZLi+Yz9gn7Jk43h1TUz2VgYv+5LyP+DX5Kw
wmZf4mplOJxXZESOxAn4Jf3OxjFBfmpoDPCV6hmME/BLdi0+UPMxSgsXHfZX
m0wS9DMfOauknwlgw/Zbf5/hh3/3M1e4DKXcG8vCwe3+72WWpAj4mR0NqWL1
nwmwNllsF12YJOBnXs66uahSieJbZsy225EJAn7m82whF59rDDwMeSN7QCte
wM/cKDHR+91BBtoTy//UTuYJ+JnGT/QWXgtmwF/9R+xMFlfAz/SbdHICq5GB
qVecW+a7C/qZK3ZE1Hw6SvHNaj+jiXWCfuahlqSCNyEUn3g9xUx6h6CfWXNd
xIkzgY3BRetf9EwX9DNnTpzyWWGRMiRHl5GO3wT9TGvzFKevW9XwJE71huRH
QT/z15MPYduCtKAfPZMbR+UDfd6gyfTxf+jPRkZWlsu31n+fN1hGWtTEjDIx
Wyvg2tjFKQLzhrpdGZXbPlH4k3RDOkk/SWDeYGHA4c1iUf125dP2CREJAvMG
b2t5obAsBtQC87pj1eIF5g0Ji2UUb+2n+uVFjcbyCTyBecMCpSivZVT9yvUG
D7bP4wrMG6Qr7It86hiorvA72bhNcN4w4sW8+fYQgdxNxOPwF4LzhvEH85Mc
TzBR8GXlqa1bBOcNvBOm5qHj2RAdniUiM1Vw3lC06WHLmgXKqA412bC6W3De
sEVBdK7cZjVE3pnzsbRVcN5w2+eGh/ExLShuWWI+gcqf/3seeJM/D6TX57/N
A+n1SZ8H0uuTPg+k12c/fx4oyZ8H0uuTPg+k16czfx4Ywp8H0uvzHH8euIE/
D6TXpxN/HjifPw+k12cUfx7oxJ8H0uuTPg+k1+c+/jxwBn8eSK9P+jyQXp/b
+PPA6fx5IL0+6fN6On7+27yejp/0eT0dP+nzejp+0uf1dPykz+vp+Emf19Px
kz6vp+MnfV5Px0/6vJ6On/R5PR0/6fN6On7S5/V0/KTP6+n4Sd+nEeC3/7JP
Q+e39H0aOr+l79PQ+S19n4bOb+n7NHR+S9+nofNb+j4Nnd/S92no/Ja+T0Pn
t/R9Gjq/pe/T0PktfZ+Gzm/p+zR0fkvfd6PrT/q+Wx5/362fv+9G15/0fTe6
/qTvu9H153H+vtti/r4bXX/S993o+pO+77acrz/F+fqTvu+2kq8/F/H1J33f
ja4/6ftudP15lr/vlsvfd6PrT/q+G11/0vfd6PqTvu9G15/0fVS6P0TfRyX4
+6hr+PuodH+Ivo9K94fo+6h0f4i+j0r3h+j7qHR/yJy/j7qZv49K94c+8/dR
G/j7qHR/aDJ/HxX8fVS6P0TfR6X7Q2v5+6hy/H1Uuj90mL+Peo2/j0r3h2bz
91ED+fuodH+Ivo9K94fo++J0P/rf9sXp/nMAf1+c4O+L0/1m+r443V+m74vT
/WT6vvgWvn88ie8fP+Hvi1/l74vT/eKz/H3xPv6+uDrfH17B94fp++KVfD/Y
nu8H0/fF6f7vFv6+eCd/X5zu99L3xS/x/d0ivr9L3xen+7n0fXG6f0s/n0I/
v0I/n0I/j0I/r0I/f0I/n0I/b0I/j0I/X0I/f0I/T0I/b0I/P0I/X0I/L0I/
T0I/H0I/P0I/D0I/L0I//0E/H0I/70E/D0I/30E//0E/z0E/7+FSJBrmMY6N
JJN3p+bs/0dvbuTwdrJx4tzL6E1PUpFp/mxwriMbx16eM/F4kIq/nhmqrHI2
mNI3ZjXJpSHs7fqH8c+YCHzr5XihIBmpKy4f1JdnoT187aTmpSlwVhNN8RZn
oevS496fGikwiG176e/IgoXUtsvhj1LwXXKVZxelZ/b/CXsb/iURCyVv36wj
mDh0+ffpE1uT8MAye4vGFCZUJzU92bQqCTOvvnly0ZqJE0kZ+sb/8LGYLcp6
dgQ2Cad6mvsmoLX0eHTlMQJ7VQ+mLGlMgIqhl+pBLwKflxSEOTxMwNtok4tT
eAR8sz+P6Cslwllj2Y5f4gS+/5Urk0E8CvEp1GUeAb+GMS1qcfEwDF/7a5cU
AenTOyJrDsXDquhEUAqlr27OXbRe/FU8kpqq/9iNMvDhYdjo4qU8ZCz/fDlD
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
7ccvpv14cf477rf70H78RtqPL6P9d+6/8d9xv12R9uOZtB+P++94/gzPm+F5
NHH5Mzxv1knn0T7SeTRx+TM8b/avPJounUcTlz/D82aqdB7tDZ1HE5c/w/Nm
2nQeLZ7Oo4nLn+F5MzyPJi5/hufN5Og8WgydRxOXP8PzZpl0Hq2PzqOJy5/h
eTM8jyYuf4bnzXbRebQrdB5NXP4Mz5vheTRx+TM8b4bn0cTlz/C82Sg6j/aY
zqOJy5/heTM8j4bnz/D8NZ63xvPY4vLXeN4az2OLy1/jeWs8jy0uf43nrfE8
trj89UI6bz2RzlvjeWxx+Ws8b43nscXlrzXovDXQeWs8jy0uf43nrfE8trj8
tROdt75F563xPLYanb8ervD/nL9WpPPWF+i8NZ7Hvk7nr63+Tf4az1vjeWxx
+ev5dN56LZ23xvPY4vLXeN4az2OLy1+X03nrn3TeGs9j4/nrj86Ct+qPWHCB
XTdLd3o8lDXtGFvgyoTF8m896yrjYMQhDZmPGxgQaXdOv/xZDKrnWqf5CSQs
G56Se2uOAH5GaxjwEN4z2f1np00jHxgnjeN/o3pbs/eIx5QKHoyMOP6gTIWE
w47RA8M+cOHITWbX2ACEFynTWft1udCza98kNyMGJKiM3Z16iQNLH3ls6LJn
wtE0kxIfYw6EpREVit0sWMmIO1zfR8GlnFeFUSs0IKde+9OjlxQYbdSOXBWn
DUcuzSpe9ZoCyZNEt/tSPfCUa1JaO0hBlauSx4lbLNj+OXzme5l4yB470s7F
nAlcr9iJA5fj4Fe4scPDBQyIGuB9WnUtBnhF4a3VqF9f93HGp40SwLG3kikK
qB83HnXb4pbGhzHMoFkrEB4clmawN+siD2IOzq7k/yBgj3HWmA03uKCX5ln1
dg0J99LrJKN7OZDR0VTkPhLNi3GTS6/uQPdnkc7o/ilMuFtsRbKGEH7JjbI6
kcmCyY9eag/lou9z/M3IN/3qoP/1hJYKm4JkBaeX2cu04aRF+7h9URQEz1Tf
qDUWzVeoYJXcpGDyhdtSXgksCA9tN5o3iObjXv0ub10mtOqdkPMMjAO494lT
OZMBO3a0RQ0FxMAT/9mNM7eSEFkoFX70bTScm8EseNlJQNBhldfVgXxoU+Tt
2pdPALtpooryTh5Ur1l6rA3h4YOXW/K++nMhzz1du1kdzaPAtmmHyjmwJqZg
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
TmfTZTU+vJwdfF7rvjpEbI6UN1Wg4AH2vrQHve5LnqYQcPeJUcsYBT68COy8
tOqyOuiMmcO8iviuhMv/+b68Hflueb2XEP7oaPtkM4YPKzYXZJ2IVAeZwA6m
82c2uNDvSyyl35e461S1pCTiZ+s3Hy3bMYoPNpk3rSLOqIPvyxoVyzY2HMbe
l/m3///ffv6/vT5/e/3/9v7i9WVH1082XT8Z2PuWhlPjLn43IKHkoO997XI+
8EzCPr7J1YDJ+3a6FSC8H4W9z+fZ9pfy0i+ZMP3Txbk11kJgZyUnaCN8GNuc
1GnzjQsz/yxL4r8hgXFA4uzOEg6YhS2zuoj63Vvio/OblVxopJ83fEk/b2iv
njzw6aUuTBSQ0gZoX+ldbupcf5cJ845lfzcwRvjk18839s0EeI5eMmCK+Lq+
xqibd5NJ0BoV1Jx/hgMRzQuzT6qRkG/DHRqYhPa17f/5PPGfqcXvzl7WhZ6u
CJWtsRT4uhtJvkhiAuPFxqTz2kKYXjn8Z3URwrMvpAbsIrlwyc9gfjDa388g
S7t9Mwd2mv3Y7DCShFlxpYcE7Rw4Q58X0EefF2DctT/F20sXZAcPphpuQ3jP
xdzUg8eEnA1kXaOqEAIdiu8fvEJATO6elcsPcOHuzdCHya4k5C210IhewIG6
zRoqra0EFPfdrN/3gAPL6fNA5OjzQHo3zuiz3KALNqer9k4zosBzRKmt0Vkm
fP+zx2bWFCHkFy2bMfYCATdjWV8+rOPC/a7F9t0rSchsKlLkqHBghundmt4n
BBxVPvvFGOHnW9h5P5+0jQxTQRfuvo4Mu6KIrv/uF4VyQUyw+lahslpeCJ1n
d9ueOkVA1sM/fXLLufDKOA5MFiL89ZJ5M3UcBxr/tGTvuUcgvq8ztYHHgc/0
eV4H6fO8PjziVW7V1YVf/txR/7wvU3KSV+MA2k8jryvccEf7qYQ7urL4BAEq
j7eMTTHhQnPz+5fuqB4vHbkaUSSB8NWq0a+18gjgWaX+MbjAgWjsvL71NSZ3
Vqjpwgn+hwYf1I//7f//v319/tv3979dn3/bXzvo/lL9f9lf/+358N+eb+V7
bLP+8e/ettw6FCgTA7m/31bXuSE8kWrx7trNaJF5rORzz9E6nQkuY5RKbbso
iDB6uembqRpYDvVLtd2hxM7rRz1/Lve8IGHf8tUC3RYBGG/wz5+wnIQrGzwX
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
   "], {{
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwlk01IVGEYhc8t7F6vOuNtqOjXikoZKsoCpY39UNYiAmlTLpRBCKEyi5iC
olwUuGgxkekUpiVNEYVRjLm3H8tSS0rLfty1KRsX7gp6Lu/i8p7v3POe93zf
/e6qRFPN8TmSanjm8vwslg7HpGeuFJ8nJSPSDl8qjUq5POlVgdThSa1F0j9H
2glXheZ9vlQPfwl+Cv5lIC3j3TV6J8Abwb3gD+C76DPgWWYlmPWHWS301dE/
QK/gKnlXxnoQ/Qp629FnIzZvCLw4zMK7NnA92arJurtQ+juf3PTm8CzmOYZv
uWMeQ+hvok+y0Rfgq+Bt9BbRO1NgeV/Dd8B77CdFbwWHUwJ3nUxVcGvQ5JjR
Q5bfVDGrm/4M6zF093zb6yT4KXiUuo51D3gl9R3rW+AzeKXxb8Z/NfwI/G34
L9RNrJ+Av4LLwVnwZXK2MCfNHu8wa22e6S+yx9P4HHWs7xs9ffDrwZ/Bj8Hb
mdWG5iCz+tGfBbc6tu8TeG1B8ymwnofgKWZ08e4X2xsObM/d8HXUPeh/4BcH
j/PuEXwZ+CP4gW+5KtEMoJnAo5FZC5h1herCLSHDcs7yCPo02umI1X2c/3e4
reB+fJrRXyDrAXrj6FOBfeMN1E7WSbzG0CboX4R+V8wy3Wc9GLGss77Nj7qW
Ya9rvqFnLd/uZMw8NlO78G3Af3/U7v3SQjv7GXS9+PWBa6n5eE5Sz7EuIfPz
8HuyTsEr9AJnyXaeOaXc34xj/01j+M18+z/aPftHwn9oxLP/KLyn1a7d1beB
3YlO9An4cfJMY/8msDt0I7xXnp1peJ4VZGyIWcZTUdtHE/kXwh0KLOt/GOaE
sg==
         "]], PolygonBox[CompressedData["
1:eJxEnXe4VDXXxc+0e6ecmbkz14KISgeRJigWEBEQEcEuCChNLIAiAioCIhYQ
K6iIioqCFUUFFStWxN57r9iwF8Tut36svM/3xzzJzt7ZKXNOkpPsrN1k1PEH
jk9GUfRtNYrSCl+qiaJL8lH0osJLxehcG0Ufiu6k8HbRzxSj6IJSFB2rtIWS
uUy/MYovUHi2+HconCb6doUXiH5e8pdL/iylPaC0DtLznuLtFd4mfoO6KMqp
7PGiHxK9k8JPxO+i8A7Rsfj/VKKou+gVogui/xa9q+jlov9V/MD6KFqjMtYp
33Mqb4Hipyt+j8orSf4/yfSR/F2Sv0tpM8S7U+GForcQP6/yJ4r/sOhNFB8k
fWulo20hip6iHZJ/kn4Rv6HkC5I5SfKPiN5adFn0bNGrRd+rcA/lu0fhS6K3
Er8k/hmiHxfdSHRR9AzRj4l+SfW9RmUtUBmvqox68Qaq/E+Vtq30NJf8pkpb
JPlnJN9C9Gail4h+VvQ3yv+NZLtL9k6lPScd86TrWYXzxW8s+YrkLxRvjehb
Fe4s2VsUPi/6Ef43yT+s8CLRqxWeK/pxhRfT/8p7iOrztsrYRPlaSt/mSruR
ssRvpvBVyTdVeIvod1SfVZJ9Q2ktldZE8lXJX6z4k+JvI7pO9LminxD9ruQf
lvzbkm/Df65fV5Vzu8IXxL9G9ThevEUKzxF9icKjRF+scDbtUThF9C0Kzxfd
R/pvkv4Xs+q3lOpJ21X/fmWVG+u/U1m9FP+X/pLMvfollH6PwrLkb1X4O/2j
MBa9l/TdLB2vit5MdF/RS0W/KXpz0bcrPk/6B0pna+m5TfRc0QeLbiH6CMk9
Ln2jFP6p+t2kcL3oGxUWlP9BhWnJPaCwTnRe9dtDef+iD5TWT+XdKp0fKr6F
+PuIXib6U9ENRe8t+hbR74puILqX6OtFPy66Krq36BtEPym6XvQjCmtV3sMK
K6K/VD8fqbK+4L1U/T5TOEr0pwrfFf2z/p9/VadjlLaO/1y//RV/VuHr4q8X
P6v6nqq0Gun8QfQGyQ8U/apkvhe9XvRBol8UPUkyLyo+UeG/yv+D0saJ/l7h
B6L/U3iy6H8ZB0QPl9wjoocp/IOBSrqaq7xVShuitJR+UxVPKvxU/EEK7xc9
UOEG0Ruk5wTRvyn8SPRfCieL/lPhx6J/UThe9M+Mc6LT0t9R+l9X2lT0i24v
+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
s5ZyehPxPwl80luJ/jrwL5X+OexPc76X9L51W/F/zHr/eo740zg/IJ/47yvc
WvwPsrZ3qKq8QSrvW9GNUraLaCb+2qztI0hvI/q7wD9b+qZWTLdgvlX+Q5W/
XewyZot/SsX1a5a0XcVWsculPPQ2j90f6P9Y/8cIxgfVf0rS56SzxT8mnJdy
DjlT9IhwHtlE5c1QeacrbWTO56FniZ6seHf25qTvkLx5I5PWc7ZkxwR9Q/S8
nEmb807jnPcc8Y8N572vKP9gxkbRY5I+FxoofutwPrRA7TuH+Y7zI743FW+u
/3OidO6Yt55zJX9c0Mc57PmiJ4TzWMILYuuHPlnPyaF5y4+TvqbSc5rac5Zk
jlTaGSrvRM5T+L8ZL8XfR/zneTeUf574Z7LnI9mdkz6X20t5N/nf+Rz15Fwq
nFeS3lf0poHPuVw/0Q3C+dws6Wql9pyCnU/e52wDOJcL522E+4reKtCXqPzZ
FdPdma/YW1L99oxdpwbYvohuzB5pyuXsI94WoTzSDxDdJPC3kPxYxkvRbVIO
D479fEPPV3lnVyzfQ+U9zZwj/jNZ2+ecJV5L1X+K9PTkDEDhYOnrKJn1knmC
eV/xNVnb9/zF3lXF9CbSVyf5AUrbMnafY/dTil0O+meo/BMqLq+a9P9QFf+F
8H+cJv7EiulNk7aj2kT8l7O2p9oYin4l0NhBdBD9a9b2EDOVf1LF/M2V/xzR
0yuu+7ZJ21FtLvnXs7anOl38yZxvMD4kbVfVUPy3s7avKqs9/dWeBrFl5kr+
DM5b1H9dJP+cnveBeT9rR4h+SvTBrBdED0/armGy8u6fs31Df4UTRQ/I2f5h
K+mfKP3HKm1Pzl+Vf9+84wexX6H37TTJ7J93noaKj5P8oNjv0GrJH8j3pOJD
JX+owmniDVa4U8rn/dPKToe+X/ID+H7luUnaTmKc5HvnbC+BncR40X1ztpc4
VOXPlI4D+H7MuR0nxo7TnoMZd2KXj/0DdhAnx06H7sE4ELs87CUeUvn78b0p
+hDmX+mepPodHzuNuWVQWFswxxAn7TnNw48k/L3Dt+yToh9IOE4a3z583/7O
uFbymu4VybyQ8fqNddw0zTdDs6ZJfyxhGWRZB54aee9geFjLsabDjq0Q+7nn
ee8h+ZdVz3sU7xTZjuWE2P8r/yf2M+9rvuvOOKP57KWMdbIvMT2ybmjSVydc
l6FhbmSOxE7mTOkbnbO9DOfmh4numPP5OeHhorcPdAuVM1v9d4XSTue/0O8S
xU/J2Z7lTZU7NG8aQ9vXRQ9hv170sUnbzVwq+ek528+8K/7heeuamLTdy5Xi
n5Wz/QvhVaJnBRo7gMWiz8/ZHoB5ZF5s/cwn2NVcHLte1Odt6T+M/XvRE6T/
MD1fs9nPzVvnHP2ukfw5Odv3DBP/bPGH552G3c+i2HLwz9O72Frj1XT2OPO2
G7pc/Jk52w8dpnBG7Pdx55TtDoaL3iFn+wPsFAaLbpuzvcKW2BarP4corV3O
dj7HxH6OeX4v0/97bsW8PknrGSH+jkHfEM1H/fKm903abmKU+DvnbD9xr9rf
n+9N0fslbb9zatn1pH5rxD8o7/f3cPGbiz9L/AWx+ww9Ryi+S9CHvccJ4ncT
3THl8KjY+qHvlr598pbvz3gf9p/Yhzol8rl5J8n/nvX5OXYlO4uOcrYvOUC/
66lrauPxS3RljWnSvxZ9hP6fNiWv6QYFWWTmqKyra2w/ewNzEGuhyDLIsg5U
FaJnQ/7rgn3g1cE+YCZza2T7WmxjDhe9PrJ9H/ZCQxj7I8dvCnsnS0NZ1wRb
3cU1lkMGOyORG3XdGmyHsLe5O7a90LDUxi2t6K7Y9jhDUxvNr6LrcrYxx7b8
ihq3gzIOTNleHftJbBlSasyGyPaQnOW3Er1lwnHSsCXgfP9L6e9aCmegkrku
2AtcI30tI9sNYLOJbQA2Atg3s5+wnWS3SThOGrYU7DG0y/j8lHPU1srfqtY0
6U0kf02wVzlD/M0j81qFvQb2HOaJvkF1ukjhnpLpkPH5EOdE20aOb1frs1bO
jKgzdecct01kHjLka5ZwPakj+yCtIvcdfbiv6C9Er1WnjWJ9r7TpSdv7c97/
q9K/imw/jv3Aj6LXRua9FM7mOaN/rcb2BxvE/yZy/LVgm4BNAnrIgx2BXtPo
z7Ttc7DT0TCx0f4UmvTvI8ffCrY274Synwu2CtgsfMLYW7JNzT9pl0uZ2EFo
mI9eLpr/XrBXfUX09iXbpWKPSh7yYpezieR56LFvwc5l08j9Qv/so5Dt3CNS
tkfDLk3BxvsM2LKNEP17ZHuteXwLMv4obUnONul8K/HNRPrNsfsX/gKFt4i+
XOFePCPKf5Hy36q0K5T2qeo3Mu//f6p0fCH6iLx5M0QvVHibZK9S2JdnQvkv
Vv7blXY1Y7F+yxW/VuHeKYcrRC8ONHW/I9jeYYM3Qv1zrnQcmbcMdacN/fh2
Uvu+Uvmj89Y9M+l0+D+xbyD+33pJu0j/P1nbK/Ku8M5sq37dCnuQot8v7nlw
vwM7S2yWsa3ExrJhsIfELnIb6dsmY/sT7FCaRLaPho9cSfq2ytjeErvLxpHj
2DhjW4mNZaHW+dFTn/BY8FmwxcK+qVnG9irYrTRT/iYZ29tgd9M0sj0zNOmb
JqybMii3krBuysC2BxuZL7DJK1knut8qmsaOGvtpdKETWyNsemg7fdBAsnHC
baON2G5iw4m94YVljwO8/8wDnVXGH2E+OJVvY704J0quq/6XzZiLJd8z9hoY
u9EdY/8v/B9/izej4v9n+6TnkV3ET4T55HzNn6dVTHcQf1PGXuVJi26acthN
8plAs65YEvv7lvXFBco/s2J+p6TPyrhjw9kYZ2bYOXaXfDZne8cLxTtdMjnR
OyRth7qH+HHO9qjI7R6bj/ySYI91NWsrVX9xsNe9kLV6ZHty7Adz6s9/RL8v
freS7ylxP+n6YA9yq+Tbit85Y/sT7FC2i3y/CFuRHZW+rf6PnRQ+z3yosH1k
WxfuGGE7go3KrqxheYcYm8XfvdY06e0TPpvkjhJnlZxRfhW7PpRJ2d30e1Hx
O1k7Kn/XWpdHudspf69a85HriD2AwpdE3y357SW/V61p0jslfPZZrPPZK2eg
b6i9O5Z8T4D7AbSNNmLrgs1Li4zt5bCbax7ZbvLLYEuO/eTnsfNj87Zpxv1K
/2Kn2SBy/Jtg24nNZpyxPRh2YVtE1oXOGqX/KfqHGvORY8Ag/kOw/cSGrJyx
/Rx2dA0jx38JtmHYiFUzth/EjnBL8d9W+3Yu+Z4F9yvWsnYsWQZZ6kzdsdtr
FFkXOiknhf1e0fLcO+C+AWsvznA4u+GMju8avm/YV5samYcM67RVwR6FO2rY
gmATsr/S35b+J1XerpHtNT/SRNSL70LqWLTtytPid+V5jc0jD3mx9/xQ8j2V
drTk18WOv8UcLf7xtbZ7OVDxPir/YIXvip6ocDfpm1RrmvS+7JeLfk/0INH7
cJ4q/cerzktFXy16sML3mcNVn90j27pxhw1bOGzePlf8EM5oJXeM5KfVWp58
AxLWi/7nlb+78n+d8x0t7matYF2lsePois90ONvhnOSvcDbCecmv0j9a/Euk
52zpu1HyR1ZsU4Ntzfo605eKf07CtiLf1NoWBJuQG8rOT3ou2KpwZwnbFWxW
0MMdImxJsFm5SfJHVbyHyl4qdduK+1gl15HzUeIbwnnpFyp/IGcSKn+syl+q
/FvX+8ynkrZ90EEl3xPiPB3djeqdRhm/K/8xnIEo/1zl/0X0EaIvEj0rYds/
7hhiC4gNILZQm9bZtgybKGxTmtbZdgUblXHK97n0fqL+7hv5/t+nel72Zo0q
/nHif8EcJ/7e4n8Xm0ce8mI70qzOtiTYkFyp31rxxoh3OPY3ku9Xsg50cZ/w
s6rTruP/FH2wdHwl/lzx1wb6BMWPVP7T6GvxhoreL2E57hRyl/A2+p81ttKO
F/8I8W9R/+1D/VTffqrvpWU/bzxHX6f8zPPsP6H4LpH1ov8VvvWhsXtg7cNY
mrB9+geq7+7SuZ94B9XabqS3+DsnbE/CHRlsPbA5uaFo25IHpG8H1nfYMUi+
v+R7JBxCPy7+zuL3FP2K6PtEdxZ9Y9G2iatE78j3U63tFPtIbteEbdewyca2
Ehu2fkp/Q/xHJb9TZFvMLetsu4hN5vBa85HrnnC7aN/Dku8S2R4Sm29sY7CB
xFZxkzrbumEDd1DFdzC5e7mU7xD15zb1PtOv1/N6nPiNRQ8q+ZznO8kejs2f
ypmi8obzPIq/f8l2XV+qfZ+VbEfFM/i95IdhEyj5qQnblrwWbD+wAbm6bH2c
G2ALck3ZOtGFrRj2Leh+K9iXLCj7/Von/rcp248dULKdL/Zq14o/omIbNz7o
FpVdPuVi27KYvcx624Alxb9F9RtVsY0ctnI/iR4p+nzFZyZsJ/ZRsEXBXgzd
DetdJmV8xvpV/VKv+aA26fPkJXqesnovHhXvGsa32Otq1s98H89V3sl5n5lw
7/TovM9JWPOzLmZ9zNr/88j3oMeKf3n4Zr2SesZex7N+J31c3t+y8PcJ3x/Q
n0W+X30h9mThG36/8E3Pt/yXke/BTlD+a8M3dl/Jj5d8u7zPxEk/Ie9vb/jc
+5sk+vrwfY/e8XnrQ/+B4Xsa+XWR7UK4g4ltCfYh2Dpx5xPbI2ycrmKvpOJ0
bKH+UP+P4Qxc/X9RwrYd3MnEdgMbjr/EH4e9mviXJmxbUpu1rQc2JcvK5pOO
7cmfkh8r+hrJXyL5W8um0YvtyG3s1VZ8xshZ4991pq+T/GUJn3fy7JfD+eId
kh9f8RkhZ4XXlT0+M49g+wiviZ6PQ0uWub3sd4h3Z8twllkIZ5ucaXJeh2x9
OH/8ts79cYbKPynh55I7tNguYsO4UPo2r7dN168p291x5w9bL+zvvlT+QZwJ
K/+x2DOyVyz6W8n9mHJ8U+XvX3LaNznfMedu+f0KLys7P+nfp/ye3cWaUvyV
Cr8tOi/3UrmPeoXkB1dsQ4kt5TqVP0T0DJU/MWG7s9XBdgb7s5/D+3ah+GeI
fyV78fW2IfwtZfvGASXfe8SeEd2b1TuNMr5R/qFKm6n8kxOeh5iPPlLevdif
UL7PRB+t9KEJ29pzRx7be2zusQ3B5gXbDmw8sFPBZgbbE2xU7gz2HB31X50g
fQ9nbB+GndikyPY/2Ho8oPTbpX/3rPnI3ZmwLfO0rG2bsWl+PGN7LOyyToxs
jzWsZLse7Hk6hzrcJ7llfB9mbJ+Gndpkya/KuM7YtUwU3StrPnJ3JxwnDdsx
bNp+i62fMh8PdaeO2M5gg7Yi2Oe0l74JkfsC/ZSznPcjnI9zTj5W/PvDeHCS
5C/lez1jew7sOi6B5qyw5DR4tXrvO7IfLP4V4scl87kXz3147osztrB592vC
cdKwvWG8SSq9vdIas4cT+WyJO+ecNXHG9FHG9vPY0Z/F9gt7DyXf4+X+Lv8N
/xG2OdjjrM5aH3p/U3kZhR1ET1X+y9k/y5om/Y+Ez764887ZAGdg/3B2WbKN
zL8Z24sNLdnuC3uv5Rnbo2GXdmxkOxLudGPLgU1HUrKjSr43zH3hu4P9xj6S
P03yr2VsP4IdyYzI94+x7XiDfTnV552M7fGxyz898n13aNJfSDhOGrb72Ozz
7PEMfsC6Q/y7gr1gN+U/mU+oks9TwBEAP2BlsH8ZIP5M8d/L2N4fu/8zIsdP
zvruAXcA0It+7PbPjMxDhnwvJWwvhv3H7aKXJNwX9Mlbop8L9pnDS7aDw/6t
Wdb9Rz9en7C9HM8fz+E1CcdJw3YDmw30oh87k3GR45SJrUeToAud2JZgc3Jn
xvaY2GUeF9l+DZr0G9nfydgeELvA48XfELt+2JQ+kfGPOHamJ0X+b/iPsMU5
LuhCJ7Zw2DCuV/4hJdsQ3p2xPRs0dnLYq5EGDzvD8dJXLPn5ArcBvAaeMZ41
7LLmR7bduitrWzBsuP7CFqBkG5Pv0VUyzb1x7otjR8KddWxDsBH5MWP7EOxE
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
XNXjDOML/y19OCzn/7hVxfzTYvuwoW9nhmfgZclnVdaMsvuaPqeep4s/IdSX
fPilQRc6Tw9toa0jmaOl/3n2+GL7lMFfDTTzGPPXCZI9k/dXvCOV58W0adJf
idwX9BX/Hf5+4CFzlOjROdeTZ3ZiqC/l4AcHXejMqf6nlS1LnlrRE0X3Zu2U
tL+cF1SfWbFx1ghfUv6jeVdFr2EdIPmzY/vsGRJo6kcZpME7Jmd/PuC3vVT1
PMZ4el5sHLdjxRsvmdmiX05bljzgzSGPHLhw8JCZJL2vRg6hqQt1ek38c3nH
lf5a5Dhp45LGr5ui9PNjl0WZQ1XfM9jb4x1S2ovM1dgHK21ObDw70oiDg4c8
PLDuxiRdDmUcy1gm+izxLmfOo+1Ke0tyc8WfKrk3VZ8LFD+xxnnBt9uIh4d9
Z9l+huAhc4rC1yOvG/iG7x6+r5g7+Ablv+E/OiXIT+BdUtqFsf0YjVd8Ys5t
fSNtHjLESaMf3ogczhM9LdDghb9S9TzJfDEt8GkLbZoX8tJ3+EOiXbSPsigT
f0ovVz1PMj8+Wvbzw5qc9Tn9/GrafUWfvR+7/08M7b0oNk75BPo26L9EaaeG
/pup8HLRM8SbnDQPGcrGfwP+sF6tuo+Yb+bH9os1UfypOeshzxTmMqXNEH1p
bB4y76VNk/525Dhpk8Sbzvil9AVKO03hW5HjpFHfU1nDVlw+5YLB3gH8U+ak
2D62CPHrQ91pQ17PyqyydVMG/n+QZ05mfv6/mu47TpqyyuJ4T/eEnp7pTBBB
xOyaEwZcASXrIsmECdfEmgmKCVdERUCJgkqSKCpZBV0RA6AiKApKjiLBBAoi
EhZl73dO7R/v5+2nq7q6OkzX89x7zu9cP5vX63VfbX3DeznM2DHkA11ufbSc
HCB5Ppfp9y8np8f/cnt2q333XMyxHPMDNd6jxnvWcY5Yzjb7XF3bDm5ek9fn
f2OfhdcoD8jxzQHMV9SbzW2sma2dD2veO+/lJ+oxN842x6/7rmnlXL8sX2iY
c35DP7dlGX2o+Twc4xPN+2+7/og+yl5+3+r+I+v2p+r2B9s5tudw230/bd4f
+9j3i818TFaM3B3zM5k98nhkycgeki+Es46FLi/pCnrY5eQo7V/HOrwe/zHf
/cVsO7r2/+ww++xQ2z5Xt4/1+mv7DcsZ71XPd535YW3fd5jX7/213811vh+t
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
9NRpM2ho7u9Go0ErQDOgx69HeFA/2gUaAzV9eiOaXRpbmiG9Wj1b2eT6uHqj
eqRrLKav/M1J9CN0HvQd352kfq/voN+gN6pHqgeqBqo3qEeoh6cGudLr6yfb
Ww/L2s8aUDYvXeCh/fQi9BjUWNRy1XTVptWr1Y7VkGU3qzmrHatRy05QQ9Zr
0nPSg1Bj0WfRY9Fb0W9RW1ZDVjtWj1bLVdNVU7VmVJtSo1KzUZs6rJ9aiDW+
tb+1pDWltaz1rbW0moOsX2tqtT01PlkL6npqrWquarTWfNby1uzW6tb3amVq
ZmpramjW0tbU1pzWpubjNy0nm1AmovnzW/rJPpSBaD2wYz/ZjjIen9zMV+QF
yg18SnP9lUX6xmZ8Zh3vTXX764tZm1hjyTK3DrF+eHs/2ZQyKp/eXM/lU8qW
xFLFVN1vIQxW6w9Bt7Lgbmz2/456V+17+mLWftaA5ujWss8aZO4in00227Nr
fHSN53nlFrP9qBp3avztxWw3l5H1JofPeuaW5WThycSzfrx1OVliMsWeO8hc
Rd6X3C/rG1l9soJkBr14EGY+Vv5v6vgvGGQuIRtI1tB6g8xFZPsc3Yxl1snd
+kmzfpIRIhtEho71kcw92SMySKyPZJLJrpFh86JB5ibyJORKrD9I5pHsABkC
GwySBSTvRyab85FBJ2fux4vJYhtOM8fAd5dFMZpmDoLf7/gyu+Ro/bz233CQ
DCDZP79ezPtxrPe7xt+v8UsGyazAGsccxwofTzMnwa/dZJDMNux2DPeNBsnk
wAJfYYIPkrEhW+PqOt6mg2QzYKtjrGMBT6eZk/DPY8PiQ/rO8MPjRGLYY9fj
RX6gH5Y8RjkG2+aDMPJx8W+yPhyEsY7tjPGMW4mhi3OLX4m/ueo0XHg8+C0G
Yahju2K84mGuNg3PGPP4tTW/Wn0ajjB+MBY0HqY5EF7yy5v5BhYjTqP+vkxh
GUayjD5Zj/9j3bf6IHocvPI1puEwY9q+apD5AxYJjsm2zXwMCw2H/D/r8WtO
w53Fm319bf+GOVTd7vXCt1prGq4knuQ7av9HTsNZxVfFA1tnGu453jn+zKOm
4fTh8zme+cQKT0ddf5BrGS8Pr847B/Go8pE+vp7vlYPMX7BOcGG2H2T+goWD
k2O9e89y2D8YQNa32C5YLxg975NnOQ0HDv/N8/G084E/wfpCXuk03Fq82jcM
Mn/h1+XbfesgWokr/Y3KRPD7VOPLsSya9fK9y/Hm8+i/aZD5Hf/+vzePd63n
leXDVU9+5jT9VD1b618MLF4uni6v31yB14ovy/qZ15q3isfK+X2ztp9d9y01
6/d/LIedgKGA//WIaXiZGJvW4w8sx9vJ42n9fv9yvKc8qDt6v+p4N9f+j+xl
bG5zV+MF9Xq+5fOq7ePavvsgGkvayi160Rv82zQ6Nfq0nQfxWPFWPadZv/OA
8qbwqLx3kLkGvxzfHC3c46e5ptNf2c6Tybf31F604o+dZg5CT73LIJ4qvql1
a/uug3hmaJtpnD84iHadtpHG0fpIJtgTWskA81t21iDZZX7TdhrE60b7TgP/
fteLfrSxNLIfGMRjwlvywnq+3QbR5NP20fjR5j5umjkNPa7+/5Om0XfRdNHi
P2aaORV9s3oOjy7vEA/RxweZH+hd0wl8ZBCNMG0QjdBHB9Ho0jLRNNHSPWGa
OQ89GC3VE6eZs9DXHFzP/+RpdG+0bnsMMh/Ry9a3/7w8yWl0erR4+h3yZ/UN
9aQ+NIiGnnb+JfV6PzyIxp22fSP1hEE8h7wLPAz6q0+dRvdB7/HJQeYXeof6
lIfV9qdPowuiB9Ivfdo0uiOaH/Ul7C3sAgwDf1/m8rzvfPHqRfcthw2G2fa5
QeojN9fH9Nfafmwd79nT9Pn199WDnzNNX1c/Vz1E5ni9dSuZ6eqX607TN9Uv
/VqNnzdNLrg88P1q/wtr2956E/MZ31jb7tHj7CUfWR65OYC8VtnAv6rbX2gn
I1g2sUxKWZSyhb8qm2uaPqte6v7N8Q+fTz1HjrJ6477t5CnLKpevbE4ls/xo
deS6fV/dfl8vzyeTWN7wF5p60ZH9lZ+L1ss6yVlX/5ENL29d3eYX/eRfq998
qRkf2I7XXj3omBr3aJfq8YcOUh+SBy0X2v43Lye/WY7zMbKpptFF0EOcWO/H
BtNcw+XHev3qQ/KT5SirF3lv62ErGemy3uXBy3WU5yiv/oXTzLHkGe87yHxP
PVxdXPa5vHVzKhnoctfVjw9qJ3/93Nq+/jRzrFVr+xGD1J8Pru0/nk/2qvmO
vFW5q2c0n886rWSEnt7MT57SSoarrFL1KlmNMkvVr5zrw1rJcLyyjvnmfvLc
5br/os7/xdPUpL9Uz3lFnc/GNf51P3mqX2l+f+QOyhI+sZmvPb6VjF9ZrjJd
5bPKYjX22KPayXj9djNfkn0o33CvQebzeof6kMc28z35ynKWPzPIekWvSt9Q
Hqy8YzU1mbWyi2XiybGTf6zepncm21uGsbnocYNkRZuTHt/M9x7XSmb0xbSw
09T0D2s3uarLyV2TdSp7VN6qGpwMUtmjV9TtE9rJIP0N7d40Nf+j28milUkr
X1fO7mW1fbNpei7HtJMVbf4q/1kO9AX9rMmsxXi1HF+NUG1QjumZzfxVXqbc
zJ/V57HhNH+j8r8932/q9pfbycC9Fo9umh7DV+u+q2r/TabZR77xcCE1TrVN
uaXX0D5O06M4sZ2s1C2meY0yU19X44dNw3HCb8IWxiNW11LPUjv6az8sYjUk
uZcyoOQyyb/8bjP/lzUpP/C8Zj4rO0f+29nN5/fEVjIQ5RzKmJItJatQ1qQa
qdqo7EfZjC+v57+6n4xGWVbX1O1T2sm0MlYjVRuVa7VKvb7tav/f1n3fbSfL
a6tpHiNfy/Ed6+R2Mi1vqv23nqYHc2rd97sabzNND+a0drLyzM/l58nR+1Ez
v5ePKSdTVpsaqNqnnDhZkPIb1VjlO8qeVCuVlygb8GeD9FrOaidfrV/Pt23t
f33d9812sr3UsNWu5Yzt0DzGvtYAarX2lTf256Y+ar6/USsZVbJV9CYvaif/
5OLm/ZUtKe9KVhbmFk6VbC7nJ8NCdoWMTNlWK7XZmWRcnd/8fTy9lfxB22WA
yP54oKnXWk9s3ErmmeOrzcrDk8l1UfP9kFUpv0tWtV7Wme1kVqvN+qzk7anR
Yn+ppcq3wAyTDaYHoPYvp02t96Z+ssnUfGVVWZvIp5JNJdtJb+x77WQ8yY7S
Gzunnfwl9WHrG9k1MkWuaF6/rEZ5H7I51K7l+8joMJbZISNEBog8o4dPk2Mj
Y2ZNPEC/7/WYH7XzfNZT8nVk68gGUmNXW5cL9PGmJq4Wvnpz/npz57WTuaUW
7VjygdSk1Z/9LW7XCjPN67P+klclq+raQXp157eTN3N98/ls0kreDDazWjP+
GQ6adZrH2Nd6zXYMZ8xm7ObfNt+PTVvho/k8MNww2LDYHo1vWK/393XMC9ph
oamxn99w2NSebcNLU4NWz7AW3LYVdttj8Azr8X+o+35Wj18Vn3Gaz/TsdrJM
1PTV8uWWyN7Rq7ywnTwTY2tBeUOygNTaHUueiZq775f1tXx0OembLaQnohci
R1C2q7xePQcZr9j76u//n21hvMLk7yS34ahh8jW8B/h1uPwyHGQz4PPf3ozx
0tXsZRXoh8pmkFlgbK0pH0F2wV8G6b9d2k5+gHWO+9y23sFie/M0df+7mvq8
td1/tpJZgKX+2mnW9dbzRw6TF+IzxLuTPSKDRObIy5v+gLXtm1vJBLFd/wD/
Hgcfp1m/9oZ2eM3Y6/IH9EX0Q7DDZX5hoGOIywKzNpbXJbcLO1/eir6DfoPe
wV/64ePrIWDb699e1Q7j/t7m+nFFO3x7262t8fyx2PVLrN1lRclakjvwtxpf
107+wEPNWN6AfsI9zfNd3k7ey/HD8NB9hvIUnL/+B9Y87j6OuXo/NvoKz3wS
vvkFy2GgyyKQd6APo/+i32Pt/V+tMNexqvGtrdkxq3kVeBZwJ/EmsUUxRvFC
cUNPGYaf7D18ays817fWeKbuv28h/Fd8VDWKnVrhhOpH39oOL/TkYfjaPtO3
tMI11l/AUsY3xj7GO+axwDvDRb6ntt/cDh9ZH+Uf/fDQ9VNcH/x2yduStXXo
MHkvfuO2bIXdjK+9wqmcDTsZb1lfSD+o1xzvlnZ47Njt+Oz6SvpJi83zY0vr
5+Ap40tb8+NRzzb9IXxnnGfvAz3Aje28H/o29/fDXtW/4Q3hEbGGxxd8Qjds
c7zUQ5v+j8/uXbXtMbPxjOgH4S/jMI+b4/2pHeYrTi+9wW3t8Hp9n/Vvr2wn
4w7nmf7g9nZ4z6s3/SK8Ndw1bGE8VzULjGGsYPxfNRTMYGxovGhrPozoVYbR
K9xRx3tGNzxlfFA1GDw6/Sjv9S6tMEDxnXeZ5nH2P3kxOn56/u/W/9tOwqDF
6sPsw0LGRMYyxTSdq/nOx6bRPPxvO6w09aj9W2GurbASl8NCwzBUm3nCMOw3
NRq65EfWY5/XiT4ZaxEzBisGWxHrXL0Hzw/Xb7aeb/dpNBEPtMMyxGvUs8I0
fFqNO7Xtodr2Qd+JOt89prlvt27YDTywvK9YFFhns7Wt1QnzzHa9H7wHjAdc
RfWvA1phsjk+Nh7+2qVNfwzTcc9WGI7YDnpQek+4ErwdtBJP7sTjwXvGg3Z6
K3403jWeN544HrbX1nt7cJ3vw8xLOtmuV8VvyRPHC6I3w2/Ga6b/olZwXise
IP0dtQrehM2b/XkCeQB5SHjR9Jz0mrZqzk8tgh+IL4i3Sa/6KZ34i/R61hjE
v7Vds10tgr+Jz+l1db6fn2afJ3XSK3Lu/HJ6RrxZelp6WXyi3xrGL8MXzK+6
wrlcDosGu3KHbljFePrY+Vg6eo56jdg52Db71uN7gzBubHe73wlzZ6m+H3tO
o7mZ6YRF94lpPmNMOpweDADef7we7CGMAj5wrCEsHTwfPUU8nA2a88Omw8jB
RVHfOqEVhgI2CkYKlha+i+8Thh4+HjbeGnU+n5tGkzTshDWkR6o3ilNjvFTb
Bp0wiLB3PjvNffg62Hx4oHqwGH3YynjGapQYy/q9rgVY7xjF2Iv/tBZrh8Fo
jMmI97jCfdTr7YcXqb+MjYmRiX+JbYl9+dE6fmsQviU2I0YjXuVXm/1tu68d
puaazfHuaofhiF2JZ+lvAsMSmxMvWU8aoxObEjMNKw1LES8Zr1lNda9WOM30
VH9vh9eMG0tvdXc7/Ni1m9eHTUwfgB2LL6tGiyGLvaMeia+Ds8OLxdPGE8aT
xQvDE8PzwvvCm673ya/NS401oJ7In8+nz+uvnsi/z8evH6ue+61WGAK2006t
3QkTwONpqx7RCbNAL3cyCFtBT/d1ze8Pdgy/vuf3t8BTz1u/Xb0fB9XrWdXf
XB1jYTE9aL1nPuSf8AfVPr+gU+7F66yWzC/ON25Mq/XYTjzQm9S++9fxBnXf
KnXfm4bpdTyuE/+sXrLn4hfXU5b9KgNWZq4sXXov/k4+783q+fYb52/Y3y7P
+SfG8cPzwW/QSz+Fv5uP/MW91KrVrPnO1UrpyfjR+ao3rO17jMNX4vtfv8Yf
H4dp4L15US+1WzVcvme11b3G8Zjxlm3ci76Gv5HvcfNeartqvHyuau+yjmUe
W/vIuv0cf9co7AEMgr3H8Svz9W6qHjSOZ9hv8ya97M9zymv60l6+P/rX/+9F
whbQ09fLxwHYsh574DSf+Vqd9K7XGsTbqIfNa0Iv96xO/AzGasn8anxrvHlf
mKavr59Pa05zflorr9n3Wf+b95BHk1eYf5gugB5gp+b5ntGJn3jXYfR8z+7E
76bfrvZLy86z9b1h/FyuQfzW9AJq4bx1PN68WPrr/E18Tvrzapm0+jxk+jKe
w7H1Z84exo/mmsP/jH1Ck0CLgGOizu876Lun3r9t83t8TCt8F+weWr/VOmH4
bDmMdnH1Tvg7ehXuc1vPwv76C3g+2Dq0FONB+Cs0FVgnNC60Lbgtv+pGc0Jr
gotEi+FvA5+JJoOeQz3/lFYYK1gytBt4LE9vxq7fvOPYMfQe6v2ntsKw+Y/6
/A+Y5hzW7IRNQ3uDH4Mjs1VzvcGSw9fZuvl8eQmwdB7u72EaDeeoE7aZfg1+
GY4ZNp5+DjYHRgdtPL083QO9Ay06fTqdAn0CLTf942adaLqNabz3a3TvevlP
GERvq6d/QDPetBN9O+3C4wfRy9Mw8CnsNYyXgqfCbXrNF3dyH28HPeeGnXg8
aCXWGcTvRjPxUjzwcXpRmCu8ZHoP/GO8Ysb0oy/oxGPmeDwj/CcrPpRh9J/r
deLh4oXjt6NLoUfZrznfTTrxD9Bz8Ehc3XhpflPjP/O41fNvMBftIQ3iL3up
HdMu0jBe2tQWrd/v4jGp8SbqQzX+Pc9qjV+oJ1/jP45TO33RXP7+P6In0Qvz
R9afzL/n9sI0+mgz3+U/XNGoDOMPcU36RSteCp4KngneCWP6FP4DWn7eEHoT
fga+hguH8WfwTV7cynaMLQwuHhK1XzVgXhSejEtqfGudz3l1Pi+Yi0/R5/P8
TvyK9C56L7TpPG20tzS4z2p6WbTENMXP7qUXuAV+9Ti9S4yrjWu8sx5WL8yp
jWq8kx5WL4y4Ta1H9HR7+Vt0fdpFT60XJhotOE34jY0WYa3avgXN+GJqWepf
m9OoLyYDe6AfwjO3mNrL40fJxKQlkOFMa05zfulitBm07TTulyxGu7GERcKT
6Peo9h/XeP1xtBbbLeT7pvfFT8hXyIvBk3Fbo2VYp/bfchxtg8xiXjD+Nrol
eiXao8cM4hejQeI1O2oaXRQ9FC8YvRB/HE/YucP48cxZ+O8/2Tx+/U78cvbn
IeMp4y3jlaCn3rwTv4IxD8UBjW+CFp8m/4bFaEEeVef7cpr8xWQGPHKUzE/a
DZnQ6mVb01wvJuNX/W0rHpTFZBDQF/FA8GrwbND20/jfuhithn7GzTX+YX2e
z63v1w71+JtqfE6ND+mkXn13ja9UK6vtZ9btjvmFa00v/a5Z1+8a717jb9a4
7Xpc49160frS/Mo/VkvlzeVvpVOjTzuj9p8ZpTe4ay9abZpt/SJ9I1p5mnn9
KH0pWnGacf1BfcIf1e3FUXphn63Hn1fjXo1/phfZy/XQ3xoPM8/yD2p7d5Te
2t69aL9pwPVn9Gn4reZq+5m1/eO9XB8+PE7mJwbXSXX7X67Btf2ddd+kxntN
o/Hv1jGmNf7MNJ6AxU7Yv3jGNJQYwM9t1h84jPjG6zbz631aYSxjW+uf41fj
WGOX4rPSUGKY4jbTD2An4zfTV1p/H9gKYxaLmh4BfxqHernO55PTeBbanWgB
1huGbUsTgBVLz4C1hz+Ltav/ja+Ls/vFbjSjtKLYwtjINJi0l7c144U69nwn
zGQs5E9Pcx8msv7zP2ufQ+p4O9Jz1Pv52XG0FZga29T4v2v8770wr+ir2jTg
ej2d6K9manw3LX8nWnOa85t76R3RmtOc39JLL+Lqeq57x+m9vGwuWnKa8vt7
6TXQhtOIP9hL70OWuExxGeOyxumxujSjNf5ZJ9p7Gvzv9tJLvaqOf0+Nr6nx
FvjZtf8//X757tf+19T2+8fpBW1Z299Z2+cn6U38uLa/q8YLNLY1/mmN31Hj
uUl6Q+fV+C01fmicWvS3/Q3UuEU/XeP/8TdQ43+N0/s5sxNvCI/ICxqtCG8I
j8h6vWg9XjHKnN9c39qEtt0c3Nyb9mLbUebw5u6YXtYz5vjm9hhcW9f4Y+No
QzDSfFYP1mt80Xw+M14Ta4QNG+3Iq2v/T42jrcA44pXgmTihl17ra2r7p8fR
WmAY0XJZg1h70LZsP8qawVoB80i9wpzfXB8zhpfFGsfahpZE/cUawNwfs8d6
B8MEu+Rldd/+4zB7zK3/w2/aOHNec13MH9pyGnPrZetm2nIac+tv63BacZpx
623rbtlTMpvUXmVQqa/JJJNFJjdM/U3Gmmy1A5eiBacJVx9RJ6HtpvHGsDO3
tP6WESEbQqaDLDU1PrU9uWCyg2SgyD6RMaSejHezVjcMHFlxMubUIuXC0aLT
pKt3qXvR5tPoq2+oc+CxyfSR5SNDSH1YRp7sP5l7sstklql9yjCjhaaJxl80
93ct+sAovSPXJNcamTl6Qa45tIA0gbK4eb9cm+TlyOFxjXItltcu5901+RU1
/pprmvnLXMYyVmWrylV+5Tg1aLXn989lLBNcFrhcbSxETERrFezFV42TEf7y
2n+32v/N42SWyir9x2K2y1DWm5FT/Wp/uzX+zkJyrV8zTibt1q30DG2XObtV
jT80F60izeKtnWgh1cNlGso2lAnKu8HD8Zil9Npo2WnaMbCtBbDKMcv9tmKZ
+33HqMaMxq7GYsZkxmjGmMY2xji2lsBGprWnucf39tuNBYwJrHaCVUzrTvOO
F7zCDZ5GI4/5q/aFdYt5q9aJpYvFislqbYU9q56GUY1BjUWN7YrxiumK/Uqv
hnGKgYqFioWLiYtZiu1LD4bRirmK5SorTgac7Dc5cbLAZIDJ/pLjJXtI5pBa
kUwietVh3feIun1lJ9l2eiJq/3Lr6FtHdd86dfvqTrw1PDaPb3qTvmsymvQa
fed2qfHA33eNL6/xh3y3J+kd3tTJd3FVfwNL+U76bFfzN76Uz1j/Rwau7F6Z
uLKrZWbLypZhLTtMZpnal1wmXhaeFv0dfR5ZqDJP9c5kpH60bq/ub1ivpRNv
DI+MfoW+hbmZc3Ru5mi0vF6z10qbu31tP6w+o21a6dWuN841yLXnl4uZW7tG
uDaYY7/YXGqU3v7li5lLu8a4tphT0za7xrq20i5vWNt3HKUXfxm98jjXKNem
KxbDTsVQtTbHVt2str93lN74tYvxm7rGubZdtRhts2uqayntMu20a7xrOy04
v6prpGvjlYtZK6hpqWVZM1hL7FTjSztZU2xqblyvf5d67dfQj9f4TaNoDy5e
zNrBNdO10hrCnNbcdr25aBRks8ho2b/mPmfxIHbSQ6ENoxGjmb+g7v98Ox46
vRXb7fevVnJb5Lfs2FmRI6zcpjOjN/u+mlAnvt93dlb+hFe0/DT97rPt4mZM
20/j5Tdaj0LvQ37P+zrxFb+ns1IWXelZyJCRl6IfwmvAc2Af+9L60/zzBmiL
OHevgf6/NxOtmP15E2jGrJ2uV5OayxoK6wzzDLMMu4y3hMfkOU3tk177T7XP
+Tx6i9H+0AD9dTFeX9puGu8fLsQ7atufa3zBQvZ5fY1vr/HPa3xnjd9gbjNK
L/Yu9cxxMtZlq+81l7GMc73fv9X2HcbJMJddrqdPO+6cnAutOO03DfiVC/Fa
Or6evF78p2r/N9X4mBq/ppWeJu03Dfg9i9GGuy1jW7a2+2g3aDiuXYi32Pnr
oeudy4Kjpfcb5beJlt7a12+M3xZrYCxdTF2MXaxd+lmMW0xa7Fu1VIxPtWE1
VbVPzEBMPzVQtVUMe0xVNVa1WgxTtUo1W6xZzFnMWuxdWRMrmRNLybZQy8Xs
xOhU01WLxajEnFSTtbZUY1VbtcbkHeIhwsdQu1T7xfDEHFUD5r3iwcJf1AtT
W8YQ1BtSY1bLxazDsFPTVZvFlNSrUqOlX/Ib5bdpo4Vkh8gQkQEhi0I2mYwy
vUJZYO8dJ1N7x1Z6/moNrjGuLWoOtPY097JeecPp32W0ymbt9FK7+F81kvnU
MGj1afZld/Nyq3Vg/Ov9qHmobbgmuhaqcXxhHCaU2soretE2u6a5ltF+q624
ZrpWqrHQ3jsHz027T8vtGunaSMuttuQ302+lGpPaEma3WqIak7UlZrZaqjWm
Wo1rrmutms1banx3jX9PG1Hn9KVxmFBYUHp61sZHuaa1skamNaU5bc/F+3t6
bW/V+C/13wPNevvLrnk13r4TLS5N7vsbre6pdfuI2n537fveXrY5/v2z2cf6
nkaYNvj1emDNep//qNXUBzw/resOtf2spl5wbyueoi+Ow8T6USs9TFpjx3to
Nl7v7zT1hAda8SR9qznfB63fe9HWqjmoNRzcvL4ja/s/fD5133vGyYx/eysa
lHePk/H8NnrCuawHMA+xijBhDxyHsYetpydz0DhMQSxBtW9ad5p3rDtee14A
ngDsQV76A+r2I62varxlL2NMUCxQDFtadZr1rXvRwruNWYdVt3WzHsGQw47b
tsaHjlPjV9vHNqW99xvit4NW33aMML337XrRu2POYc1t04v23X1u08b7PmOi
YaFhd3o/HhxFm+GCZ63oN8tvlTUjrwvPyz8X46V51ziZ2rQiD+mJ1PjEOt4b
6+GH1vv59nEyImVD0jDxzvDQyIbHerD/PTX+a43vd52t8d9H0erc14y/okZa
j/98PX7HcTLg39SK9onXg+dD1js2hHOTISw72Dm+cxwNDO3L0XNZC1sTWAtY
E9sus1xW+b8W44eReSzr+MHFeGPc5/Yrm9dLk/PWOt6xc/l7eEgNusb3zobF
o0akNkRL/t26fewoWvQ96r7jxmH0YPO8qRetPs0+dgu2wfHj1IDVfjHpThiH
mfPLVthxxpg1avlvbo6n5qzWjKH3lXEYNr9qpQZ/4jhMmUtaqXnyKvAsYMFh
O9DnY6xgq7ytF28AjwC2yT7N+WD4qL3/Zy9eATUbtRpehJOa3wNLkq3r7/nr
49RzbqnxnbMZH2J9RkvQixfAc3ouWndzt+VJtI3mcNZjJ9V9r1OPnEue5M6T
ZBTLJJZNJaNKBpYsLPmOu9b43KVkOsoWlDEoo1FWI280j7RMPloW/WsZkzIn
ZSryIvMky8SkDaE/kakpQ1PW5kq/fpJMO9l2stVkrKm9yZKTvSaDTS1Ntpvf
Yxoy2rGD5uKV5pmWwaU2p94n80tml+wuWXcy72TkycqTdSbzTCaabDT+Dows
bKwdevF6uM9tWnd+BMwsrKw31n3fq9vz1ps1t1uey/dPvfKfddfiXLYfN4q3
4ZO1//drvOD7X/sP5zI+3t8/rX0vtVbjh7dSc1Uf/UqN1/J97MSbwKOwTy/e
BLdPsKaay328CTwKn+vFm3Bu8/jxXO47p9l/zVZqrOqzX63x2tbznXgreCxW
mQu7Qj3XmNdi59p+/jj13OWZeChPaX7vSR7UgE+u8eGjeGXe1ctYffYPtf3v
s/Hm8Oi8uhfvDm+H99R7yWvAq8Ozg22IVWJfTEEsQY85Ypwav9o+xvjhNb5g
FBbu9s0Ygw977zW9ZKvKWJUxKWvS4zECsQG3r+1HjsPU0xt4bY2PqttPrX8f
VOuq8ZfHYdz9rJUes/0xCX/aCsuVl4mnCbsNi4XXjucOuw2LxfEw7i5ohS17
9DjMuQtb6f0uj7JmslbagJ6uxhuM48V9NX3bKGtAa7/X1fjXdftXdd8R7TBO
ftOM/1C3v1rne1mNL6nxke0wTXgfeCDum4+34bpxPA+8Dg/of/m9q/FldftL
5mc04HXfFTVeZSa3f17bv9jOfWvPxePA2zCp7Y+2bqnxNTVebSa3eVR4U9z3
DOvCuu8fdfuxtf3nzfEwXI7oxSvheHgruCtqk7+0vp9PjfICv881vqTGh/bi
fXH86+bjReGh8Zq8Fh7n59T4Bt+5Gj9xJmv5U0fJarem5xXgGXjOQrwCD9S+
11m/1+N+14t3gofiVUvRvrptvfOvTu57ylw8N7w268zEu8HDgfeC+3Jl3b60
jn+n97sXb4798WNwZHhNvP8PzscrdF9tu3YYr8WNvZz75bX92HZeg/fO58e7
4j28vPl8b6/bJ9X+V/sszPdqfEaNnzaX8+EleTS90CTrMV7cWzrxAF1S2383
Hw85bw2PDf8NH45e0xU1nl1Iz+l25zOMN+Ri/aAaX1/bv94OA0bt/bc1fspC
avD/GMejwZvxtIV4VXhW8H1wfvROr/L7sZAeqm16wnrB9tH7utLv5ULqBHrF
V4/CyNEzvm2cnrFe8Y+b51PjV9u/rtlu/6/U8w/qMb8bp2erV/uD5vVcV9u/
Vtsf3mz3fMfXeH4h743v3+HtvEe8Jl7PMxbiJeFP0dPQy8A44j3Ss1PX4E36
bfP+HdcOE+jG5vNsLaRn8ctx3m9ephvm43Fyn9sYALwoenx6e7w2vDQ8NXg9
uD166TfU4x+7kJ76nc34pHYYQbwzK+fYC4dJr/DG2v7EhfQMfd98/3llnrWQ
Y+uh6J14jr82n+86C+nh39G8X2stpMdPi6+nr5fPS+T7ZT3fqr+t7enbJlmv
81rc1oneXD3hwbq93VK8F3rQes+8FrRFetR60zRGD5uk3vy2mXg4aJ3Vm//Y
CXtHrU6PWm9azY7W6uE1/uBCNFe8Oda41ra8OSZKw1HYAno2ejl63nrdejp6
W3rWetV6XHpbo1HYA3pca0xS3/6vOp9LOk2vq8bPX0jPSy91jRrvupCeqt6T
33S/5XpQemF65HrjemJ6X37j/bbrgdHu0/CvvxSvgudTL7/d2pHesN7nn/pO
1vdjNJNepp6mfqG+oWxKGZW0LHJnzA/0U/EgeBjNB/Rj8SB4FtXC9dz12tXE
eUP0qPWmeUPUbvW49bbVcNV29bj1ttV4H2he/+n1/XnuQmqzjxuFRaBG67Wo
z/+lk9fEO6InrhfOK6KWvPYobAQ1ZbXex47CJlDzVRt+xCisBTVivUHXQNc+
PUK9wYfV+H0L6RHqDa4+CotBj3CtSeqxf1PfrPHjJqkn7VGv/w9+/ybpP+w5
E88I/4D101J9f/9rKbXiU8wZWqkZr13jI4Zh5710Kd4N9af7OmE7PXKS+tr7
Z+LJsb/63C41vqYTr4W/ge0a7wNvinrYA52wnp6mNl77n1D7n1Gf9TqT1Od2
m4mH5xE1PnwY9sJmzd/XscOwE16/lO3qfbxBV3VyvJP9/up1LsWbwqPyrqWs
+XglvGavlVfD+6U/hBVxRSd+Ff2WO9WDzeFrfEKNu/V8b12Kl8U+tunR8ALx
BL1lId4vvdTVRmFp6Kny9vH47bAQ790fxvE08jJO6r5/m2S9uVjHf1vzfOr7
R+OD1Gt4co2/Por3Y8eljNX7j6vtp83l8eoxn67xHZ30A7z+d1tOz8Yromeg
V8BL4vtwXD3fLD3rUrwn1g/zs2FLmf+a45rb8hjzavJs8u/z8f9pnDHv5moL
8V7oOek18Uq8aJL+02kzYSZsVONvjuL9+PhSvBc8GHssxZth+zNGyW7/wVy8
I9bPq86GzcW7wsOyk+J2jdedZP3Ne3RPJ9vMb74xl330Z3hUdvLTN5v9vz4M
y2LnpTy3esyaszmHZ01SH8DWuNtvziTr+YNm4knSLznN35uy1Wz2Vw8Yqkct
xRujH4R/gYOxqVroKNn1P5pL7/bMGn+glR7uM5u/r9Nr23uWonXWc9VrlTUi
+10GPO/GiUvJ6rbms9aTDU6bTqMuG5w2g5dGz1SvlNdmw7r9jVG8KrsvZayf
ekadzzlz8faoJ6w+G/aXbBIZJZfNhSWm9/wtf8+t9KA3bcbfr+17LsVbw2Pz
saV4d9afpJ7x+Zl4rmxT31pjNvvw0vDUfGcuLDXZ6DQgtB/yzJ/XvL/fqu27
1v7rTdKfO2UmDJTtrF1G8cYc5PqpFl3jc10f59KPdv571Pk+s57zDZP0py+c
CTOEd4WH5ddzYavxwvDEfHop3iX9ZZ4dXp11ZuOPOcvxa/+9l+KVcZ/bvDhb
en/r/0fRTy1lrN57VD3f3GyyxfS09bJ5cbZoPv8fzuU5vR79+B9aC9R9L63x
GcOwVfZaylg9GbulMxuvle/zWXNhy+0wSb/85zNhpPDe6M/jOeA6bDZJvfoR
ep9LGas3Y8PMqPlOUm86oMb3djI+aRg2zfuX0h/1ee1c78cqs9EXeD92q/Ha
NX51jc+u8S/UTpfiHeIhOnwpXiT9/3PMf2r/p85GP+D95x16+mz2/V6NfzmX
x7yu2f+SGh/VfL78QhfV+JClaB083+6taB48//NrfH6d/6/momVwvI+1omnw
/ZIpT4sk257WyPdNtj0tkr8nfz+8Hf/dzdoYLOEV3ayR31vjmRrfW79vr+rG
K8Qz9NZuvES7TeJZ4lV6O37JJDUgtZ/zl+JVUPNR6+FVoHU4r87vU61oHt5W
43NrfI3awVLGG9T40no918/Fi8CTcPpSvAv60ef7fa/Hv3A2z3/LMN6ony5F
W+F4n2xFY/Hu5vX8ox2G31tq/KNRsou+vpTx+qP09q6dy3M5v+vm8pwfqvF8
Pf7Bevw7u/Fmeb38VnxXssllhNNmyR33e/Yk1zPsgblca9Vf+7O55rre0czS
yl7Qi5ff9W+VhbAD+EXU1NTSMPR2qXGnHnN/Pf8bu6nFtWv8+m5qcrwlHmPf
xzW/l/QqF9fzXz2Xz8Pnxdv15m5ez63DeK8ubI6vx6O3gzn4vubzfk03Nbpd
m+fHJDy3+T6oCaoFnt3013lO9qq3+UWz8Z4Y/3YurMl3TaInuHImjB+1voU6
3k7d1Pz2Mr+p/R6yTq/x3jUe1PbZTpiGelHjcZiGelKy6Gn6aPlk0vOi8aTh
Jz69qRUu1vYPdVMztE2NT23PPmqL3dr+/m5qjGp/vRrv3k0NkL9JjVFt8fLm
+fTw9O7uWIr3yT624TLyEqlRqk3yXnk9/Tpep85vL38vzfP9qx3mIy2i8z+y
Gy2f74/5Oy2ijPv9J9Gg0J5gOPLiqYmqhfLyfaR5//7ZDlNy30lqsmqxtyyl
1ur7+u5uaq7vaP5ebqjHf3Mp+o6fmG/X57XBbLxP9rGNV8h85rJhWB8X9aIV
pBnEf8SB9HzD2meuznf/5nx9Pgs1/kI3teFRjQ/ppkb82Wb/A7upuTqWHqPe
omPu03zen+um5vqZ5v3bu5uaLW2mmq1aLW3mVpPouc6eCRMK7+XH4/CAcV/U
/9VX8URwRWi5aORp42m6aKVoyGnHaaZoZWiuaa1pZngNaEppSXkd9IpfPgrb
Sc+Yl4CnQHY4b9Qxk2R8867JATa2ndfg7G60RavW+GvdaIxog1ap8QndaIS+
0Gxf6oTBqRe91SjsJz1pXjeeN3nsvAtfqu2rWVN2wujkraMJogXixaNFpVmi
VeLFO6zZX949DRMvDU09LT0vCS3Q5qOwp2iCZG2or8q2k7lBH6gmoRaBS0hv
qcamtoYjSO/v+4IPiBNI768+hA+IEyiLRv0Wa0kmDb2T/i4/KF8o7RNNOy07
DRRvFQ077TrvJ+0TjTttOw2UbPY163jjTjLaZeusZPDMJivHdhnu8tplqx/f
7C9bneaKFoqmnpaeJop2arNRWFI0VPSr6m94hLiEvJE8kniuuK60V6vX8c7o
RoNFK00zLSeJ99Zt/TyZSe7jpeCpkFvEG+C2/qoMI/c5f/2g/88q41fS75RJ
JpuMH0m/UqabbDdeNhpQ2k9eKdoBmk5aThoC2gWaUlpSGgZag1eOwgqjOeBN
0r+UH4X1yevkORyb14nWgAaU9pPmgLaA5pPWk8aA9uBVo7DNaBC8NzRxtHDe
I3lW+qWyJ3lw5Wnpf8rL5JnlxeTJxFPFVXWbho52zn20dQ+r/c/sRmP35Um+
/7ye3+5mTFNHS9dejtaCBpb2leaCNoZmmVaZRoZWg4aWdpZmQ9aZzDOsM9lo
sun0i7HjZNQZ6y/LqJNVx3tFjyovC2uVl8xn5LPRU5Zdpl8sy1OGmbFMM6yz
nZrn05/mzZKxRs+u33POfNhY9PT6Rf8zHwY6/bx+5pHzYXXJCrB+xkPBReE/
UA/BG8Ed4e9QP8EPwRGRJaD+gZdyc/P3JxMKC012k+wGGQ4yFmQt8HOob+HZ
4Nrwc6iP4bvgvPDC6IfKB8F25aXQb5FfhM0qW0n/QwbTZ5vj62fKX5IRwbvB
wyFXiPeCN0e/VF4L1qs8FP1Y+WU8AI6nHyOvUMaTvBf9N3lqPKayHvRHsdNk
PvBr6c/KLJFdoha0yTjsTTUhtTiaNFo0NTm1QZo4Wjg1QrUKGjraOTULtQma
PFo8NQrvJ80crdxGzedBE0cL95Lm2sM/ekg71yC1Of2JQ9up0TlfGRVYYjIr
eMl4yk5svGG8Zl6Dc+e1kiWiH40dJ4PEvvrJMk88xlzGnIbWjOZsJatkmIwS
GSSypvS7ZDPy6Po9l6Ekc0v2ls9C/0nGk89Ef9b8Ge8O904/1vwQLxI3Uv/U
+gGPEZeRvtV8F/ANJ5J+Vr0RPxNHk5+E3hB/B4eHvp9eEY8Il+jW5nrDf8iH
+Mfm94R/lo/2tuZ6y+87bfTyrof8wHzB9NLWBxs33mX+AvpCfCacJvrz14/C
B8AJoKd/wyj+ez78PzS/h/y8fL302Ob/G3bj5aYnt55+bLdhWUyip8bfweGR
rSRjCftMFpMsI/1fWYMyjWzX7+PdlMFku8wjLLTDG7+S/qGMKllVvEvuc1uP
UfaT/iEWogwq7AIaetp5rAHb9QtlUh3S+KfUW/GicKPobem98ZdwmPgp6Evx
nHCd+IvUV/F4cHnoYdUbb2/YLPT16jXL3bBHbmmuj/yjfKT0+OpT3W5YIfp1
+oX4gxhn2AU8AbwAWAU/aN5/7EgaOvocmh5aHj5r/mJ+E7xrDEl6HL/P/LJ8
s/QSNEm0SLgK+sE0VrRVuAn0IepZ+Do4O/QtNC+0Lrg99LP8Z/IHMILpXf0+
yBfA9KUX5NfCa8bgpa/kl+Zf52On1/F7jv+AA0GPxy+NF4EbQX/H34wngStB
P6tfK/8Ag5ieUX0WDwcXh16Yv00eAQaweih/CX4WjhY9ET8HPjmmp/mcOaK5
IY+R+Z45oLnfZs38xHwErwG3wfXV9RP/APPA/JE+XX4LZoL6Pv01vhPOk3ot
/wseF4YTPwG9G38un+4Ku3YYfg6ODv2R+ggeES4R/R5NFy0XrhB/Of8IHjpG
KL86vwleOsYqvR5/I747Jik9Hv8qvjvGKv0gjSFtIa6Q/gb9pPwWni36fn5E
eQyYxPSgNKS0o7g49AP+Pi9qxVetn/mrcfJ/MAOxCPXE9cIxCfXT9MPw5HDl
9Mv0L/HpMOfoZfx+X9qKj5Mejx/urlYYmfQ49A11yBXOJP0OzQ+tD58jvR/N
HK0cxiR9HD0SniOuo34iP5T8IAw7ersVTd5cGJ/0STRFtER8vfrdF4+TP4T5
SI/i9+XnrfjQ+Tt4JHgjcNX0t/md5BFh4ukn6hHqDWLc0SvQNNAy8M3TY5gv
4J/goNDz6jds2woHjL5Y/2O7Vrhm9L00wLS/uF762dePk1eFoajfq7+Lv4hR
qD+qJ6oXitFIj3DtOPlLmIz6iXrKeslrNvV2/mL5SxiJ+nn8Vfh5OHrqJ/zC
8powEfXf9b/xFTEU8S9pJGgjcDX13/Xj8S1xLq3H+T3k//AIWu9av/LL8chZ
f6pJqEXwCKoPqzmqNeIyq6eqsaqtYgKpX6sv4ddgdlhf8x/gH2OMqI+oiaiF
YHSoj6pv4/ng+qhHqyGrHWNOqRfrIegdYDDpL6hn79IKd0g/VI9UbxQDSr9g
pWbfCXNK/Yx/A28Z00N/kb/mnTNhhOk/6THpLWGk6efw27x7Jowy/S09Lb0s
jDL9O/4MvDbcNv1b+jG8O9w7LC31afwUHBXadZ5CXkIadvnO+A/PaIfRgV2D
fyH/WRaBbGv+sGe3k11pvKIHnU3WNP+M9TZ+8+aNX4teFw8AF0D/0/q6V+d7
XDf1bX4wfGrMJ/0B/ZddW2Fuqd/TTx46E0aW+rEarNorhpN6Lv8W/i8mlPo3
/xXeNmYUtpWahFoExpV+Dv3mF2fC1NLvo6f/0EwYa/Qk9PMfmQmTU79JD1Lv
EfPM/NocztyNZ9n8mR5JNjQPtPkCPZIsap5n82lz5JW58XLm6+bU5tJ8tdb7
/Fd4KRga1tf8RfgMOA3qmfR68rUwp9S31MPwmzB+1J/UnNSaMKHUu9S01LIw
dKxv6bFlzWMGqI/wO8nLwlzQn6HXk9eFIaT+TK8nn4vnVf1OvQ5fClPKepp+
dqN2PMjWq9aU1pJXNesxa0prSUwM/Ut61c/MhPmmv0nPus9MGHzqz2rAar+Y
Ofpn/D547Rhw+gl6LHorGG76g/qL72qFS6afpSejF4N19v1mfomNTVOv/qoe
i9/D4OH77Dvuu31Fs17nD8CDwYUxn6O/x3PCdVJPp6+XR4bBpf7Ev4O3gXlh
fc4fuW47TBLrT3rm57XDNDHfovfHk8KMsr6gT5VfjFnxf4wq8fY=
         
         "]]}]}, {}, {}, {}, {}}, {
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1F1oT2EcB/BnNjb/YYrsgrAL5cKUckHhQrkwrMhLTSJq2rBli23NWouF
lkZ5t7TkLXGxGcuFUszbxZSx2ezFtmbJkGmRaXxOau35fT/n9zvn9Dynf9rO
/A15cSGEVP8y4kOI6u8JIQxY18mnU0KYqp45PoQUF4vYHHmJvEDe7uJptpBt
Yl36V/M6tpwVsG6WzZrZWnbTTDU/zD6zrewWu81qWZLnXzWTy1+wh2weq2cl
7CPrYIfMrOTHWPyEEH6yMradnWNz2aiZ6eP0sutsOfvDFrEL7B57aiaLZ7L7
7Al7xorYHtbCWthBOVd+LXdOCuENK2H72Fv2Vi6V8+Xzk0NoY62sjO2Pnsfa
WRsrZzG5kL9n71gFOyB3ye3Re7l+mBWxHtYRvRerZCWsl3V5j/f8KCtl/ayb
dbLjrIxdNDMQ9bIqVs4uscGol51gyXIF/8R6WDWbFD2ffWYf2HP5FK9kX1gv
OykfkYfkZvv6mhWy3ewVe8Qes80sI9oD+1rPG9hSls6q2Bl2jc1iv6Nvjhez
s+yv8x5iP5zvVnaUNZnp461sBStmjayJPWBprM5MTvS9sRqWwK6wrGgfWDkr
NTPoG1zD8thOto+9ZMvYetZpZhW/w9LZYjZfPinPlm/oT2XJrJBpDzPkmFwg
NzqPKWwaS2S77WM+t4SpLIFlC3uZ1jCZ9SvieA5LZjHWx8bU2SxmrTWTyEfV
u9hE62WWwH6pd7AGM0nqODZi3cbuskT1mP0YtmYx2x5G5W/RvdxjCzMSfkVn
r39IvZGJYST6RtinaH+YvzDMPlozBUcXatzjK+sL/39X/gG7tJpz
       "]]}, {}, {}, 
     {GrayLevel[0], Opacity[0.3], 
      LineBox[{858, 2471, 1705, 2679, 4531, 1280, 3633, 3537, 4930, 3746, 
       1317, 3640, 3544, 4939, 3765, 1346, 3647, 4829, 3551, 3784, 1375, 3654,
        4833, 3558, 3803, 1404, 4886, 3661, 3565, 3822, 1433, 4893, 3668, 
       3572, 3841, 4964, 1462, 3675, 3579, 3860, 4978, 1491, 3682, 3586, 4989,
        3879, 1520, 3689, 3593, 4999, 3898, 1549, 3696, 4837, 3600, 3917, 
       1578, 3703, 4841, 3607, 3936, 1607, 4906, 3710, 3614, 3955, 1636, 4913,
        3717, 3621, 3974, 1665}], 
      LineBox[{3251, 3627, 3342, 3728, 4921, 3485, 3634, 3348, 4848, 3747, 
       3490, 3641, 3354, 4850, 3766, 3493, 3648, 4879, 3360, 3785, 3496, 3655,
        4882, 3366, 3804, 3499, 4887, 3662, 3372, 3823, 3502, 4894, 3669, 
       3378, 3842, 4965, 3505, 3676, 3384, 3861, 4979, 3508, 3683, 3390, 4867,
        3880, 3511, 3690, 3396, 4870, 3899, 3514, 3697, 4899, 3402, 3918, 
       3517, 3704, 4902, 3408, 3937, 3520, 4907, 3711, 3414, 3956, 3523, 4914,
        3718, 3420, 3975, 3526}], 
      LineBox[{3252, 3628, 3344, 3731, 4923, 3487, 3635, 3350, 3750, 3491, 
       3642, 3356, 4851, 3769, 3494, 3649, 4880, 3362, 3788, 3497, 3656, 4883,
        3368, 3807, 3500, 4888, 3663, 3374, 3826, 3503, 4895, 3670, 3380, 
       3845, 4968, 3506, 3677, 3386, 3864, 4981, 3509, 3684, 3392, 4868, 3883,
        3512, 3691, 3398, 4871, 3902, 3515, 3698, 4900, 3404, 3921, 3518, 
       3705, 4903, 3410, 3940, 3521, 4908, 3712, 3416, 3959, 3524, 4915, 3719,
        3422, 3978, 3527}], 
      LineBox[{3255, 3631, 3346, 3740, 4927, 3489, 3638, 3352, 4849, 3759, 
       3492, 3645, 3358, 4852, 3778, 3495, 3652, 4881, 3364, 3797, 3498, 3659,
        4884, 3370, 3816, 3501, 4891, 3666, 3376, 3835, 3504, 4898, 3673, 
       3382, 3854, 4975, 3507, 3680, 3388, 3873, 4985, 3510, 3687, 3394, 4869,
        3892, 3513, 3694, 3400, 4872, 3911, 3516, 3701, 4901, 3406, 3930, 
       3519, 3708, 4904, 3412, 3949, 3522, 4911, 3715, 3418, 3968, 3525, 4918,
        3722, 3424, 3987, 3528}], 
      LineBox[{3292, 3970, 3419, 3969, 5019, 3289, 3951, 3413, 3950, 5012, 
       3286, 3932, 3407, 4876, 3931, 3283, 3913, 3401, 4873, 3912, 3280, 3894,
        4996, 3395, 3893, 3277, 3875, 4986, 3389, 3874, 3274, 4976, 3856, 
       3383, 3855, 3271, 4960, 3837, 3377, 3836, 4959, 3268, 3818, 3371, 3817,
        4952, 3265, 3799, 3365, 4856, 3798, 3262, 3780, 3359, 4853, 3779, 
       3259, 3761, 4936, 3353, 3760, 3256, 3742, 3347, 3741, 3250, 4919, 3724,
        3341, 3723, 3484}], 
      LineBox[{1237, 3212, 2414, 3211, 4815, 1208, 3170, 2358, 3169, 4801, 
       1179, 3128, 2302, 4787, 3127, 1150, 3086, 2246, 4773, 3085, 1121, 3044,
        4746, 2190, 3043, 1092, 3002, 4718, 2134, 3001, 1063, 4690, 2960, 
       2078, 2959, 1034, 4650, 2918, 2022, 2917, 4649, 1005, 2876, 1966, 2875,
        4633, 976, 2834, 1910, 4619, 2833, 947, 2792, 1854, 4605, 2791, 918, 
       2750, 4578, 1798, 2749, 889, 2708, 4550, 1742, 2707, 848, 4522, 2666, 
       1686, 2665, 1266}], 
      LineBox[{3293, 3977, 3421, 3976, 5022, 3290, 3958, 3415, 3957, 5015, 
       3287, 3939, 3409, 4877, 3938, 3284, 3920, 3403, 4874, 3919, 3281, 3901,
        5000, 3397, 3900, 3278, 3882, 4990, 3391, 3881, 3275, 4980, 3863, 
       3385, 3862, 3272, 4967, 3844, 3379, 3843, 4966, 3269, 3825, 3373, 3824,
        4955, 3266, 3806, 3367, 4857, 3805, 3263, 3787, 3361, 4854, 3786, 
       3260, 3768, 4940, 3355, 3767, 3257, 3749, 3349, 3748, 3253, 4922, 3730,
        3343, 3729, 3486}], 
      LineBox[{3294, 3980, 3423, 3979, 5023, 3291, 3961, 3417, 3960, 5016, 
       3288, 3942, 3411, 4878, 3941, 3285, 3923, 3405, 4875, 3922, 3282, 3904,
        5001, 3399, 3903, 3279, 3885, 4991, 3393, 3884, 3276, 4982, 3866, 
       3387, 3865, 3273, 4970, 3847, 3381, 3846, 4969, 3270, 3828, 3375, 3827,
        4956, 3267, 3809, 3369, 4858, 3808, 3264, 3790, 3363, 4855, 3789, 
       3261, 3771, 4941, 3357, 3770, 3258, 3752, 4931, 3351, 3751, 3254, 4924,
        3733, 3345, 3732, 3488}], 
      LineBox[{3295, 3725, 3529, 3726, 4844, 3425, 3743, 3535, 4928, 3744, 
       3432, 3762, 3542, 4937, 3763, 3436, 3781, 4946, 3549, 3782, 3440, 3800,
        4949, 3556, 3801, 3444, 4953, 3819, 3563, 3820, 3448, 4961, 3838, 
       3570, 3839, 4859, 3452, 3857, 3577, 3858, 4863, 3456, 3876, 3584, 4987,
        3877, 3460, 3895, 3591, 4997, 3896, 3464, 3914, 5006, 3598, 3915, 
       3468, 3933, 5009, 3605, 3934, 3472, 5013, 3952, 3612, 3953, 3476, 5020,
        3971, 3619, 3972, 3480}], 
      LineBox[{3296, 1695, 649, 1696, 4845, 3426, 1751, 663, 4299, 1752, 3433,
        1807, 677, 4313, 1808, 3437, 1863, 4110, 691, 1864, 3441, 1919, 4124, 
       705, 1920, 3445, 4954, 1975, 719, 1976, 3449, 4962, 2031, 733, 2032, 
       4860, 3453, 2087, 747, 2088, 4864, 3457, 2143, 761, 4355, 2144, 3461, 
       2199, 775, 4369, 2200, 3465, 2255, 4166, 789, 2256, 3469, 2311, 4180, 
       803, 2312, 3473, 5014, 2367, 817, 2368, 3477, 5021, 2423, 831, 2424, 
       3481}], LineBox[{3298, 3734, 3531, 3735, 4846, 3428, 3753, 3538, 4932, 
       3754, 3434, 3772, 3545, 4942, 3773, 3438, 3791, 4947, 3552, 3792, 3442,
        3810, 4950, 3559, 3811, 3446, 4957, 3829, 3566, 3830, 3450, 4971, 
       3848, 3573, 3849, 4861, 3454, 3867, 3580, 3868, 4865, 3458, 3886, 3587,
        4992, 3887, 3462, 3905, 3594, 5002, 3906, 3466, 3924, 5007, 3601, 
       3925, 3470, 3943, 5010, 3608, 3944, 3474, 5017, 3962, 3615, 3963, 3478,
        5024, 3981, 3622, 3982, 3482}], 
      LineBox[{3299, 3736, 3532, 3737, 4847, 3429, 3755, 3539, 4933, 3756, 
       3435, 3774, 3546, 4943, 3775, 3439, 3793, 4948, 3553, 3794, 3443, 3812,
        4951, 3560, 3813, 3447, 4958, 3831, 3567, 3832, 3451, 4972, 3850, 
       3574, 3851, 4862, 3455, 3869, 3581, 3870, 4866, 3459, 3888, 3588, 4993,
        3889, 3463, 3907, 3595, 5003, 3908, 3467, 3926, 5008, 3602, 3927, 
       3471, 3945, 5011, 3609, 3946, 3475, 5018, 3964, 3616, 3965, 3479, 5025,
        3983, 3623, 3984, 3483}], 
      LineBox[{3338, 3973, 3620, 3716, 4912, 3335, 3954, 3613, 3709, 4905, 
       3332, 3935, 3606, 4840, 3702, 3329, 3916, 3599, 4836, 3695, 3326, 3897,
        4998, 3592, 3688, 3323, 3878, 4988, 3585, 3681, 3320, 4977, 3859, 
       3578, 3674, 3317, 4963, 3840, 3571, 3667, 4892, 3314, 3821, 3564, 3660,
        4885, 3311, 3802, 3557, 4832, 3653, 3308, 3783, 3550, 4828, 3646, 
       3305, 3764, 4938, 3543, 3639, 3302, 3745, 4929, 3536, 3632, 3297, 4920,
        3727, 3530, 3626, 3427}], 
      LineBox[{3339, 3985, 3624, 3720, 4916, 3336, 3966, 3617, 3713, 4909, 
       3333, 3947, 3610, 4842, 3706, 3330, 3928, 3603, 4838, 3699, 3327, 3909,
        5004, 3596, 3692, 3324, 3890, 4994, 3589, 3685, 3321, 4983, 3871, 
       3582, 3678, 3318, 4973, 3852, 3575, 3671, 4896, 3315, 3833, 3568, 3664,
        4889, 3312, 3814, 3561, 4834, 3657, 3309, 3795, 3554, 4830, 3650, 
       3306, 3776, 4944, 3547, 3643, 3303, 3757, 4934, 3540, 3636, 3300, 4925,
        3738, 3533, 3629, 3430}], 
      LineBox[{3340, 3986, 3625, 3721, 4917, 3337, 3967, 3618, 3714, 4910, 
       3334, 3948, 3611, 4843, 3707, 3331, 3929, 3604, 4839, 3700, 3328, 3910,
        5005, 3597, 3693, 3325, 3891, 4995, 3590, 3686, 3322, 4984, 3872, 
       3583, 3679, 3319, 4974, 3853, 3576, 3672, 4897, 3316, 3834, 3569, 3665,
        4890, 3313, 3815, 3562, 4835, 3658, 3310, 3796, 3555, 4831, 3651, 
       3307, 3777, 4945, 3548, 3644, 3304, 3758, 4935, 3541, 3637, 3301, 4926,
        3739, 3534, 3630, 3431}]}, 
     {GrayLevel[0], Opacity[0.3], 
      LineBox[{3988, 4521, 4093, 4520, 4919, 4250, 4523, 4094, 4522, 4251, 
       4525, 4095, 4844, 4524, 4252, 4527, 4096, 4845, 4526, 4253, 4529, 4920,
        4097, 4528, 4254, 4531, 4098, 4530, 4255, 4921, 4533, 4099, 4532, 
       4256, 4923, 4535, 4100, 4534, 4922, 4257, 4537, 4101, 4536, 4924, 4258,
        4539, 4102, 4846, 4538, 4259, 4541, 4103, 4847, 4540, 4260, 4543, 
       4925, 4104, 4542, 4261, 4545, 4926, 4105, 4544, 4262, 4927, 4547, 4106,
        4546, 4263}], 
      LineBox[{887, 4549, 4296, 4548, 3742, 1305, 4551, 4297, 4550, 1308, 
       4553, 4298, 4928, 4552, 1310, 4555, 4299, 4554, 1312, 4557, 4929, 4300,
        4556, 1314, 4559, 4930, 4301, 4558, 1316, 4848, 4561, 4302, 4560, 
       1318, 3750, 4563, 4303, 4562, 3749, 1320, 4565, 4304, 4564, 4931, 1322,
        4567, 4305, 4932, 4566, 1324, 4569, 4306, 4933, 4568, 1326, 4571, 
       4934, 4307, 4570, 1328, 4573, 4935, 4308, 4572, 1330, 4849, 4575, 4309,
        4574, 1332}], 
      LineBox[{4002, 4645, 4337, 4449, 4891, 4001, 4644, 4336, 4890, 4448, 
       4000, 4643, 4335, 4889, 4447, 3999, 4642, 4958, 4334, 4446, 3998, 4641,
        4957, 4333, 4445, 3997, 4956, 4640, 4332, 4444, 3996, 4955, 4639, 
       4331, 4443, 4888, 3995, 4638, 4330, 4442, 4887, 3994, 4637, 4329, 4886,
        4441, 3993, 4636, 4328, 4885, 4440, 3992, 4635, 4954, 4327, 4439, 
       3991, 4634, 4953, 4326, 4438, 3990, 4633, 4325, 4437, 3989, 4952, 4632,
        4324, 4436, 4264}], 
      LineBox[{4004, 4648, 4135, 4647, 4960, 4265, 4651, 4136, 4650, 4267, 
       4654, 4137, 4859, 4653, 4268, 4657, 4138, 4860, 4656, 4269, 4660, 4963,
        4139, 4659, 4270, 4663, 4964, 4140, 4662, 4271, 4965, 4666, 4141, 
       4665, 4272, 4968, 4669, 4142, 4668, 4967, 4273, 4672, 4143, 4671, 4970,
        4274, 4675, 4144, 4861, 4674, 4275, 4678, 4145, 4862, 4677, 4276, 
       4681, 4973, 4146, 4680, 4277, 4684, 4974, 4147, 4683, 4278, 4975, 4687,
        4148, 4686, 4279}], 
      LineBox[{4017, 4685, 4351, 4463, 4898, 4016, 4682, 4350, 4897, 4462, 
       4015, 4679, 4349, 4896, 4461, 4014, 4676, 4972, 4348, 4460, 4013, 4673,
        4971, 4347, 4459, 4012, 4969, 4670, 4346, 4458, 4011, 4966, 4667, 
       4345, 4457, 4895, 4010, 4664, 4344, 4456, 4894, 4009, 4661, 4343, 4893,
        4455, 4008, 4658, 4342, 4892, 4454, 4007, 4655, 4962, 4341, 4453, 
       4006, 4652, 4961, 4340, 4452, 4005, 4649, 4339, 4451, 4003, 4959, 4646,
        4338, 4450, 4266}], 
      LineBox[{4018, 4689, 4149, 4688, 4976, 4280, 4691, 4150, 4690, 4281, 
       4693, 4151, 4863, 4692, 4282, 4695, 4152, 4864, 4694, 4283, 4697, 4977,
        4153, 4696, 4284, 4699, 4978, 4154, 4698, 4285, 4979, 4701, 4155, 
       4700, 4286, 4981, 4703, 4156, 4702, 4980, 4287, 4705, 4157, 4704, 4982,
        4288, 4707, 4158, 4865, 4706, 4289, 4709, 4159, 4866, 4708, 4290, 
       4711, 4983, 4160, 4710, 4291, 4713, 4984, 4161, 4712, 4292, 4985, 4715,
        4162, 4714, 4293}], 
      LineBox[{4032, 4813, 4393, 4505, 4911, 4031, 4812, 4392, 4910, 4504, 
       4030, 4811, 4391, 4909, 4503, 4029, 4810, 5018, 4390, 4502, 4028, 4809,
        5017, 4389, 4501, 4027, 5016, 4808, 4388, 4500, 4026, 5015, 4807, 
       4387, 4499, 4908, 4025, 4806, 4386, 4498, 4907, 4024, 4805, 4385, 4906,
        4497, 4023, 4804, 4384, 4905, 4496, 4022, 4803, 5014, 4383, 4495, 
       4021, 4802, 5013, 4382, 4494, 4020, 4801, 4381, 4493, 4019, 5012, 4800,
        4380, 4492, 4294}], 
      LineBox[{4046, 4827, 4407, 4519, 4918, 4045, 4826, 4406, 4917, 4518, 
       4044, 4825, 4405, 4916, 4517, 4043, 4824, 5025, 4404, 4516, 4042, 4823,
        5024, 4403, 4515, 4041, 5023, 4822, 4402, 4514, 4040, 5022, 4821, 
       4401, 4513, 4915, 4039, 4820, 4400, 4512, 4914, 4038, 4819, 4399, 4913,
        4511, 4037, 4818, 4398, 4912, 4510, 4036, 4817, 5021, 4397, 4509, 
       4035, 4816, 5020, 4396, 4508, 4034, 4815, 4395, 4507, 4033, 5019, 4814,
        4394, 4506, 4295}], 
      LineBox[{4060, 4602, 4323, 4603, 4852, 4059, 4600, 4322, 4945, 4601, 
       4058, 4598, 4321, 4944, 4599, 4057, 4596, 4943, 4320, 4597, 4056, 4594,
        4942, 4319, 4595, 4055, 4941, 4592, 4318, 4593, 4054, 4940, 4590, 
       4317, 4591, 4851, 4053, 4588, 4316, 4589, 4850, 4052, 4586, 4315, 4939,
        4587, 4051, 4584, 4314, 4938, 4585, 4050, 4582, 4313, 4583, 4049, 
       4580, 4937, 4312, 4581, 4048, 4578, 4311, 4579, 4047, 4936, 4576, 4310,
        4577, 4191}], 
      LineBox[{4061, 4408, 4107, 4604, 4853, 4192, 4409, 4108, 4605, 4193, 
       4410, 4109, 4946, 4606, 4194, 4411, 4110, 4607, 4195, 4412, 4828, 4111,
        4608, 4196, 4413, 4829, 4112, 4609, 4197, 4879, 4414, 4113, 4610, 
       4198, 4880, 4415, 4114, 4611, 4854, 4199, 4416, 4115, 4612, 4855, 4200,
        4417, 4116, 4947, 4613, 4201, 4418, 4117, 4948, 4614, 4202, 4419, 
       4830, 4118, 4615, 4203, 4420, 4831, 4119, 4616, 4204, 4881, 4421, 4120,
        4617, 4205}], 
      LineBox[{4062, 4422, 4121, 4618, 4856, 4206, 4423, 4122, 4619, 4207, 
       4424, 4123, 4949, 4620, 4208, 4425, 4124, 4621, 4209, 4426, 4832, 4125,
        4622, 4210, 4427, 4833, 4126, 4623, 4211, 4882, 4428, 4127, 4624, 
       4212, 4883, 4429, 4128, 4625, 4857, 4213, 4430, 4129, 4626, 4858, 4214,
        4431, 4130, 4950, 4627, 4215, 4432, 4131, 4951, 4628, 4216, 4433, 
       4834, 4132, 4629, 4217, 4434, 4835, 4133, 4630, 4218, 4884, 4435, 4134,
        4631, 4219}], 
      LineBox[{4076, 4742, 4365, 4743, 4869, 4075, 4740, 4364, 4995, 4741, 
       4074, 4738, 4363, 4994, 4739, 4073, 4736, 4993, 4362, 4737, 4072, 4734,
        4992, 4361, 4735, 4071, 4991, 4732, 4360, 4733, 4070, 4990, 4730, 
       4359, 4731, 4868, 4069, 4728, 4358, 4729, 4867, 4068, 4726, 4357, 4989,
        4727, 4067, 4724, 4356, 4988, 4725, 4066, 4722, 4355, 4723, 4065, 
       4720, 4987, 4354, 4721, 4064, 4718, 4353, 4719, 4063, 4986, 4716, 4352,
        4717, 4220}], 
      LineBox[{4090, 4770, 4379, 4771, 4872, 4089, 4768, 4378, 5005, 4769, 
       4088, 4766, 4377, 5004, 4767, 4087, 4764, 5003, 4376, 4765, 4086, 4762,
        5002, 4375, 4763, 4085, 5001, 4760, 4374, 4761, 4084, 5000, 4758, 
       4373, 4759, 4871, 4083, 4756, 4372, 4757, 4870, 4082, 4754, 4371, 4999,
        4755, 4081, 4752, 4370, 4998, 4753, 4080, 4750, 4369, 4751, 4079, 
       4748, 4997, 4368, 4749, 4078, 4746, 4367, 4747, 4077, 4996, 4744, 4366,
        4745, 4221}], 
      LineBox[{4091, 4464, 4163, 4772, 4873, 4222, 4465, 4164, 4773, 4223, 
       4466, 4165, 5006, 4774, 4224, 4467, 4166, 4775, 4225, 4468, 4836, 4167,
        4776, 4226, 4469, 4837, 4168, 4777, 4227, 4899, 4470, 4169, 4778, 
       4228, 4900, 4471, 4170, 4779, 4874, 4229, 4472, 4171, 4780, 4875, 4230,
        4473, 4172, 5007, 4781, 4231, 4474, 4173, 5008, 4782, 4232, 4475, 
       4838, 4174, 4783, 4233, 4476, 4839, 4175, 4784, 4234, 4901, 4477, 4176,
        4785, 4235}], 
      LineBox[{4092, 4478, 4177, 4786, 4876, 4236, 4479, 4178, 4787, 4237, 
       4480, 4179, 5009, 4788, 4238, 4481, 4180, 4789, 4239, 4482, 4840, 4181,
        4790, 4240, 4483, 4841, 4182, 4791, 4241, 4902, 4484, 4183, 4792, 
       4242, 4903, 4485, 4184, 4793, 4877, 4243, 4486, 4185, 4794, 4878, 4244,
        4487, 4186, 5010, 4795, 4245, 4488, 4187, 5011, 4796, 4246, 4489, 
       4842, 4188, 4797, 4247, 4490, 4843, 4189, 4798, 4248, 4904, 4491, 4190,
        4799, 4249}]}}}],
  AspectRatio->1,
  Axes->True,
  Frame->True,
  Method->{"TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{9.721585935814707, 19.990997705737936`}, {1400.0054406314503`, 
   2236.454952719609}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.5704261632707243`*^9, 3.570426236663967*^9, 3.570426453672727*^9, {
   3.5704269268288527`*^9, 3.5704269546396217`*^9}, 3.570427547343835*^9, {
   3.57048562405588*^9, 3.570485631912737*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
zLTlyVOYbePtt83msddNb1RRIavevae76N3ctHm9kco+8vm3ojxueiOthW2c
PPn6bfQW20iu2NRF77tNG3YvvN5o/2ZgDje9cdwVY8+etdlF7xaZbKOY3zac
dkSWgM6vv/6xu464nwFabt6sr7OOLU1bTEwc+SLiWMG/u+k4evRoyyKydAxb
FL1zxdJgdZRWlg4Qi/RWwM2g/IUuht6pImk4/ipUqMBW/dln32flz2MushdB
dVkvzx0ojAYvgApjeAYsFNu1y4SsjGkmIgJqn9oyKeEPlkSDlj5bW0DNycdX
WG+h2Mpc8rTY+mOVUFvFU8Dfo0cvltHBgy/QVeuvTiqdd64CGk5Y33zzE/NX
pnS9rMLKpsh5p4qfwfhrY9py5SrI6f1XX/1IvznxOtIRb3CDgxw/bomzjm2t
EYupQKrdwXU3HZct265yhwR68cX3nHVsZ9oSEyuq5LAff7vmpuO49IWqc1XO
VFx1hA/Pl68GLV2yz1nH9qatb5/ZKiMbxN+uuun42WffUqmSaZyaOOrYwbSN
HL6K7p97lL/9101HnBdt1VLfL+2oY5ppw9t18AYcfPvVTUc8TgQvm3Dc8R7T
hk6cN6lvvzjpGBekrWGQtgZ3+DpHGWEw5uIdXvdH+v5PjPFn58/pdcEVydf8
2Vn/38xf6OsiMrXdyn49+uebwp+j759pjOBWiMRLxU1/K+X4f2X/Q5Y=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "energy", " ", "deposite", " ", "for", " ", "13", "mm", " ", "plastics", 
    " ", "H10C9"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"EngLostList", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"37.9246", ",", "37.9246"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"37.93", ",", "37.67"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"37.95", ",", "37.158"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"38", ",", "36.434"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"38.1", ",", "35.497"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"38.3", ",", "34.231"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"38.5", ",", "33.292"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"39", ",", "31.555"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"39.5", ",", "30.251"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"40", ",", "29.185"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"41", ",", "27.481"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"42", ",", "26.133"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"45", ",", "23.196"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"50", ",", "20.034"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"55", ",", "17.864"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"60", ",", "16.24"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"70", ",", "13.915"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"80", ",", "12.294"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"100", ",", "10.148"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"120", ",", "8.7662"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"140", ",", "7.7921"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"160", ",", "7.0674"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"180", ",", "6.5046"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"200", ",", "6.0549"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"220", ",", "5.688"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"225.9", ",", "5.5924"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"240", ",", "5.3815"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"250", ",", "5.2467"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"260", ",", "5.1223"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LightOutput", "[", "x_", "]"}], ":=", 
    RowBox[{"Piecewise", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"0", "\[LessEqual]", " ", "x", "<", "37.9246"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Interpolation", "[", 
          RowBox[{"EngLostList", ",", "x"}], "]"}], ",", 
         RowBox[{"37.9246", "\[LessEqual]", " ", "x", "<", "260"}]}], "}"}]}],
       "}"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"LightOutput", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "260"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "260"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Dashed", "]"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.570423198866248*^9, 3.570423277021653*^9}, {
  3.570423398654059*^9, 3.570423409069872*^9}, {3.570423526293744*^9, 
  3.570423536045474*^9}, {3.570425576059782*^9, 3.5704255844454327`*^9}, {
  3.6095697613255663`*^9, 3.609569793443218*^9}, {3.609571483216066*^9, 
  3.609571487859487*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQfZ/N4Gq64zU7GM2/5tZbt6wt9jB6PSN3tlTWEThd
r7NYkyXrCpx+7vie42fmEzg922dqxefML3D6a2DGhg+ZLA4wetGVQJ/3mSJw
eu+9+KIdrqpwmp39S+WBWfpwOpNr0o9Pd03g9IatZguyYqzg9PNfnU9Za+3h
dF+V/zP7yQja5JfI88qVCLrh5/wXb68iaN4/t75miTvA6eW/PvwIKkDQt77L
/FdScoTTa7fX/7fXRdAN5Y/+x1ggaPXvyxmm+yHokm9GTNzVCJr3qwfr58sI
+sGW1awC9xH0lhI+Nt1XCDrqy2W2dAYnOL3scxzHbR0E7fCphPtwK4L+6euu
uWYCgt60UtJ96mwErZy4ryl9I4K+s2fCgoA9CHqKRPI+y+MImu0C+y/uuwh6
n/Yt8a/PEfQ3rgd9e14jaAD7SxX8
      "]], LineBox[CompressedData["
1:eJwVU2k0FAoDRa8iPVnGTpG1MLYZMwbjMmbG2HclRVlabCOyJgopkSWRJVth
0l6Ukh6VXuKUrEUkFaPH6yXy6onP9+Oee+6559x77o+ruifCLUhIQECgYgX/
56YBkbXfBRjIZ5+MZOpbg093jbwhzMBjl+8ZT+esUFWillMsxcADo9p5foEV
fL7PXzm2kYHXSlmhFl5WkHR79jxky4r+/j6rRswKnVdL+B4kBkzJ+kONw0Ca
SNgauiUDz4bUE4QvAeZBlupadgxcckv481ESMN8qYS3uycBAMNXjrBdwTemj
3w8/BshPY73vGALBcXeSxg8wEJ7xupP/O7Cp70Rp5yEGGMfmvd/1WiL3lN7g
+VMMZCrHfLxjZwnO5PLc8UIGbme4nE4Rs4QQo0eSW8VAdpQoWaCfjqifMU7W
dxmIhwNJfT8dXvtb2yfGGfj8863Z7zUW2NCe/+HlDAPMLObXP2Mt8EwlSPDe
vwysqjmfMGFvAdPXIhanxGxAXLL6qrxgDiW2e4M+zQZTdbqk7O3m6K/W6JFj
2sAuuscon2SO00sLXwRdbOArF6kVL26O5cYynb4gG1DGSSqPn5thXH2iOi7P
BuLeCjmbbc1QmtLUurvMBl7Nzw9LbjGDx9vMUbs6G2RPX27OXWeG9jP6Csot
Ngi/UeYj9pIGnlB8Xht/pe9cou+ULw1hY6Ip68CEtIdEx44cU/gUy3+i2DGx
dlTIzy3eFCw3LbsgDybEliPliwNMofLEmtC6jwnr8puhIqam6KmL5x3KY2Ii
TvKCzCQVJhGT3WPjTFwbNhOadqBis/Y8WWyGCcEaW0UnGhUb3guVmi0woRl0
SOm5FhV8t41BhaIsjO+WtRVaRUWJiecPexILl6Pf+BDuU3D8y55d8XQWqErW
nRN1FETxuI9rbVmI/1y6uuksBQ4KWdmCO1kQPyPK4URSsPzrkerddBbMOqws
w7dQMH2n+/jHHBZqpjukluQpeB0x+pdECQsN11PV7q2j4Nb7H42h11ggvXTg
XZk2QWC7gd3mwRWdnWAYcssEz7LKD2Zrs+HUHVrgaWOCPMWExwGdbMR2zer5
JJDxdMZvNnSAjTfEEAtKGBmLfzBVY96zYfJxU/FGfzKCAyWSTyywMaocfH8N
iwzzqzzaVTVblNcetpWRJGOCPnjze6ItZN6euL18iQQliZax5eO2oB2NVB0p
I8H1Q/UGkXxbmL4i/3Mth4QHGeFhijxbtLDjyVsPkZDXvXoL+mxRu09o1XZL
Esz3kCpP6nJAi77uoj5sjEiSwst8Cgeln8WuiHQbo3aNwFKpNQee+SMlgu3G
kLjcuePaNg7EW9yKta8bY+LbHtneNA52HQycdEozRl563mmlEQ76vwaaDBuu
+Ly/D1/PtkPuPwMSE+eM4Px6w7fFIjvE1MuEhOUaoWmt4X67ajtU5BM6BE4Y
4VRwlOenO3ZYOhohYx9rBAP1f/UUx+ww97kq64CXEeIrBN8dN7LHAc8fhfdk
jLC+kGC1a9AebzWK8k3OG+JQO/nu5ff2MNC+tNR/1hCjc156P/6yR3r+F9Mj
pw1x071YvkDAAdk6G6b5yYbwktg427HFATVMlzGNAENUZmldIB92gN6LXBlj
HUMYp9JW/67qiOieVi1GmwGOOXWe09RxROnaUfzWbIBueV9dkB3hUdDv0tVg
sPKbJPcojiPUUomakTwD8EZaq95EOuK+b6rv+lwDbKSy6bWPHCFAKqw74m+A
dTPusZaBTlj17rV3wW8G2N70cd32cCfs/C2wcuaXPniph8oPxjkhadFzTcus
PpgKRe01WU5oH3IQTnyrjxT2kNT6RidomL9qPXhDH/NV/jder3ZG18KpCbaP
Psa8wqYi65wxnpwmi0Yi4swGWHtvOSPx9Kx1cD0RG1QsL/q2OENhpIJUVEEE
fUrcj93rjNDbSWT5TCLKEhv6lJadkXLmCrXMjwjd7l/vAnRc4F8iUpm/ngj+
nE2nWKoLajI9uj6E6cGP3lsVaOSKOKOuvUR7Xdj4aUQfpbjC5+p/w/oMXWxN
iWWVm7uCKjDVRTHTxfc2xb8GWa44r/3HDx8dXWQxA0n2O1zRs6vOZUZUF/cd
5p8aprlCgzKQRH2hA8IO2emlflfwOOpblL118Dx2h0lxvBuKMyh+j2K3wnFo
YjX7rTu6ezsT37dqI+VeUGoc1ROSES6CUs5a0Ld04RsleSHasV16UEsTCzMW
J4JHvFGQqLWcLqUBM0bRBjXN7eg1/JQ2a6iOorZvr7Zl+mA33aOgyEUNFx4w
rCX5O0Bdt1O8NGszdHYtF3sQd6J4888SkSlVdGo/1BXP3YXqJ96T5mxVTBbz
az2G/OCs0kePalbBECN1r1iOPzi2ZtQFCxU4vJSSv07fjY9h2eUJxzZhUc+H
XjC+G99k3Kv3128EVXWzoEnBHiwmFoy1dSujq+dDSbF1AN51udx2F1VGufcO
ntWnAFw+dKdH2l8Ji1wP99qzgagmGwfjpiLO7Vx10JkWhLekklE/OUVkCV/Z
e384CL1/VzYVnlLAetuBn+8zg6HetFtIYFEez33uCDoR9+L58t9hm5LkIS0k
Vxvzbi8y2N2v4v6TQ/lh/Ycf0vZhSbFtCSflkNyIq5Ja+3FDhXZQapMcpo/1
mi4N7IcvPyOEd1MWRWpKNGLiAahWzvd1u8jixbaJQQW9EPxDz+Lpzchgp0O9
Q8dwCDRfLJVwcmWwVUqd/OBIKJ5VfcpNtJBBavim5hD9MDT+EajpOykNhfPd
DX59Ybgom/uQWyINkczEdOmYcKzj8XP93KSRJsr7lqERARZ4J8vWSsPCP7Of
3hGBDEX3oj+fEDB9e+2QfFcEBvob6BceE1C2Nn107kUE0uP65ZMfEfDzWvJk
fV8EbqWtCqG0EtD0K/qHzFgENOU+xNQ3E0Aq9VP+8j0CbluN1UpuESAdUnLL
WZKL/FmidUXlSj7hDalFiotBnwba0QoCnjyUvbtVmgth+fjAgHICoiXPNq+W
42LsItdeu4yAnns5T5qVueD48AMbigjIFU4f0NrCxQtaUkP/aQL23Xq87exW
Li6VFd+9n00AfIWGhXS5oJ5q/FyRRcCX68nvRohcqCiVjR3IJMDJO4F/hsTF
XOic8KrjBGgK3jsgaMKFdcHIyak0An7VL0yHU7ioC9CkdacScGUp+iuHxkWQ
cIZ2+VEC0ni3o+6acVH4MSY4PYUAX7fZeXULLnJiYnpDk1f2LxrE5dO5aGmL
jPA4QoBobcTPZUsusjo8aOZJBPwPYLdGfA==
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}]],
  PlotRange->{{0, 260}, {0, All}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.5704235437412558`*^9, 3.570482995505392*^9, 
  3.570486922897128*^9, 3.5706094191285567`*^9, 3.5706895197494926`*^9, 
  3.57085004512862*^9, 3.5716803594515667`*^9, 3.60956931404464*^9, 
  3.6095693457334127`*^9, 3.609571489166973*^9, 3.609716336736059*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plastics", " ", "Signal"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]plastic", "=", 
     RowBox[{"1", "/", "1.58"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"att", "=", 
     RowBox[{"{", 
      RowBox[{"4000", ",", "2500"}], "}"}]}], ";"}], " ", 
   RowBox[{"(*", " ", "mm", " ", "*)"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5704264725649033`*^9, 3.5704264880760403`*^9}, {
   3.570426786306381*^9, 3.570426793144866*^9}, 3.5704310270495243`*^9, 
   3.570483005140098*^9, {3.570500370613841*^9, 3.570500381867407*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ToF", "[", 
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", 
         RowBox[{"\[Phi]NN", " ", "\[Degree]"}], ",", "1"}], "]"}], ",", 
       "1"}], "]"}], ",", 
     RowBox[{"LightOutput", "[", 
      RowBox[{"KE", "[", 
       RowBox[{"P", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", 
         RowBox[{"\[Phi]NN", " ", "\[Degree]"}], ",", "1"}], "]"}], "]"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", "40", ",", " ", "140"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]NN", ",", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "Dashed", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570426835144021*^9, 3.570426897114521*^9}, {
  3.570426967777341*^9, 3.57042697020024*^9}, {3.5704272183011417`*^9, 
  3.570427239454937*^9}, {3.5704274063153477`*^9, 3.5704274347119217`*^9}, {
  3.570485648511042*^9, 3.570485663244219*^9}, {3.609569966227276*^9, 
  3.609569967695765*^9}, {3.609571465807664*^9, 3.609571480588421*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
guOurZ9UgE9BsV5Ngf3A59lj+v7Z7cDnyPErM49eA59bvXWlnLuAz6NWn1NX
nQM+VU2XmPYnAJ/8sQJuXD7AJ+3xGJ9+D+DzhUpKR3Qy6f0fL5Uwewb43GFn
Xsn1Bfh8rmGUNlkLfA6/SHjz1B34/PyV55zmDuDz4E6pj0c1gM/W13mOFxmA
z2c3DX/mHgE+OzZ+eLd2MfBpX85S6TwIfK7ZlPO63R34FJ6Svcw6Cf0c5xv8
kx5WwOcmicro/U+BzxPpD5OUx2X/4bPt4sTwKX3g80V1r8OpIODTp02+ccES
4LPuY4yzkRrwORFt4RC5Efhcc6dOrMkU+Dx3ayydIPVbpZliFgo/Bz5/rTs2
NfQB+DQ7cNh6fQTwuawqaVAyDvjMoTMte+IOfDKoMuj2uQGffkuOqPYlAJ9C
uiMMt0OBz7bHn87Q9AGfTzWn621eAJ/TSU83b3IGPk2vtHcaawCfIvEKsTpb
gU+LmzuSttAAn0yWKvRvLIDPY2YmNvpMwOe9HuPlld3AZ5CQ3ntTZ+DT/NBA
heII8LmrfZWxpCnwmfLV++qiu8Dn++sjQS1fgM/pWz931e4EPp06PyXlewKf
5eMnREZZgM8zJh+/uGwBPoft6VkiSfMQ9oYTUR9NgE+n8K+5vKR5CCv+Awa9
pHmIXbEq2xvagM/dahU7n5LmIY6pLg3ujQY+XX+3E0Kk82M+Dxbe9ncBPm9v
ES6fJs1DLJWpH5AOBj49A4WX15LmIWLP7mzPfUqKTxGu9NJjwGfX+NPAg9uB
Txsj9t/mysDn7WElt4XT4v/weSzhcZmtCfBZW/375Gt64LNrbxjtjXbgM/3N
txmX48BnaOmjCNvPwKe3c5ngQ0Pgc1H3ch/lG6T9s+Dkvrf9wKf54oZCRS3g
03kFm8IrV+Azplqh7wAD8Lnv6lb3IWVSPvSX0pEu0rzSgKTZkg0kPrcpGMvJ
keaVPE9enRUknW+UmXGwFyLx6btLn+ggzSslb2tzkyTxGdvO1baUdP4x68nH
sTJn4LNY6PfDBtK80olK5727g4BPC7EfjzxJ80q2B3Pyqp4AnwI5JYxrSOcl
P1a8WWutCnyOa914m06aV+ra2hb7YxL4DK3JPWhDmlfS1fhkdJmOFJ/n3mha
kM5XJrGXq0keAz5jLn+yvUyaV/L0qRnfZQB8vnCpTu4mzSsls59Xl+oDPuWi
DQ1zSfNKxasPPH3nDHw+2zN4TZt0PjMm7UJ39Ubgs0q6d2nkOsrxuXPL4Mxp
Ep8fl7w8V/OQcnw2n5ot8AmiHJ9Cdhl115wpx+eBWyJph6Ipx+eRddVnF3RS
js8NKQEWRfaU4/OvaqH2Jespx6dFrkTSKwPK8Xn8sPOG6y2U47N964xWZw/l
+BR4KXaOvphyfHqKbLwrrk45Piub00PzaSnHZxVD98JIRcr754EnPGsYSOdz
jyrk9719RHn/1OsKccoMprx/xid3/v7LhfL+uS6Alb8khvL+uZzGRs2ui/L+
2eI7aifvQHn/ZH70403FBsr7p9GPg8yXjCjvnzz3I7xKWynvn9ora2rE+inv
n7rqx5rTrlPeP8UHhpOuaVDeP01ZOLhC6Cjvn883PfbsWk85v51m+sr8shX4
jDubbmT4lHJ+u0cgoV83jHJ+a7Li+dOqk5Tz264HFjcqz1POb6PTNnoX/EU5
v2XLefam/ATl/PaE7R7PyM3/l/x2hPlinSnl/JbW+hH/wQ7K+W17v9bi418o
57cOetbDpRWU89sDjJvrt+lQzm/XOomcer+Qcn5bnbp0InIT5fpzgk2D//VH
4POvq9nhai8p159s22n6/c9Srj9vL9kkv/E05fqz1lkrJugC5fpzwVfHsNcD
lOvPE/VPlhNulOvPoI9ucedVKdefoilGBo5WlOvPkfWRPtW9lOvPx/JFzNU/
VlKsP/fKhemo11CuP/szPUI6d1OuPwf6ko7kL6Zcf+5a43UwehtlfUg44J00
61/AZ9GJsoTMesr60IM12ndVYinrQ5OJt6qM/CnrQ2ULwjxY0ynrQ8qnD3vU
f6OsD42FyN9s8KKsD3F/et5Tp0NZH7puesDN256yPrSP87djwzcpivpQS/Wd
9cK0lPWhUbVM0321lPUh9oorXHHGlPWhdhVh4SkeyvqQw1aZ3gENynr055Jw
lYjPwOeAkuVPl3eU9Wdvo5Or/hVflPTmv/gTzvCGU9aXa4tbO01yKevJTVLO
khW/xCjqx25cqzuOh1DWi8t4nqhqGFLWh535Wo5OulHWgx+luUqmTEtR1H/7
EssexbBT1nsjJTQSxz9S1nefRKzmMrWirOf6jOd5NIpR1m8VGyyY0nSBz8aE
otJD7sCn8d1rlzRGgc+UifRzNzuAz9xC0/NF08Bn+drtfsaXgU+bWPU33DeA
z6wBX7WgWODT5tf9/fwXgc9Y+6X9dtdJ99Vs79p0uBD41Ju4tCaEHvoBo1tv
VreMAZ8djtwveGNJ++fayi10LsDntDqb/4QV8Lk6fPZEjTzwGVq1/MNIIPC5
9DZbaOAW4PPCxYXqkmyg3wbYyUntuwZ8slsaJgmLAJ8CR65vCE4GPtlChkOl
x4BPmXXGYvXKpPdt/tkjm48Bn/av39AEvQE+07fv6t+kAHxOv04eb3YBPjF/
mF+6qiEJ0WroL2F+MZ+Y75gjnhUnZaG/hPnF/GfRfi70ew79Jcw39oeu8SaN
tEToL2H+sX9Udn0Z3h8H/SXsD9hfvs+OFJ26B/0l7B/Yf4Y2LeRduBz6S9hf
sD+pZp/j5L8D/SXsP9i/ONJ97BJTob+E/Qn7G0dt/qPGZugvYf/C/ndH8G3M
Xj/oL2F/w/74dfgYt/ld6C9h/8P+2Zmxhf/mM+gvYX/E/ir+O/5oyQLoL+H9
xHflmtE1t8A/qe0nrU2L/H+IgT/i/eRkWuVS9xrwP7yfDAQYbVh0DvwN7ydF
i3dbbYgA/8L7ybZS8eRrN8Cf8H6yKVPvScBS8B+8nxy/MBx1qxj8Be8ntTSf
hmRjwT/wfiJpTBMv/hz8Ae8n96Pb9i10Av7xftIVdFeIvgD4xvtJ21jz+6s3
gF+8n6S0RHfWjcv/wyfO90RpFWiDSoFPavme9LDy10Yh4BPne9dZlYL7KoFP
nO8NLxOdZAkDPnG+xzC4Vqg6APjE+d6WaFuN4mvAJ8736N6ELxpaBHzifC/1
aG6iYw7wifM973Qr1UVhwCfO9yaGbt/9XQV84nxv2w1/r5jDwCfO916Vbl7T
lQJ84nzPjrsnY2828InzvZtPHveLfAE+cT32OblLkr8I+KRWj2lrKQVw8QGf
uB5rOyEqXFcOfOJ6rHHisGFyACk+UT0mzZ8dNOoFfOJ6bLZoZapXDvCJ67F3
5rzm2xmAT1yP2U6e49icDnziekxh+9XMNX7AJ67HBmf4SvTKgU9cj3nTbTve
Ywp84nps5fatXp9jgU9cj+m+UhzPSgI+cT3m53YoM6MH+MR6STQvcfp7PvBJ
TS9Ra17GXMgNfGK95H5JoaNcKfCJ9RLerBVhlT7AJ9ZL7F6djahzBz6xXnL3
WP929kzgE+slUdYPfgTQAJ9YL3mcaVnLcwn4xHrJ7rrbBxM8gU+sl8jcVhSV
KAY+sV7y/ofycloD4BPrJb9iKn/xnQE+sV4ieP5zePI54BPrJQonbgdpdQKf
WM+01eA14swDPqnpmVszDEqylgCfWM+8kBLlNFMMfGI984gXm4mtF/CJ9czn
jXx3DE8Cn1jPjJ6QCLVLBz6xnvlXOkvf1b/z0Xk+sZ5pvsc9ii4J+MR6psyJ
9g7lU8An1jNn6b/QuxQAn1jPlN89MdGxG/jEeubJr4cOOoQAn1jPVNSzlVSI
AD6xnvk9otBgyQcSn6jfYJDyxMDpKvBJrd/A6206/oML+MT9hq6UY4HqJD5x
vyE87jbj5dPAJ+43jBzMVw5wAz5xv4FG8Ofh0DTgE/cbhDccpLs5BXzifkPQ
scSxqQTgE/cbKrsfnhU4CXzifgNtgW3w+nxSfKJ+Q/m172/9dIFP3G8IMFws
2h4EfOJ+g5inaNmRMOAT9xskNRZKLGgHPnE/EMcntX4gjk/cD8TxifuBOD5x
PxDHJ+4H4vjE/UAcn7gfiOMT9wNxfOJ+II5P3A/E8Yn7gTg+cT8QxyfuB+L4
xP16vH9S69fj/RP36/H+ifv1eP/E/Xq8f+J+Pd4/cb8e75+4X4/3T9yvx/sn
7tfj/RP36/H+ifv1eP/E/Xq8f+J+Pd4/8TwNzm+pzdPg/BbP0+D8Fs/T4PwW
z9Pg/BbP0+D8Fs/T4PwWz9Pg/BbP0+D8Fs/T4PwWz9Pg/BbP0+D8Fs/T4PwW
z9Pg/BbPu+H6k9q8G64/8bwbrj/xvBuuP/G8G64/8bwbrj/xvBuuP/G8G64/
8bwbrj/xvBuuP/G8G64/8bwbrj/xvBuuP/G8G64/8Twq1oeozaNifQjPo2J9
CM+jYn0Iz6NifQjPo2J9CM+jYn0Iz6NifQjPo2J9CM+jYn0Iz6NifQjPo2J9
CM+jYn0Iz6NifQjPi2M9mtq8ONaf8bw41pvxvDjWl/G8ONaT8bw41o/xvDjW
i/G8ONaH8bw41oPxvDjWf/G8ONZ78bw41nfxvDjWc/G8ONZv8fkUfH4Fn0/B
51HweRV8/gSfT8HnTfB5FHy+BJ8/wedJ8HkTfH4Eny/B50XweRJ8PgSfH8Hn
QfB5EXz+A58Pwec98HkQfL4Dn//A5znweY/A6CVXv7lA/yj9gmCkbzKctxp2
SjmxKwnsj/eY87gfAt/y7il8fRPQPxLPcDDj44bzWeZrW0XiOcDWK3m+vXIN
8P/K1PPTryLoJyVY9eqGV5POc/l2Ly2tBLtosoGDqxb8g+1Gg1/Oeegv8ehU
SldfgPNf64M3XU44D3Yve2ypXzL4z4DV6fLoXOg3rdI/rfg+A86LnVDvnzBK
BruPQz76fBL4l+UKh4MXv0D/ye72cznJVjhfFv7rUObWRrA7J/blMD8C/1Nd
su6apgP0oz5PTtw5pQPn0e59jAgTUAN76+P9w/QS4J90RdF9jiuhP3XK/E7B
7XE4vybP8j276SvY1VmRcQk14L8MXTFNXkqSRNZcv6pgaVTt4mE470ZkJqiF
9IJ9pU9OOC8b/Lt6TO6EUxb0r9jGuVcnqcL5uBHllctVlcHeFjJhePkj+P/U
4NEbvrHQz9KqGy2OZIXzdIpfug4o0oHNmucYzBguTaydiw+NsJZg49XQ39rP
01Jy0wPO3zlofzPkOAH27oO89FueQPywyVapLHsM/a7IS6fpIp/BfRicjz2k
Vt4FOyNXb5V4I8TXw66x8UdHof/Fnu3YWFQO5/sEedcw7SwCW+9VUvtJZog/
0f4DGqwOEH9dMeH1x89DvCXeZPXujga7VtVgt/8diL/+wqhzDt8g/iRK81ns
WSHeNn9eVZ/EBHZpgvbZCCmIP5+6srH+KxB/+o0d7io3Id482l6LSpWC3V++
QnjXY4g/Cd4FTL8jIP72vWM5+PYcxNv9D/10HmfAPvfVYbNoHMQff2sx66ZU
iL/+uCEF1USIN8a1749digW7S4irKD4K4k/KR2w0uBviT2VR//nXtRBv55pO
e7x5DvaF3epNJrch/mSHZqoMD0D8+dH2sxFbSPeF5Z0t+bQB7DO8RzeH8kH8
ncrZf/SUIMTfqqZATe8BiLe73K9arn0Ce68B/5hEOcRf9Jarz1WlIP6uXG5O
PN8B8ab3+8voxvdgv+44c5EniaRXS6fKXj0P8cf0jW7b+bUQb3x20+cjZcAW
5D/lVVAH8ad782vpXT+Iv76SjuYLv+G8bpVT+5dbo2D7GlWs1XOH+BN4mbNg
AT/EX++ekkOqRyDeUm+Hemibg/1s2CdCuwziL0Zq1n53IcTflsfhkjUlEG96
rHJ6+jlgdx5Ok914D+LvlYLOgKcFad53kTavTy7Em+Elmp9ql8HmS0m19ZyC
/JQh56ip1xHSPNPG7m35kRBvW0N2fn0UATarQWGPfDnE32JTX6v9A6TzGAFn
161gIN2Ht7lyknYB2L9zefbfXkHqj30uXnAgDeLvx6Pnz5yLIN6M3nKJCxaA
7bT99U6aexB/jW80VL8GQPz1psqsDgqFeHu2ryjyeyDY0z+f9ew7A/EXe2m5
cFY8xN/tlSs2H4yCeLspulUlIQJszmi6LI0QiD/VUtHxPe8h/vYILn77r/fD
fLxJ1ukoqNSAHZdbGeVWAvHHYja2yc4I4q/2be5HhnUQb2pSC7lzVoNNQ1e6
7hc7xF/7kLhfMSfEX/gKqRs2HyHebO1Kibz3YOdt5tRuyIf4WxvouM5ZAOJP
25Mjwe0txFum+NtXGrVgcxS0Fb85C/HH1mgZHhVK2v+SVTbJiUO8yf1yPews
DLYmY/WWbQ8h/hzHnn+YcYL4e9d/Oen8IMRbc7lPp1QP2O534jlc7CH+rEom
zEWZIf4YbUYMxA0g3n7Lcza83Qn25Sj6wsgsiL87hyaS4y5C/EW49wq1pUC8
fe4plTaLB3u7Jm8N4zWIv69iOZJpeyH+AsRditKSId6m0lZZRSaC3dYRN1E6
AvHH+qrDWuUAxJ/NQo5DCmEQb25eHm6jwWCPnzcSkSyB+DOPnCms/ATxRzPq
8UNlFu6vGNusPVY/BfbuyTImbQGIP7Ul/M9ML5DmSV/P/pC4CvH2NuIHY/QV
sKdlI0PkbpHyzzDvU0FeEH/JXS8bX/pBvG311HrE5AP2EaJpnUgwxN/xm4zV
T6Mg/gIHc3jXh0K8xXDeCFQLArs++4hfli/En1uo2f3xBoi/M7PO8hlVEG+5
rntdPSrBvmJeYm2RB/GnXcja7a0L8Re2Z+jDQxmIt8OZP+otpcDeXX2/25QJ
4u/ezvMblzFD/O3skB13bYJ40wp8bf6kAexL699Mx2VC/B1Zc9+Engvib2HH
r8mC5xBvl1R3JuY8Btv61FPOpkCIv1OTX1/xeUP80XZmGZvzQbz1JXxyHFgK
dvaggb3xbYi/sFMe27ZYk87by3//4tYB8fbR32vGsxXsh7tUGw9aQvzJN9vM
FE7CPLzwdu3PRhoQb7YvuivytoHtb/z7Fk0SqR+81Jb7XQTE34qEEIXaSIi3
B6NtK9aHgi3kkmkekgrxt5G5YaeMFsRfy+9+ddY4iLf+40rXhM6BPVM1Pisw
APF3d89F5d3mEH+L83YuZCDd59sV9nLWPgDsdPXacctrEH+yE0t+BnRA/C1q
OfK66jfEG/HowUE60n05Po+alRR5IP4ef1BweXce4k88xFLSJAvi7VR8lozv
ZbBp+MZF68og/rqYfP1unCLNk67UFCk4DfHGkqpWWeoBtmKd/kpPP4g/faUP
9lfCIf5UXBPWV/lDvK18pfY70xdsWnq7LwWeEH8OL7oPn3oF8af2esW1RxUQ
b29U/JKCy8FmOWRzhTUb4m9FPrNetBbpPBYr/flT4hBvApskmllEwWYfXSR2
ZQHEH1Py84KcBRB/72ZXMWXUQrx52UtcpnlFykfTk51sUyD+tj88f3WcBeIv
JcFeROkBxNvw+xJFk2qwA2nvhPJ7Q/yd6dmVpeUG8cdXKL9CgBPiLaBM/ctX
NrClVC5wDl2H+COs6EKdLSD+6sq32q9vhnhbW9efmvcG7BvbXEv4jSH+BmV6
9qaOQPwZTTx3rN0E8VY3Rlg/XA+2TJPkw9QoiD+7jXUhXL4Qf3UXTKdj/CHe
7im6/PjgBXaHQl5SQRzE39X6Fm9eAuIv2W7rVPUZiLdM1tjro2Fgd7p76RR3
Q/xpCUp8K94H8bf2damWCOl+dIZuhdcypPu1ugRD01pJ/eQRN2fB0nbS+W42
5vjLpPu3uvTO6V4g3Ydv29fU7b0U4i/8fl52cwxpnjdNYoSOdJ/6QtuNlv2k
+/IZH8b19pZA/CX0h1f7u0L8BTsy2ywn3bfu9yOXboR0n36j5rYdB7wh/qRL
NFU2hUD8aa4/mfqddB9YWPL5X9dJ9+3b31Rfvf8UxJ/GEePrr55B/L2+bTpd
UQbxFlD5qcSSdJ/YT5mlGkEZEH+GAXy0qWoQf46f/U0FVkC86bjqDOSS7uu/
wDl9qWUG+t+daeuH9s/Aecnrn8rb+kj3k+3WmfAyegb2zsE3/TsvQPy9526r
VmeE+Jt8wOfJWgXxpp8jkmd4B2yZB1r96e4Qf8sNAjiWOEL8WfE6O9sugnhb
ohhgHsAM9vIdHGemrkH8DdIO/E40hvgzPuMu/raOdJ9YF3dq6WvSfnhJRv/C
Xoi/bzsD8z5/hvhjuVXAFL4O4q3h6oE+gbVgX/xYnmUZBvHnOKYyteUUxN9R
kRVmgh4Qb8rBuek7T4I9+zRQ0fUsxJ+GjIHFkc0Qf+XTg5blIaT79xx4CheS
7nPbtNDpu91HiD+bJ/YjVqTzvVOqo4GhpPv6zm1fZKVIsm8RiecvkOZzKjd0
We4gnfcNmTDy6SPd76fHt5g3mmR33pE7IkKa7zCWf+BuTDoPPHlIeL8sKd6E
Uxg6X5HuB8z8KTLtQpr/WL2UR7yPdP67y93ptBQp3tZ0f7v9gHSfoLn6m4tv
SPM+ngcifgSTzofXLS0faSXdN+i6LtHFkWSnvfrAe5M0D+T6ql1xgnR+/LRN
ZIwH6X7Cim0/QxhI9okVMoP3SPNCE7aH1bNJ58t9rIotS0j3GTIqtKQrkuzi
hruVo6R5ogHeQKZNUxB/7LdZjXRIv58hzMiu85B0H+KjV6oXtiZC/H0XyDMf
ooP4u6lREbOG9PsaQ45ybKmk+xPpZ8uED5Pmkd6WdDl6ks6vnzuYeWIL6fc3
egT1A5NJ9y0OevMfCiHNKyn2LvfJJ51vdxebqdYi/T7HmqTD++NI9zO6yJi2
vtOF+AtgeK0RRzr/3v3Yp8B3DcRbinWzQAnpPsfoy6eHtwWT5v013D4YukD8
2T6x3u/gCvEmvLNQ14v0+y0ysQ2LWkjzUNWjHfSLSOetNTY/Nhsg3Q9pud5T
xYxkj/atOKHZTjn+cLzheKQWfzjecDxSiz8cbzgeqcUfjjccj9TiD8cbjkdq
8YfjDccjtfjD8YbjkVr84XjD8Ugt/nC84XikFn843nA8Uos/HG84HqnFH443
HI/U4g/HG45HavGH4w3HI44/nH/ifBPno9TyT5xv4nwU558RKP/E+SbOR5lQ
/pmI8k+cb+J8tAnlnzIo/8T5Js5HqeWfON/E+egvKvknzjdxPorzzy6Uf+J8
E+ej1PJPnG/ifBTnnyIo/8T5Js5HqeWfON/E+Si1/BPnmzgfTUb5pxPKP3G+
ifNRmmf/7/xTE+WfON/E+SjOP7H+gvUWrMdQ01+w3oL1GGr6C9ZbsB5DTX/B
egvWY6jpL1hvwXoMNf0F6y1Yj6Gmv2C9Besx1PQXrLdgPYaa/oL1FqzHUNNf
sN6C9Rhq+gvWW7AeQ01/wXoL1mOo6S9Yb8F6DDX9BestWI/B+gvuP+B+A+5H
UOs/4H4D7kdQ6z/gfgPuR1DrP+B+A+5HUOs/4H4D7kdQ6z/gfgPuR1DrP+B+
A+5HUOs/4H4D7kdQ6z/gfgPuR1DrP+B+A+5HUOs/4H4D7kdQ6z/gfgPuR1Dr
P+B+A+5HUOs/4H4D7kfg/gPuv+N+O+7HU+u/43477sdT67/jfjvux1Prv+N+
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
fm9tkU3ga6dwWP/Ezs0to2dhfWdj5wU2szL/fB///t4qhk53gwD4flL73mdH
g+H7Xh8V6RhG4Pv49xjPpFtpv/aC73sVWY/G+sL3Ldw1lD/2wPd3o9/nNGZZ
7NROul/vy3Op7Tan4fsfNYM8Bj/A9/Hvtb72XH7Fj3RfX/LhYJVed/i+oRCD
pfR7+D7+/d7kbVyiN0n3bf547jfDQfr+umajHXHv4Pv495z/3X//38X/7z7/
f5f/f9f/qMUHNf9vGf/87HQyfL/tZ/2sQAZ8Pze/2GVCAr6Pf9/uGc3t+lEr
iO+BevHyem54Py9Kax7Zpwnxzjx33r5wrv5b17rz3PNKeF93LY0Sn9wH690d
d7Q4zgLrOV2yat+kDOudn7s/Y349naaKlzxFsF7rRksVM31Y77XbxZlxGlhv
W5xZqtFqWG/d3H048+vx0WtoRmfBerqOKVGLdWG91ieet+1/if2z3l7pJ2uy
JWA9u7n7rebXC6a/mLoyGda7cN76wzIdWG9dPMupB2OwnvvsbILoclhPc+6+
uvn1OEfuPOiKh/UqjBYQLpqwnuT1kJ6Zr7CepZBP02t+WK997v7J+fXObnn0
rSwG1vu2Nph3BWn/uRxL+AkNw3o8IhljWaT9amLuPtn59Sy87HJTz/3n1vtT
vB+o4P2f5uN/2l/+p/35fzre/qffBz4MEaFe3yE/oPdofDtRAvkBtfdXq8GA
iZ4t5AePBSO562bgPhtq7zeWcO2hm0Ok+62vVA3fvQr/vvQyXqYlprC+y0Fl
GvavsP7OPVyllr3w/Z+/G9PpMuH7nC9unD6pC9+3lzAw39AN39/irSvl3EXK
j+Roe1+kwPfXun575qIO3xfcv0pftQW+/3vdsakh0nzH5vtu6zgvwvdV6MYO
MW6F78slBKRKNZB+fyBWZXsDaX7pwuCtY02J8H3+Y/YsqzbB94/Iv/buJd3X
LDPjYC9E+r6+3GzfMtL3q47k1/61Eb6/OTL9utfL/7l//9/F/+8+/3+X/3/X
/6jFD9X4oJKfU8u/cf5/qkpdrIsd3ge4HvidMcQpewPi/7UAb4MbA/z/+9MO
1p27Cp8XWAo6jk3B+7QkhtuRNx0+31EgGmA6Dp+HDtltepBEqg9n4g2zR+Bz
h1vrn4XFkT7/OjbdQNqfIvxPjltHw+dag4tNur7A55I7bvaYnfv//n1q/z61
v58afmrPD/OBnz+ut3F9nbu33fdqOfjDzbqTJ4USSfUA32jo8UvwPu7P2Efj
6Aj+EvQ25PIyAXj/4vuFHM/32+dfg/XvizG2/+v3xf+5z18mwcY0Bta3une9
4MMBWH+XU92D2oWwfge6P4xRbReP/BVY//OJGoHiYFh/GUNlzUQYrE+TkBn9
TR/Wv3TJ+Onrn5Cf4/sBHT427dyQDuvvqz6evN8X1ufYPnVJOwDWf3bdgOey
Nqz/S0n0McsgrI/v/6wWUCLuXYL1jVex6GR6wvqd15piNL1hfZsrykyfCVj/
t3nMVd8uWB/f7+vL2p3+MAnWPz1jesHrFKyfYn2/7ZsHrM/q/tbr6WZYPz7y
t4x4G6yPfz9G3HVnuCbpfZ4eURvQT6onj1S82aVJqgf3GDO0rVeG9cM8Hr38
Saov8f38/+n1/ag8n9Q/fD74fvP/NL//af/8T8fXf/r98J9+v/Gi+/nWCi+m
25AK6w3/usL/kxfev4H973qOrYD1vqL+4/G2rL269+D9bIru35Q8XeVZHgfr
F1ZU1/Gwwfqum6Ku67HC+rj/Xh5lyMNxHdbH9+tab+lV64+A9cXP2V6QpIP1
n59s6PGbBD6L0PzJegGagekrsD6+P3tM663Kq0BYf+Os2IHlk7D/rawxFBn+
Auvj+Su2tPPsHKmwPr4f/4XrxnZLH1j/1HeX1pnvsD5vVktb/CdY/xuaPzzX
GCCtmgjr49+/EO5TUkzzhPUth29FPPgG6+9et97iRDusj+dv12WNCkbFwvrd
6PdtjpQ2fQ0nvc/uVX0ptSPlH1PsjSWnWmB9PH++8Gu7wAgpf8G/p7M+k1Zf
mLR+b9uCg99I+Q9fkWd+Ael9ic9fnJz5neBAWh//XohF01dFS9L7UqaU5rAp
qZ6fdHF9z9oK69Oi80eLks5tniLlV/j3ENR2MrDoeMH6xYbvd2aPwvqmBTRR
yR2wvj46f3e5f3gy6zysj+97j9++urXDD9b/cOSby5ufsH74DHOTWT+sj8+f
HuLpYLS+COs/R/dZn+26pikeCut/mdn3o2cG1j8fKB665zus34fOX78eKanb
fhnWf4Du683SOHCG9xysn/P0ZUXXQohfKdnBbf508H7A9w8UyahwbS+A9fF9
pI1Vvl7VSbD+JZt99s+5YP3dzPdO/uCG9fH9G8/2V7y3q4D12cPV/CUPQ31R
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
L+wfQbVe4fN7eH2m2p9RrcdU+7d/Albo9a0=
   "], {{
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlF9MjXEYx58K53jP6ZxO50abkWoVxVpj2mpjCjdMdYupFONCzU2LVlxh
tYkiE1bTkLGs0qLYbGZjpihKpT+qdejv1CYry+e3x8W79/t8n+/z9/d73w1Z
uemn/EUkjyeAx+cRiV0p8sgSieQ9hn0fHA0eBz8EZ7hFcleI/HGIXOYZChSx
sCfxx6FrQDO/SqQdPtxPZL1XJCRIpA1uC/4pdI2W1pkAPwFvAv8APwZP847H
fmppvhnsZvAC+bKcIi3U6neJjMDXwlfTzwhcDb5ahljGtwR/gmcXMb/wNdBD
b7BIHTgHzSCaB/ifwfvg38BfgJ+B/wT/06O91oPT8F9CtwbNrEtrdMIXwMXg
S2QHhXZmodY086ajO0JPC/B74VqZ2w++nJjX2KnEd9noAVwJf5E8qeRZhB+g
bhh1b6P1EN+FpjFA9xGKboz6HXAv8V+HD4UfJOYO9jrwN3CVpTmGwTXgUvop
pp997GcPXCt5ylczC3gruhazB2qNkjcKrQ2unTpF8O/QZHh1Z7P4XeQoQrON
5wA5P5jzRxNBTDX6CvIuoyvmUs2Z88eOBqe6dS/t/2fyWTrXkEv3XoddSJ14
9jCA3YMmGG0H+C14jh0GsKt87G7qXUUfQs2v4GvgETTJnEETmnNuPef99Crg
V8T8RbMWfR/6G+Bej+6rEjxO7FliPxI7bul+zW6Pe/Vemh4T0DdhH2SebHrc
DC6jvzjeadztFOJfEPue2ALTI+8qzvgwOevRdBKTST/z8Am8q8z3Ah4lRyb4
Fto+7DPoR6k1QM175Aty6z6i0M3gn6COg332eHSeCjT9Hr0HNy29ozuIqUX/
Bb6bPFfMfrB9xKfgj2CG3+Dd/tqvyWF6Pk2PFV4922ybzmD6j4VLZkYntSft
eq7mTJd4lzLLZ/Rtph90Jy2t89yhtTrBR8m1kzxlbv3O8onJc+u9DAdvd+rd
MvcqiR42kucY8c28h7FL8PfjT4Kbos8mu+7C7CHWpjVM/kCn7tTs87tH/193
Lf0uG+36bZr/Vi61w5x6L9zgSPIK+iJzTuQ7xH4Wzb+G/KFu/S7THPo/i7Hp
P+082kR6y4F3EVuC7aDGPzfdytM=
         "]], PolygonBox[CompressedData["
1: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
Y6DgiaKfULa802Ped9hK8ibUhv0H1S1Tcr7kx7hVI/qgMH7tJXpC9FrhzhBu
rOQdW3a8r+TtwLel9vqQPpI2vFTwzPC/coPa7zrJ2F51vpR/INZxWdN/U/pG
zGXinxv+Z7YRPE/wq5I3VrgeSb0v8Y/hv0b8W/OtVAz/y/gteCr/s5SZf2LB
UwQ/TB8RfIniS/V9dlUdHhGun+Q1yjq/X4K85aIfLfp5acu7VGnOCPsFh4l/
y6zhD8XfWfAWgk8T/H4o/zLxfyLZc/jnFv0v1tuMd6JvL/rl7HfwzYleEP1P
1rOiXxPzvJgR7awwP/6ucHjO6Vk/7K22S6psWeHOrvU8kld8aJhPekl+O5X/
UvG9Kbnj9H6OK5v3RMm/Xm36FP8Sgg8S/IPow8T/I+MEY4F4F6l8b/NN8P+o
+ArRj1Ge7+T8PuYLNy7sryxU/ErRe4r+pug9VZ9tsqZ/LfnbMpaL5w36mHDH
ir6t6BMV/0b0XoK3EzyZfRjBOfEOl7yfVZ4PmMNUvqxw7yu+F22oPJ/kX0vx
9uI/RHzNlffZkv+DcDnJ+yPj+NUx75ucI9rPtd4/OVT8LcQ/NOc2z4j/d9ZD
il8V877LWaJ9X+v9l/cUniz4A4VvCj5I6Zso/YnCvSvc5erP84T7ljlI8BN6
uov2pMKXxf+Wwn6C31H4huBNCgfnnN87gn9ljZkx/yzl/7vg75kPBM8R/JTC
HuJ/RuErcYdH50x/JYzvu5QsF3k1qs9vrCcEL1f6pSrfQvH8whqT8Urxqvj3
kIyrBE9T+55SdnxMzPuOu4u2otb7j+y77il4Va33Xy8V/wC+UcGjxb9M4a45
w+x37i/5m0n+XsJdI9xjeo7MuV1ojx9Vv2+YP8lb6R9R2C3ntmN/4yOFpwj+
ROFbgtk0/jkT2jrmfZCuOaeDH75TBX8a+L9gXMu5/m8LXqP59deM6SuU/jPG
wZz5oG+lukxT/3qSb059sL3K31jlf0H0V0X/U+X9gfWG4HlKP0r17640PQQf
FfO67zf1zWNqvf4j/F3wsQE+Srz7qz9PkdyXMl4H/5n1PMD4v7vwf+g5VPDN
gjso/FL0g2q9/j1P+fUoe744Rvldo/I8wb+b4AMEXy34ccG7CN6f/i7+GtXn
TcloSRmZw7IuL+tR1tVfZJ0P8n8Sf1r87wi3O98De8Eq708q07tZy6utOD/2
W1jX/py1XOSNFP1Ile8I3rPyb610f+n5MWvcK3qOV9u+qvA18f+t8v6YMbxA
/HMU7iT63Frvz7+m8ATBbyh8XfA/4v+J9bDgReJ/SWGvnOUir4Py2lHvq0/O
PLy3Y3N+X7w/9v2b5JwP8vcQ/596vlP5Dqt1u29SvGNo/+GqT7ey4cOV34nM
3WqPGYxHKse5onct+/10Fn2E4CPKltUt5v+KHySvW63/L/jv+FZwl1r/f9Df
pqs9zw77y9fp+1zFnn3WuAaizxD9GcZ0wc3V/9OitWIfW/IPVbhGtI7suyNf
4TrBXRT+JLiq9BOU/i7hjk8bnii4d9hvbq3wStH2Uvgt37fyX86aR3nsnTZ+
Rc5x6C2Vf0a0PQQ/ovx3F5wTvC/75ILbKrw6Z/g73ofo1azze0P0NgpX5swH
fXeFV+Qs7xvGL4U35lwv6rOrwmU580HfTOVfrPY/TO+4b9rwRapPP84ZRP9M
33eF7419ZuYD5b9Z1vS3eR+q2/5KuyTnNjyCb03wzYKPENxM/LXi30XxB8S/
peB/2T8TvF5wVuFE8eYVfqL80pwB5Ez/WPB+Cq8R3E7h93wfCm8VfBTribjX
4TcJ7hbW4xWV/8KKy/trgMcL3iieY4TbT/nXZV22l/je9X6uUpnLfMPCtRW9
RN9V/AXaV3Ax6/7wnOBu4j1E9VufMw/lnqR4IZR/L/EXGF8EPyP+ruI/WPwd
BP8gekfBewgepzQ17PHrmZBzO5C+pPAiwUWFnzLeK1yVcztQf+QdpPTXCXeg
cC+r3x+X83fL9/o268Sc50Xmw9cV9s75u+d7Z/xtpPQ9hXtOuM/1nJbzuM14
/bHCATnPE4z3+yiPq3LuZ/Sv94U/Ked5m/n6acbAnOdR5suE+M4XHFf4keDH
hT8i53mK+ekQ4W/IuV/SH0/U+HN9xvtxv2o66s6ZSM7vmfe7vcLZgrdjPSr4
CdZ8ec0n4TxlZ4ULRW/Kekj0q9jTynj/Zt+Y+821oh8Q2q+13k8+a/ipsD5L
VTy+3xj3e7o+5/fH++qi9mqr9ponXGPhdtOzNOfviO+ns8K1OY8TjA8nS96D
kvet4G1Vlq0VzhC9ocIvRN9T4fKcxwm+/6rCKYIrCj9jfa3wUsFbKPxccAuF
lwturnCT4H9ZFwj+R+GHghtw6Jt1/7tJ9dlc8D/sp1Muwbuo/69VeW5iLazy
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
6H0fnHeZk0Xr410h+k6i75SyPhB6QU0i63MDg2/A+FtwfsjcMfDCg64QOkPo
BR4k2fmM9QP701+VX3vhMhnrYR6neLOM9TFPZTwVvZdwuwi3Wu2ztOz4oXHr
ZfZmny1j/czTxH+x+E/I+x+H/5Kuef/P8H+yiLMurf9vZ988az3CtqLTGdEn
TDKWCU4pbJwwfl/BsUBfrvznlg3vpvxXCJ5fdtn3ivs9dRH/5uF9XSn6vLLl
tY5bb/JA0dMZ60+ezPdecr7k111t9CJzn9quTcz68ehC7sw6Ff3plPef2Yfe
WcXbNmV9YfSGd4isLw8MvhxzHBy6vej4bp+yfhh6Yo0i66+jH91Q+GLMcXDo
UqMz3Srl80nOKZuJf+daw+AbxRzfOexts8eNvl6+6m+gc63P4rav89kcZ3IN
gz42etnbS14HhS8Ivl3yW0euN/W/Q/Ce7NerP00umgde9P8KVeO6St4S4deq
PZfR7oy5Resjz1J828hz+U9BNxqdY+7zoO+5C/81MbctbYzu27aBBg+6oeiE
ov9Pe9Pu28ccB4fuJmcAyCENeqRNld/hBX9f6MQ1Svkhjp5c48htn6u1bjY6
epWU9bnR6946Mg0e3lOV/XXJGlv0vQLuE3SR/AuKTkPawwqmo2O9ueBmRdPR
+0ffHxw09LC3ibz3Oz/tvWX2gImD+0p878UcArNPPE3869Q3h5St04Buw4WK
d1H7Ly563439WOKlsH/5oPgnlL3nxt4b8cPEv6RoHLoSj4ezGnQm/qf3eTZn
nsp3RMz3qerEP41xS/Seqt90xd9Tun4p3zcrV427qNa6UK3qrOuEThT7g+RV
DfvBfZTmXaV9UWXvwP9OwbLBQUMmsl8W/SDRewt+R/DzgtsLPknw+4JfFXww
76/kNqDu7D0WOf/Tc7X4Lot573LrsFfJnuVJyu+Kos+Ab035PBO4Rdhvvj3l
81nOac+JfP4DDP4Gybsx7IeyLzo48l70v+Fshj3o+zjrK/vM87+zz9q099I5
47y/5PIxOXOWcy+6YWWf4WweznY4I+RskDOefNn0K5Xf/Jj5EmEvmz3uQtn5
XSX6QvQ50I+reo93+3DWTB04u+KM+JJatx/t2FP8syk7873gXoJPKvuOH2f7
6BDUFq379ITae38V7xjxvSX+cxUeIHh4rWHwXWLWjeMOHLqE6MjN1/OR6KeJ
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
6PPh5wiZyKr3d8RdhYp9UmKXoKD230l59Bd8fcr+goCZF5gPuA/PPwb/FtyT
X52yPyT8KyyLeZ5IJh3/z1dSSvAVMftMIg6OdGeofOsJc/4X4p/oPpW3fcU4
aLTXxVX7aMJnU729hIrfKePnA6E9zwnv6baUv0e+y+tjrhd2FYiDo72aS96H
BdsfeDC0D2lISzvyT8C/APY17g3ti70C7CPQvgdX/E5oxz0kZ7uSxzTGN3wb
/ZHwWMuYiz2iPSr2KYGdIvxDbVPy+M8Yni8axucRNg8WB3nIwQcF8LYl20pi
zETWBVXjkMnYtyhl30mMgdz/37XidR7rO2iMKYyD8JAHeeEvCfsKjDUdg4yT
I4/ljOnMG/Rn7CIcFsZbviF8QWNXYFoYW/+sc37gsUHAfdHdK/ZRjd2BRSH9
4iAf3+XYYeB7whcX74x3R/y68P4PqdjuBPYm2gm+qGqfXvjgahfavygZ18Zs
3+HQiuuB/HTZMPlgA+Ls0I/oW/gAw9cIdiroy6xxKCd2fJi/8CXFd9w1zGnU
H3s/1Id/Uv5PocFD29GGceXXpmK52NzAHgbwZ+LpHdqTNMgmD/41GLMYq7gP
y7jbPOAYf7ErwXzAvIB9iav0/vcp2cY9tu6B25Rsf4M9rdYBxmcH/9yPpmyv
Hrv1dzInM/9UjIP2lODZVctkX+xhdFUq/i75Hj8o2H8JNjuw3/EI//4V31Pn
fjr2uHpXvMZjvVcuOz0+QP7zBdIo6bwpQ2f23kVvkrQ9B2DkYYP/P1v8OyVt
mx/7Vp1CeRsLd1fM9v73Vp4PK/+NMdeRumI35MowXnev+J7vMJWnQ4DxqYAC
OvZOjqjYBwl2rohPUf1blYw7iLOain0u4GNhTBj3mQuwh4X9qqMq9hGD3Sr4
ewjeKun781eii1ayjwZ8NfSnblWXeXrOdlVoz2zS48eh7O2LZzvBtyt9qez2
xIcONs/Ia6rS71Zynsgnji0u/A89qvTHV3wPn/v3j6GvV7HthJFB/oyqfVrg
A+LxkB8+IR5M+d7qszn7kuL+6j6Sf6R4f0r9//3YboKfyvkO7K/oklSN+y5l
P1RHJZ0WGdcrffeS7V3jfxFfIVeI/6iSfYb8EPIj39mSvzd3RHO2QY096kdz
tu3wseIDueueNA6bBdiP2FPw0znbncbe9JFJ+2b7IcijjJQVX23c18X3yW8l
+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
yLeCv1t4ScP/DfYf9wrjP2M+Yz/px1TsG+riyO2Af9562ZLxGue7FeOgzVX8
j5L/dfH39ItwL+dsN2tu5BCYd8k75T+hR8l+lfhf4F3wTvZJej48TuGrOX+n
fJ98u/PYb0j7G34lZ19ZxMERB7dv0uXtqfItqtqHMT6FmU8vqNgWId/3DqH+
2APk/65nqA/jBuPF4Qofzrlf0Z+Ig6Pv8w3Ql6dUPBfSp7nneHtG/68p33fk
vb7L+J72++Xe6MaM76Ryf/Qf9jr5f6Zvi/4F98dytsnIeNtX6d8T/C/rtsj2
8I5lvSYcBkoYb1pXjWNMIK8+SctCJmmR8bPgqWnPxR/kbLeROflG5XdcyfYa
fxH8oWgnJm1bb0badvY+yjkO7qSkYfDY+1uqss9Wm/0Ws33JJYKvUnl6lSyr
TZD/QVgHfJmzry58uy5K2+499WWeY37DaM4y1ihp+0uFBg9xcNj5+1S4OWnb
+7uCf5OSy479StaSx5dsZ5/1Wyzwkw77g/0Z6wQna2wvDT9jn+W8LmT9Rxwc
vmnnSUZM5VlecRwcfmS/Kdh2G/5ksb/2Rc5xcG0Lrnss5JcM9NqQX5fQBpeF
9ewp7KsIrqmxfTd80dIG1Bd/AacGftKxvo7X2T8vbUcb4gv0GrX3iSX7BP0u
Z9ttOJNZnrZc/PBmgnz67qac7YPShwcGGDz9G/+91Jm64qMXe4D48sUX8P9i
9gt8WtJxcKRFBr5ulwhO1NmfL3Fw6Rr7DcZWIPYD8SdMHSg7Pn6Rhcx0oDP/
UIcrw/yEX+DThfs3Zv/AxMFla2wfcFDgJx3z1b4Ft0Vdje3TJuvsr5i2iIK9
176cleRs4/WMpH0Z52ts/xVfxtSBsmP/F7t3P+a8R1a/n5YzDl+sK9PGg8MG
HntolOuHnO0YUr5CgPGVjP3aVJ397ZIWGWcm7Xu3WGP7spR3z6rLSJnYS/wl
Z7t67ClSVsqMLGSyP9mvZB54qRN1w5cv9muRTR7Ewa0N/Nj7w98zfebspG3n
4k8We7e/5RwHV4svVtHrFL+Pf06lP6lk+4f4J8ZX8LUq78kl+wzGz/C3BdtG
xt8wdpL/l3McXCXA4FdEnrt/z9luIvPzMMYGwZvV2H4yvnBpM9oKe4XFUL5y
aC/sSv6V87zOfE4cHL6S16W9nojlbV+R9UVastZUTIMHO8B/5uzrGHvA1OGc
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
Xx324o7N25cK+2XrAgye/bbnxXt9nf9/mob/H/4piHcK63HmC+YNxk/i4Fib
44+F9S1rE3xF0QdZ5/NPxtkk6/2JghcLnsC7j/s9XJ5329LG7yYNg38zcrnx
c8S75J3i/4j6sE5gfTA+yEPuG5Hj4M6N298OspBZn1fG4xL/T0eF/6/54Vvk
Wx+Tsf+fType8/N/tFLwP/zziD5H9KniXa000xW+GzkObmzc9vg6q72/rthH
NTb8sJcHzLjLeAfvqrx9a5PmIMleXvKcwPxwZeh71Bd/TV8o7Z363q4Uz4q8
+z9xfCGdL57lwn2o+BjFp2acL3b52Ktnz35yjWVCg2dSgCeH/o3/JfJANn6I
8PuN3T/KRhk7lN0eC/L2mTQ91H+B4hcyXgi+Lm//3eMFv620C8M74H0QBzec
uYI5UeVfWnK8Hlfjb+TC0P/JB79LvL/zM5aDDOLg+FbvUHtcUfI3+2DBcXxJ
Mac+GNqTdpnC+lzpr8n73fEOpwQY/DvK7/Oky0893hP8adLvZ2p4v9h3/Kri
dRDzP77KsfNIXakzspDJu8D/FL7vOMPh7AY/d/hFYg+df1H+SfFVxJ413x7f
4Fql/5oxXfCyjOPgZin9B5HLdaPgmaF8N4aykv9i8X/DPhj1E+5D0cdJ9qqS
ZSGzi97fpop9qGPjkfOcdYrPrrH+AL7dN0nGxXH7eP9L8LeMORnbS/sDup57
BW+Vclpk0L+uEO4wyf+mYjn4iv+gZJg5kPmZclE+ZJMH5cBvx6S4fbpTT+pL
HBz+PSgv8xzz24+iPcF4w3652vMHxR/X04DzNsFf0wdYg0jO+ozL+pCeWK3L
vC2+MyTzJuHmiucneHn/nGcq/c+KP4UM9usFP5C3TGSdm4ii3xV/Ts9VrAdF
/1Pxb/Q8nbF9curGO5issq/4v5ruPN6+ud7j+D57/845++xz9jp7QEokJA0K
t7qV21VpQkoUt0EUSUqFplsqdUuISvM8CskUEtGkboUkU2RKEUpCppLhfp7n
ve4fv8dvf/daZ+1p7b2+38/n/X69674/13h2mLmCOcNPh3l8r9Pr+1K9X7f5
Pahtm9b+d9f/57lm1+2dcFJr+621/dy675/9rI2tkR/wuz4b/ec9NF50frN5
b65bihbUe9Sr+++q8VaD9BP2q+P9vfa/te67sx7jfTW+fZL30fv3s/r/mqXw
6/aZz+N4z73XHu/btf8dkzxPz+/0Gt85yfvi/fDeX7WUrASfwe+Xcg45dzD3
PtaEOYEVgAux2zj5s09toveeGeYz8N7TI8pfuGuS8875dvVS3nPvNSb80GNP
8jiOf1vtf/ck+9nus/lp/XvKfD6jbh3/zhpvPog+4t66fctS2BN4fZ+rv/1X
/fvTUjSRP6///7gUf/4f5nP7/qV49d33v35vl8IH+tZ8zkV1C/UL56TjeE1e
i+N9t459b/27fikaDf97Tp7LQvvZO2c+1J4DPgvP0XPzmXis+5bCIvKYPnfn
sHPX5+88uWEp/SPni/PqxqXUR51fbq8apla6c7uvc8S54W/wOG6Z5HV5Pc4T
74HX7nzZqbb/bZLzxPmxZv3tpUvRo/bq+7FGjX+7FL3ynXV+D2r8m6Xw5b9W
4yU646Xwhk/o5vbJS2EPu+8htf2ypehZxhgPNfd4oB7vd0vpkTnWSUth1Tvm
+XV7fpgsL5le07o9qX+/64Z/cKpzdxj+B2bTo+t499XxLlwKY9S20TBsEPus
W7evWMrcffN6/PVqfGX7W7YV7l/9vaDEy5dSw32XbJgmWRBnLOSxL14Ku8dz
eDLtXz3eRUvxqGCbyMvevIm/ZKH271uz1b6/nMv6oScfdik1SbWprry7pdSo
vLenLUUL7j0+xXd1GPYyXup3a7w8DPuTH8btpv79oJv77qznMz/N5+D99z44
hr/1fniejuFvPd/Var9LluI1v6EbPtHMNO+r99Nnt+j8ns9nKP9ldprX5fXc
QMs1zXng8//XMLUCa3DX0PfU+/CYJmz9nyyEHbRhk2wWDKEzar+1htE+6Y9u
XI+/OM154vxYfZjn6Lmt2Y+fvT/N/cY/qr9ff5jfYr/Ja9fth9a/h/XSnz1z
Kfe5rR5vX5+5z9rf/LC2P3yYtZs1nN/+vyzl+uEa4PbcMNcS9z1omO+Ac3+7
fj5b56hz02fsc33YMLVmn69jO+ecax7DtnXq38a97LN/vRePapLdcKbtsiam
+d75vtH7L0zzuB7vfbXv45qwus82JzP3aJJNcJY1UN1ev0kW3vHqBfgjTbKt
TjYHq9vrNsmuPdI1uG4/vgkr/Jwabys7jL+yCY/5FTUe1/jJTfiXL6/xCO+g
Cd/Mees76bvo/N237n9Yk+zQb9bxvl/bHzyMlpx+7a21bb0m2YDH1faXyILg
x27CY91RVhi/fxNe8QtqPKzxZk146eYfq6b53Hxe/L8bT+Pz4+/jzeXHfcpy
PLqfqL97ehO20u31eJ+UQ9CEzXiH+XPd3rGJtngDXGts5yZsi39a7zap7/Km
z+Cue1+aZNHN43g3qffyondr/KW6vXWT7Lg+zq/n3cTLMcI0xq1t4lVcvcbf
qNvbNfFSrlHjb9bt7Zt4jdau8ZHYt01YQOvU+Gh6/iZa6/Vr/BV8gSbejOUa
f6ZuP6sJi+aeheRPPnSa3LIbO8n2liFOuydn+8Bx8tRf0USPc5hsCjX5JnqK
Y+v/lzbRNsol/8g4+ee7NNFTfHIcntGrm/SPvzhOPuhrmvTT5EzL4NYbkTct
O1eGrtqxvF052TK21RJlXn9wnLzylzfRr8nKlpmt9iLzWrYS5jnWuYxXuaYy
VK3l5JvipmOqmyvjp2OdY56bu2KYy3WVCWttLpNVFqm80LObZJJi32HgYUhi
BJp/4A0fOswcQzaXTC5ZXHK+ZB9h4GPfy+SRfSiv78ImGYhypWSUmSuZM8k+
k5F2zlxyymSLyfSS5SXDTlabDCHZQTLV5MnIhJbRLKPm2nHy6OTc/WmuzeKp
23+ZS660/AwZUDKiZC7I8pPfJ5tPpt/5w2QjySCS6SD7RwZQdz6ZQLLnZNJd
P5fcOfOtdevvPzTMHPsL4+Sz7t6kfygbUkbkcXPJhJQtIcNinflkTMiWkDEh
U0K2xAPj5IEcbE7kejRMdoQMCIzzZhJ+NK40njR2M8YhtqGMBtkdMjzWm0+u
Bx4uRjvmO8Yu9jYm90vmw+BefRJeOk46PjpeHwY4Rjgm4KXDsJAxkDEu8d1l
Yv2kZcZjO2M8mwuZn2EnXjYMixeTd41J8orkEMkfeugkPG45ifIRP1Gvd039
hyZ6D+xdDN7D5sMlXn8SXjAOL/4uLylPKYYNls0Vw7A0MTMx+ngfeSDvm48n
ErsSU9RcznwR++vKYVigWF8rbKQa/+98OEU4RxhIWEh4R7h0GH7Yffh02GYY
Z5hnmABYJJgk+/bDGaHjwK7DuKPnwD7FF8PgxB7FtsK4Mp80f8bffdQ0HBz8
GywqvKhHLYdJhauLiYuFi4FFL8/Dd2Gr0cdCxeDElcNAxW7BcMGGwXPhVedh
513nWef9xxfAGsAAwI3BvDFXN2fHwsCYwJbAzcD6wQDCAsLBwbrAo3jmcjgV
hzdh5uHf4eDxC/Gg/6D1AGGbYJ68sR/GCe89XsFmy/Hg8+3xBFqrWbNhpWB8
YHvg5fDO8VBv34+HjneXp4uXi4f2w5PwYo6q+/bux5vHz8e7x6OHFYAZ8MR+
+AE3DeNFvKTV9Ot163nrqeuB8FbxcB3Sj8eKt4kmmxabR4r+huaRBpLmhj6a
h4nniEafF4Qn5Mh+PCT0mDwcPBg0lrcM4x3gOaCJtB6izz9hmDX3qZPouenC
6cE3mIQfjhuOF06rTXNGa0YTzjvCQ3JMP74PejCabJo2GrAfTKJPpYOlf/3h
JPpTOlr6WdpZGtqr+tHYnjuJHoXOh77nqEn8M8fW+Ju1z+3DaC1pMGkoaNHu
GEa7RsNGa0ZzRjOmR07LR0NoLWZ9RdtA87D6QnQNv5pED0N3RG909zC9NzVJ
tUnaFhoYazfrNX1HPWC9YP1HvcV/DNN71IP82ST6PzpG+kW9aD1pPXY1e+tb
/r5jhql56CXqKW67kB6pWq2aLS2CHrBekZ6RHpsavL6knrHesf6ktd/pS/Ei
WgNap5mzm6tbr1knmWObW1svqX2ogZg7my/rFegZ6IHohaiFq8nLelcTNz99
1jBZojJF1fbU9NTy1PvMJ38+TLa8jHm1WTVaNTu1O/PZXwyTXS/D/u01fuQw
tRw1nQObZFjJqbpQzdl8uLbvXNuPXsh89Jxhsmhl0po/nztM9vNP2+O5fssW
lVP9lvZ6d3snueMPDFMbVVNUW1SrVbPVq1Bj/VCTDBpsf4z/A5pc+2R/yfay
vnzeMFl1MuusB7YaJotQJuE722u9fEk5k+9uci2W3yjL0PFk1K5k0y5kfSBT
UFaSzCTze5l3sndk8MhS2Xyaa6S8CusxTNfbOsnE9XgzTfyofKkHNclAki0g
Y+B/msyF5OfI0flAk8w02TYybj7YJCNOVtE27f4y/tRz1GfMd3cbhuWB6UHL
sdU0nHSaDvWqrafhJqrBHNwk00F9SY3ykCYZMti8GL2fanK9wZ/Doftwkwwl
rGTM5EObZHLI4rhG/bFJRgkWBCYEVgQ+qWso3gNOqYwH9Rg1I7zvLabhNmMo
X9YkW34HTNpBeH1Pn4ajjJ98WJPMDKwHzIePN7n+YhPizOLdPnMazgG+Ad7d
ltNwKDAm3oBfOU3OgewC62cZ7bLvZODJLnjaNHMI/H71vmdNw7FWM/psk/kB
NgJO4zvxKKfhImIV4mM+exquO2YGXtrzpuEK4wl/ocn1EquK5sZ655XDsIgw
iaxvdhmGtSmz+stNrj8r+derMm7q32n1WINB+IHPmYa7i8FqvbLrMGwTjBNZ
G/8xzRxLfob10quG8VbzWH+txstNapPjdv306mFYJbu0211fect5062HZdDK
9pPx5/vSa1JbVB8+osm1FJsAi8v66jXDeLcxH45q8tuJn4Cj8J0mHita91va
7eMmtTg1OetHjAPeWB7ZY5ow33DUNhxkvYVZwEv4vXY9hRHB+8UDdlyTayO/
Ga8ZvcFLptGR0XzZzsOtvqhm6viuVbypvKzHN/Hc8hbxGPHKbDPNNY9f5MQm
HlY+zyfU35/QxGPHC8QTpN+z4zS6Nno260sMHV5jnmPa/edPc42jj6eVe8E0
1yyauVOaeJJowWnCcW15gmiZaZpPb6J5V39Uo+Zd3Haaa6T+IH3VC6fRSdMw
+35tUP8+Xbcvmou+ZIdpdJg0kerTL55GF6rGeXITT5z6qprvmU2ud7QzdK8n
NfH80bLTtB9Rf/+iaXSItIf0D9tPo4Okf/xRE40AbQCdCL3NdtPoummiecdo
mGmXaQrOanI908vUN7bue3iTrGTrv+e2eV50G7u3/Rn5Xfr8+vvfqffjldP8
5soXlnPu+ql3oG9ivdtpVj7ulUxh2cHyhOVoyxD+ZW1bxxqudvjCXMZb1rY7
9dyth2v/naf5jcfrdv6P6t8ldX6u2dYbdh+GHYIhIkvM+vraTvKKz26P//m5
rI9/gt83zTX7Hj3ZJvWkQ+rxj6h9zmlS/zlYf2Qu2dLej492kzGtnyDPnc5C
z8T6V4b7QicZ29bXMrS1B2Rgy7623paF3Z9N9rX1svxqOdby7nedZj/bPZ5M
68FssqvPqMd4ru8vHkWNL2pSfzqcNsDzq+fzqmmuwRPMjib1s4/X9p/NJatb
PrdcdpndF9X41dNco1ev/U+q8U7T6NDoz04bJU/ab458Ydnn1vuy0GWgG8vg
lb17eFsP8FmOO8lMxyJSOz6nG96Q9Z3fdmwgjCDbXSsOaTlIsstlOspylG1u
bP0un1j28FX4d9PUAD9Tx7y8vZ7It5dz/6fa/rppatxf6aaeIEv8wZ1k/Mqe
lmenxiDv9/Z6jWcPk9csq/jGeuJ71vZHNsmflv3l+io/TI6YLEr5mtbsMimv
xs+bpgb82W5yOmV+yfmS1ylL2bG+1E2msrGMZfnVcqzlecrW87w26iTrbGVt
P5PMM7UR86FHdJJJfkV7PZA/Lodclu8b6vEf3STTV1avGovaiuxfWcTmK4/t
JLP6+vbzWreTjOTr6/nvNU3N9qv1HG/C85umxv3NbrJjzYfk08qplf0pj1RN
RJ7nze3n9chOMj7VM7wmr0UmqSxo8zd50ye39Rjnniz2D/SSXWw+Jx9YTrAs
XvMteblyc+Wsmu/KzpO3+lf8umlqxEd2k1Us31nNR2axnGWZarJB5S3f134e
skvly8m+NP+Tbynn8o463n7T1IyP7yardeP69+1uMluN1aDUnuR+qs1s0iSP
T41GNpf5nCwq+V1ywmSKPb6TvDDZemowai9y+x5Wj/eWaY5xUje9IzVltWQ9
pP1r328sx7vIwygrdZ9pnpN8VFouv+d6bXpussTUluTzyRQzljEmt0sWGW3U
vcNopWimnF8ynmQ7yc67vZ7PvtPU4I/T459PTU0tTTaqPCt51DL/ntPJbbUh
+X/uk+1pfirvU+6nepX56ZadZMjJRjS/lRcqG3HDery31uP9W91/ejdZ2Gpq
K7W0Qb5vauVndpO5J6vN/FN+mqwzn61sWzmwPmPHV9s/uZu8QtmY1ifyOOVy
en5q7ad0k0G6W1ujU5uTQ+j4avVndJMJp5bmucnWU1PDesQgxB7EdvT98l07
optMbPU082usL5lpslDMreWjyEmRpSlT87x6vOXFZIfJE3tfy1vbGJ+o3o8n
ue52U6t1W36Wmq0sE72Ks7rJNDE2N5d/JQdL/c3cevtOMrAcW+1Bno3HUC8z
V35VJ0xxWQnmrvIjZCZ4vnofP+kmT0XOl/Pj2Z3kfcnGkpElM0t2llw054Rz
4ap2u1qf7AI5Iscvhz/ub+RnyfZS01TLlBsmW0TNUq1SjslRy8kL8h5tW/t/
YT41TLVLOT3YaXrtZ3fDUHtQWz/D9pehYru1x0Etl812GSsyV+Q2XF6/j7tP
Mwe7cC7ZEfr5shLw9bwf6mGyH+QpqFXKaJAXoGYpt0fmgKwB+T1PoOWfZh95
DLJ35Puos6uvP7jdX36PGqLHszaRzyV7QHaMvBc1VxkyN7S/F3IFZanj2Ot3
XN0Nzx6rH9/eGgWzXy1ziybZC2qaWPAY85jymPAnLCefw3nm/JK1JQ8MBxwb
e922PiqvRG6JrJT3TFOXVY+VxaK/dGk3mSzG1lLyWGR7PLKtb8oSky8mm9Hv
jSxDeY3Od7Vi+W1y3B7ePt9LusnvkB2mX3VZNxli6qvWxnt2kiHw3eXkk/kM
5ePY31paHpksMjx+fGNrsjd3kk0hH0SdWX15nbYejIWPuf+D5fC8vUf4++q0
z2ySJ6BeixuvP3ZVN/z4jdrtV3aTt4Y1jy9vzYg5/7i23okfiyOLvYp3jDOK
L/rD5fC5Zcbs3knd9NlN+LLqp7LB5H+pacvSkv0m303dWb3Z3/mMfDb+fpO2
PoxHi0u7aXu8a7vhxWLd4seqc6tv4+EePM3f2R873JrYWhiTHXucHwXHWS3Z
dsx2jGqs6jfUtuNqn91c13vxLqqhqp3yLfLu8fDx/G3djtUe+RF5+nireKyO
78Qfx7vIn0i3T6+vnmitwqtHW2mbWiL/iH2wZdTM1cqxbLbsh62LF4l9iDOq
P3h7N7xRde1tmvCXj27ZNVg8ODtf7eR4O9X2YS/MGj4+nr0TOvHz8eKqwaq9
8uGqhe7axCurJqrW7L3g31Jz5pWytuT/4ANRjzRX/n+votrlHk38QmqYvEf8
Reqs6qsHtds36cVv5Hj6h5v14sHitbJW5pfimzLWb9y0F78Ub5u1Hf8d7xsv
rl7M+r34ZXl19S436MXvin2NNYxfjV1tu7Ufvyyv7GvwgKZ5zev5/i+kZqxW
vH17fGtZ/l0+Xv0GjO79OmFwP6N9/2/rhrF9YR3vk9Mwr3HHX89rME2N7ILZ
8KTxga3Z8ML1O3x39u2E4fvU5fSjb6rjbdRP3/t5TXjV+t+bL6cf/Ve/vXXf
6+r4H5umhnL+bNieGJ/4qzisq9e5//lpetT/7IZNhvGC7YLPhhunHoGFgx+H
pY2pjZ+NnY2lpkeiN3J9O36x73MvjDXsH/wnNX0MIKy0r0+zD2Ya7w6/jpr7
ije8fT1/6YbZ7bvoO6kmxCPm+b+gbv+jG0YpviBeohrNgZ2w+/D81Hgw/HD9
9OPv6Ibvh1WIx2sNjFmIfYpBhz2HRYt1ig+sR4N5ql+DeYgljnnrc9NPwlb3
+WEp60dhK+M16y+5lry+k4wJ/jOeNzUuTHpZDvIjHBM/ETv4c9O8JgxhLGn8
Zxx9TGk5E/pVsirkTfCm6rU/the/qLFaCf8qH6vzX6/2Mb14PPXn6b3pwJ9H
LzCOX5aPectBajNqNDg4tK2fGsffzUf+jEH6/fznfPVyi/SD+Vf5Tp9LDzGO
P5tv+zk1/tw4nmC/Hc/WUx3HE+y37lmDsE70avA0sDH81rjPbb859Ab4FLgW
Tx2EK+I3y28Vvoheq56rzF3XVtmqMlbNnWSv0hbSGOq90y2+sf295WXFRlHb
UuPCjVBL+hg9ihprPf5/6FmP45njldt+kNqRGtJ2ba3pG+N44HjfXjjImGeL
V4tXWe1IDYlXi/bB8X61HC83z/k3x/GI8Ya9aJAxzymvKQ+4x+L55vX2mB8f
h5+AC/Cfg/SX8QpwEbYYpDanRsc3q/Z2+DjMCKyIp9X2L9f4slHYDxgQX6nx
/y6H3YDVQP+BV4Jr8pRBWIn4jHqGmInYKysMllXhquDCYNJgneHDYD1hWGBX
YD4Z6/XhNeE27dH+nmAd4jlhWanfHdEJgwtr7ahprkGYa1hHtCCr98Lr0ft7
WRNWhR4gdpMepd4kjthOzr1p9lmtl/6aWuFZnXiCeS3113greQtP7qdnqleK
g2Y7zyxPK08m9gYGB6bGE9ux3hu+Bc6F945f0D7eQ+eXXiS+DLaM568+is+E
zfRY379pNDWjXjge3i+sK58R9gr9OB4Kdgkvp34cfxyvm97szk34Nnq0r6zX
++1p7lurl36keuvJnTBNHI9WZ51e+C039dOj1Ztd4dYsR5+Or4Klgo2mXopv
hnOGLab+jbeGu/YY3/dpNETLvbCfaIfW6IXXpN9KD39sJ8wix6clWrsXZov9
1YfxoLCAnH88mryZ29T5tn7d/sY0Gqd5ayi/T9NotPq9aP15KHggaP55Y3hk
+Gd4O3gN6Hue3ovnQO/xDU38XR9tt/MkvLf1IVyxHL8FD8159ZwvX47fgK/2
V514j/Tz3tl6CdQa6Iue20vNwePTH23Ri0eH7+tNNX52L/4v3iZ+MH1W/dWv
t9t5LfQweQ3OmEY3SS/J++QxD2z9Cl6vfiivA8+I/ilPEa8Mz8wrzF/9hgzC
UKLVodk5va1lqT/16jEurvGzZ1OPm63xpYPUBG6q8cIka/9tZqNloWm5d5Da
0D51/NvreGf67e+lfnRnjX9U4yfV/n+s8d01PqvGT9Ezq/FM/f0FNd6yxjvX
3x/iN3QQRpTz9cM+70EYTrxm/GX62PrX19bf/3Oc2tnm9fd/qvF9fhNrvMVs
tEM0RL9ua13X1fZ/jVP7etpsvBD0Xs/rxRPB+8mPSgdB/8CreMo0fXj9903q
+excf//7hWReb6oeP06vUEYyrSPN41Vt73GzUfLR/7CQjHLr21fV+NqFZIDS
utO8/2khvUBaYJrg69veI+01DbbeIl36S+rv31/jxw3C7KO1pLm8eiG9zB1r
+//4jgzCzHtijV9d4+sWsvb3e/eBGm8yCMOOlo+mb7O21/Oy2v4h16hBmGu0
dTR2mw7SO3oX9s8ktaSz6j37t1HyFf+4kEx27yePyUdbHwmWAf0Arxffoe+N
+9z2/fls+337z178gnzAr6vxv/fiB/54O+bnpTngZaX/e0ov/lVjvRL+Wz5c
Xkj6v6f24ok01jvhJ+XN9H1UAzys9c2o9+ktXNCJZ/Ll9XoOGqf3hdl20XL4
mH7j+cl5pXmmMWiwaHgX+VFpLngYbdfv4W/kXdy/jrfmJLWwn+nHY+fVeJaX
oJd+5kNq3K/xL3thuX+5jveiJrzwd/XD4sabxp1e2/V8Gs3nTC9sc/1CfHmc
eaxrf/tAN8xrYwxsvGvca3MJfnJrTHMK1wu/XRgBGADvxe6r57BY+57Ti9aR
5lH/Wh/7HHpOzMp6be8dhK8qawqH+3A14do+GaWX82b6S3pR870a/7dzpsbT
UXo/+9Fb0m+a79FSDKI9pUH9rGvhIKxveVY0ZZjfa5jfTaOBvacbfRFG7cc6
Yc5if+IV0xxhgL6ynW/gxmHR0gd5zp4rxix2qP4mfjCOMC6u/ie2ID7uju38
/uBOGNZY/fqx9+sdLCY7RP9TvoecD+x6/V35JnJO1jHfmkaT2231cbKT3t9J
ZpdcL/3fj3TCxH9B+3qwduVH0YuZy7+vk4wsbH/5UjRkGP/Yyfq5+Ms4zPpP
a5jPOffoRZfDg1AnUB/Yr7Yt1+d7Q207qZ7P62r86XG8aBhFe40yxze3x3R5
/ShzcHNvDB71C3N0c3PMpbfWeFzHu7nGp9K71Hg0SS3+lF60mTSa1w1Su/9L
PZ/5Gl9e461mo7WkufznIL2Ed9Tfr1bju8yX6+/3HmWNYG1g7UyPMq3tt9f4
+7X9r3W8xUl6DdvORntLg3tt2zt4W+0/4W+q8Wm9aG1pbvWHVvpEo6xZrFUw
q2gvzZHNjfWq9U+Xrbnr/Xxt3fcbetZReoEH0avWeK1Ren8fHkQ7S0Or36Xv
dfE4Hgjeh48M4u3i8dLb5sOifbbGsrbiBeTt4vHSm+ZL2n2UObm5OKaaeoI5
vbk8xtkuNT60xk8eZK5GW23NZa2lt06bbY5ubk6bQIttjWRtpNe92yhrGGsX
TDlaXWs0azNexK+Ow8jAxsBAsx7AXMJa2nqQ7Rgvai3Pr/Ge42R4v6CTbG9j
Ge1qu3JoXzdOpvoLO6nh7zFOZv1KVv1Cxt+nIegkq+O142R4y+6WO0t7Q4Mj
B4T2xnY17m1r/7fMRttH4/ewdq1B20njqb6lzoUXI3MNa0XOGh4MjwhviIxG
WX0y/LBZ5MhhdWJ2YnhifdIK0gxiWFpbulbLZ5HD4ppNa0Nzc2kvWiLX/gNr
/Lte5gC0PDQ9sqt5DfYdJ2NbNoseLW0PjY8sS96DN4+TESyb8sDa/qZxMpvV
em+r4+0zTia3rBQ1evtrDl9U2//u+ztOJumL1AZr+141PmY52eR6HLRKNEvf
m48Xz7VcZrLehGu6LF6ZKrJUZPKaSxw8Sk66OYW5zEGj9CrMacyN5NPLpTdH
Mrc5pMZ/6GWOQ+tK86pepm4my1Gmo+xHGY7qGzIqZVPK3KT9pQFWL1I3kj0q
g1QtWQasc0GGj0wY54TPQmaOTByficfecJJeh+dAW0xjfGP9/R6Lqd8/pcbX
6V3V+LC6/ahJMoRu6EXbS+Pr+uk6SvtJA3pHe61wvcGcxvDG8vbePGKS3ov3
SP0KwxqTXM2U3gajFsMWy1b2kkwmtVa5S1jkmOQY5FjkPm89B70GGUKy4mXG
y5yXTS97V0avXoYcV/UfmWKy9mR0yeqT2Sf7T0benjXeepTan5wu3hceGPU8
dT3eGB4Z2XgywmSZySCTPSYXTladTD3ZejLr9qrxNqPUCj+3mHq9zDTZnzIJ
fRceXvetvZjvBO06Dfv6i+mFOVfWdT4s5pyh7aXx3bDthdEu0zCb/5gHyQqW
qSzbWWaw79Z6dd+6i/mOvXGcTHpZ9Le2579MdlnsNy9EK0cz97eFaO2+U/+f
73PhPaz/76YB4oOqY9VhVzRFxu6/qZPb7qM3uqT+v2NVjkGL4avnWMbu55/5
VztPMF/Ab/9y7XfOIL12PXdrPQwQrBRrvm3q9r6j9LbPU+MZ55roWnhRjU+s
f+fWY3yS3qj+f/4413TX8l+rKY1zzXOtu2Ah/izXZNfi8xfij3LNdq3+jd/w
Gt/i/Krn86v22B7j1nr+13WidaV55b16Q/3NQu132kK0BTQGN81l7P77Ornt
vi/W87u5/l+q+09fiDaERuSGueSTyCm5p5Pb7vtC7f/nuWiO+Pz218/sRDdE
88uLRj/kOXgue/VWMPEr2hzPjxaXRsc+9n1nb8WWufI6vJ61ZldiLzpv6sXn
tndvxSq7ov2l2aXVrf9WtLw0vfaxL22PMW0vjY+DyNCQuSF7gzbWnMRchHaY
l5rGkraSL5d2nIYcD0/vhrabxhvTUK9E7ROjUu9HDVTtFCMTg1MNVe0UwxOT
VA1V7RWzEENSDVbtFeMfc1MN9mX12O9zfajnc+VC1qJqnGqb1qS0pzSosqJ5
FXwXZEbLivadUBvENNWrUSPce5wMbdnZtyxkLJN5B/WE2aw9/Sb5LbIG9f3T
o9abfn9t377G/z2KNuTihdQiMV0xStUk1Q4xj9WW1BB3qP3fOYq25JKF+Pus
mayVLqvxf9X41jr+vnXsy2v80hofMEpv9IqFaEOtqaylaIH5Ba3BrL0ure0v
HmcNa+3624WwGTEaMRixGdVCMf4wAtVE1aoxF/Vq1KzVljGQMY3VmLGkMaXV
NrGjsYAxgTF8sX3VijGNMXLVjNXSMVQwVdTUafNp9PF71fZkg8gIkekh60OW
iUwTaxMZJrITZCg4+WUl/KJdX8kCosGm3zuhxv+0nhtEy+c+t2nvrL9OrO2r
1/4v7UWfd3yN76r992nXayeNkh20izVfu/+9tf3tg4yt1+6gVZnN+o0mkRbx
Fb1os2m0ZfXyOtJm02hjCdAK/6BuHzuKVvD1dd8B4/RHX9tJD/rocRhc2DEY
MsZPrn8v99nV/keNwwxTG9hhEC2y/qvsZt7LH7avx3ffmvVHNR6P8tvtN5we
73vWLPVYh7bzeeOHWg/6jazxd2u8WNsPHGT84Br3aJ9nM7c/tcZrdTLHp+1z
TMeiBbQeoOmj5dunF72g/Zv624MH0Q667+BWW/jj9vPyW7djL1pJn4nPgjaS
1tP7+8CqeOe8nuNqfHuN3ziI1tCaz1qP1vHs9vPr1uO9e5D323ratcg1ifaR
BtJvMd3eu8fJSNXrfqDe0/fU7ab+LdaYqHL/cXr8evtfqWP+d40XzMnr9+Bf
CxnLgN+1k4x52m0abtnvvKXvqNunqyl3ool51ziZ4LLA71vI+MzlZL3LvKc/
H7hm1/Z7F6JFd5/btOq0vzTA2Iq8ol8fh5GJjann+tZxNA60DYfX8b42DqMS
m1KP1VrJd9Z31ZpJrRGzXi/iSe35Zc1srYyB995xMmr36ESj4fiz9e+Gen53
13N4m/NHjb22f2I2tVVrBmsFNVa1NnkTcibU3NTmZFToZajRqeUNzYHmUtPD
3vB94WXAlaDNNmc0V6TNVpuTryBXQo1O7U4egxwINTy1OnxuOSlqdm93Pqqp
d6KRoeWn6b9lPt5ln6+Mddnq97evZ24cbcY/FnJ+0FzsXn//tdmcHzKAX1Pj
b8ymNovhr7emRktv5Rrk2vOuOsa549SLzA3MEYxPHkWLe8AgeYKfmWSOZK7E
i8ST9Pu2d6zeIdNQxp5sPnmNMsZlmssg53XjeZNBrpYiv00Go1qYTDfZhTIM
Ze7J5FNPkiEnI07NihfC9RrLgjfk5HGYX1hfu6gBjMNAwj7adZA8NhmDMgBl
tn13nJ6AWibGmmvv2rV9vJhr8Fuc33Xfy9XaZnM8PQO9AgzCU8dhmv26E4ae
bD4eft59uXyyz2SgyUSTjeazlsEh88Nn7lyQuSGzwznBO8dDhx2iVyZrRuaM
3owsGlksMln0ZmTjOFcw3fXCnDPOVRkpMlGcs7x3PHjyWvTiZHfJ8FJrkv2l
3y3jU4anbE95tjJ21cJk38qClQkrw1WWrvxemcBqYzJ9ZeHJxNNbl/Gnfyhz
TaaajDN5pDJkZeLKKPX7pr5l7mgO6fPC/Dq3E/aoz8N8Wi/lVfV5nTgOg/GX
nWhKjhuHIYgd+NJBxmq8arvYnceOwwDE/vuvQca/G4X1ifnJa8Fzge3IS37C
OAy8X3SiKTl+HAaeWvbLBhlj3P28E0bseTVe00R0JnNjY7/HtOj/U/t/axxG
4o870aD8qr0ePaSTmtUZNT5SvaNu7znIWH3qunaue2Z7fTBF2K4XvTnGG7bb
KwfxLvAwYDfy0h8zDlMSS5IGALuH5p7WHqeId0ANTO2L1p8W33ZsH94D5/eq
+ndtfdfvWsj5/By/SXX71YN4F3gYsKV46783DjPr/E5q9qeNw0D7TSc1et4H
HghsNN583g0eDmwhXgusoZXxXLg1vCg8KdhjvPq8Hzwg2KJYAN8Zh8GHvbfz
INp774n34qx2O6bb2Z2wy3nYZCx+vhu/PH8iRtQ1nTCa1htljWVt9UIe33E0
8bTwd+nBzuY+tzeYiVbe9n/MRav9t3E04bTg9/jNr/3/Uvf93bFr/5vq9nWj
eO5PHGSb8Ze72Yef/xqft17/INpyx7t3LlrvP9T239f4mhp/TT29jn9Z3ffr
Go9motWk2cQHwAlYZzZj2s1Jbf+d37NRWAKfqn3+2D6e9+OPdd+ffdY1vtV3
qbY/djaaflr+devvr6vbfxhlPYcJQDtIQ7jDYrSKbqtn3dvLfbSRNJI7LqZm
Rdtq/fCPXrznm06y/njLTDSytJfqIff04kXfbJL1/ttmoskcTKI5pzXfbD7a
axrsTVrt8p/a53djPbej6vlvOJvX6LU9ZCbvldevHuA9u962UdazmAm8C14v
XgJuQn+SGrTa85V6lO3+f619j9FD83tvfeK3Vk/J732NL67xZ2t85TieC16L
3+qh1/H+XuNja/zo+Yz1XPVaMQ/m2+0YCGrotOs07HgJuAl6t7fW9g3m08PV
u72txhvNp4drXzV4tXd/o1d6c21fcz4903vb8VH1+GvMxwvAE7DafLwDvAB6
unq5tLW8GnrEesN043fU3//ZmqX+fm4+veAba7xqPj3hJ9iv7ru/XutGM9lf
T1gvGBtjk0nWl3fVZ7l1nRPd9vUc0w3D4f5xesZ6xecN4g3hEblyLt6Na9rz
/3O1/9Vz8XS4z22eWN4W7/dlc/G2rDubz8B7v1ptX6/GV/vMarzGTG47Pu+J
+3g8fId9d3lqvRZMIywjr8n7d/1y6jvqPHrPf7O+mE8P+v52fHTt/5D5eD30
3PXaeVv8cN9S27/VDRPD+eX85R143Hx65bavO5+euffL+n3fei6X13u28ST1
XN7Ti9uxeu+tdfsZ6qmT1NtlX9PM04arn/+5F3aC2idGFdaTGujTa7x5jY/A
h5hNbU7PV69XjU7t9d9H8caqwdJu63HrbdOiq8U+aRRvq5qsWqyetF60mixW
m34NVgoum17R2rV98/n0jNT29Nj11tX4lqyF1bN9bwfpnT5qFK+xHqreJaYX
dpUepl7rRqN4qWfbv8e8wrp60ny0YI+p8X7z0YSpTerZ69WrUbreYQ5e0Emf
2PXQ+rU+xhUfluuPOYa5Bd2q+YE5gbnAiidzGqY1PRFdkeuha55rnb60651r
omuhPrbrE4bsOZ3oXmlZaFrkG+pV8jKYY5tb0/6rnT5+FO+yGqq552Nr/Pb5
zEHVXmkWaBXUYH/b/h6pH2LKyFJ1fFoZmapqy48bxSutxvz39vv79W6YL3rZ
jxzF56Gn7ff25uV4c35PU2EuOIp2/bWL0V7TYO+5GO2329Yji6tyH7229dMC
bVeNn1rjU2vcr/Huizmeej0WyPF1zP+o8Q+c35an1myT9Et4oa+v1/DESfor
vNJy7l1b9Efu7+Ua87hJ6l+817/t5fHU/7/Cn17Hf/wk9eI3uxb0sr/+yd/p
hxfjR9C/+luN/3Mx+x+7HK/2cxfjdXL9ecJ8vFCe38nL8Zq/YjHPT7+nU+OX
Lsarw7Ozy3y8OnqVDx/FC69nqbe67iheeT1W3iYepy3n433Sy12nxlvMp6e7
wpex3piPJmeFZ1PjnebTY9VbXb/GO8ynx6qXujKnmU9P9d9rfEo9j1X0bIvx
ClhPz60Ke8V2zDestxt78T7ooezWehd4NbxH3hveDn4M/cC/1r6b131PnmS+
+P6ZeEjM18xBzT3pULEa6ZGwg3A6ee948PB1cHZeUtufWc/3pPr7H85mTJNP
i//eOv72Nf7pKN6B/dux/tKJtf+Zs9Hu23+/TnTWelH8R2/ppCfFW2C9+6BV
YcfQ/1vvPrjG716MN4JH4ruzYes8a5J6B6/67b2M1UOW1WcW42/4od+b2n/v
xeQbqSesVdsPWEx/7azavk89/mqr4jXwmB6LF2HbSeolh8/Eg8JroR6z+qqw
YZ4/SX/u2Jl46K11HzoO08Wa95OTaEZoRd7Tj77EmthaGDOH1sR9bm/frrUf
Mk6evTW3LHRramvpS9qx43d6yUO3ll5rnLx1a2raYz0ovSfaZt4NPSG9IN6O
F7av93tqSYvxfniPvDe8IttNUo/4xEy8Gm+apP909kw8yLTtNO4XzoZl43j6
TcfX9u/XfVtPUk+aqn8upl/4I9/3espN3feMSepRQ/XH2r53jX9tvlt/+6W2
n2X8ntp/41XRv//K/K22f2YxWnj3uU1Lr592Xm1/d+3/mFU5nv7YL/jlZ9Mv
83xp8R+/Knp9+/+6tn1+Mdp997lNe39ojV9e4w8uJivE7Z/X/j+azX271/hc
v/96F6vSr5ZP8rYar7Mq2nA9VL1T2u/dfD/q/0fUto8sxm+3Ze1/Sj2/H89G
W6MmohZCx/OaSfp/2HjnzmZ8zija8cMX8/6qz30Uf8Rv3iT1wMNqfGcvfirv
93f0ohfjrXKf27xX+pU/dn3WSqnntFU7Prn2328xY/29Y+p4p86m3+f79mZT
o1V5vDOWw6rYp/Z/bY23qu0/MZ+Zzdj7c45+22Jev37ymbX9l7Ppdfo89++k
57lT+/6+tRONgOwx31HfTTVQ/c/f1PYDavumvp+T1KDUns5eTO1pzXr9b+in
BuX7pqallnXZYrwRPBK79qMVOnCSGpLa0U8Xo2Wiadq9H+2Q7ca0Ta/u53xV
r8PeuK2XWshqNX5FPzWRD0xSU1FL+XE79ni8GK/shwWMCYwlhQPMO8JDQn9E
h7RfbbtgFO/BkYvxE6jhqN1gVul9X2R+0UkPnD/ikhpfXdtPWky96tJRsmq2
aI+n33yeteRsvBT+xr7PamtF03FYVWpG76nxxHq5G6YVbzSP9Gg+3uh7xll/
8CJP5jOm8aTt/MUgWtK/1Pal+WhKXStoQmlBXTP+MY7mk9bzZ+3Y8Xmvm/lo
C/w+792JxuDp7fziOFqJxXgrvCfeCxwv3g41L7Uu3g/eER6Sa2bD7jqgfX13
1/F37Kf25fW9uJ8aGK0yzbJs+5e1+6txqW1hed3Zrp+wAWlm92nPv4tr+zfM
F2q8XY3Pr/f3irrvq5Mcj/b50/2M9Yz0iuTeq6U9fBxWl5raFyfpYepdXteO
bZ+tv/9IP73N9Wr8yX56nPw2an5qfZhevDfucxvn69N1+77leHuuqPsOrfGD
6+/v64Zxdlg7fnM/NVu1zHVrfGg/Nc2PtNeb+7thxh3Sfp/urfFe/WgdXb8O
6EfrSPumJqwWTCvn/aF3OLfej0tno7WjuftAP1o9z8+Y9u79rX/nYuvF2veE
xdQffX4H1tvyND2uGr+oxhfU8a6ajfbA/h/oRIPg/ff94d351mK8QI7pWLxz
72i/Hx+s/Tdvj+f7c3ntf2ztc1CNH1TP51/1+vao5/PZGt9ff/eAdaffi/b9
WdULc812jFds1wP78VaokaqN7tTWoh1vz35q0o5/13K0hD9fDLtaPR3bC9ec
X4feD28MU4X/gx4NTwyjRf+JfvNvbe9dNrmMcnnkssdltaspqyXLdqftp/GX
J077rzf56HGYbnqUstV5GHgX5KNjXatPY7vhqvM22C5fnZdArZnGmbZZzZn2
iiaXFveh7eN7PF4CmfG8GzTNtMy8HWrj/zUK20aNXG38paOwa9TIaW9onGmb
aXDUummmaaXVvL1eTGEsYZnsnr+MeF4Tue+04TTicololbGTrSfxlnGXsZDN
j/GecZ+xmjGb8ZJxk+nDra/4wfnCsZ0xnvGlcaaxiunR8JxxnbF89QPw1HDV
sH6dD/i4OLnYt9a//Px8/Z6b/qnMJM+Rdp2GXQ6PHurxk/QA1P4x97CTvV48
ZVxl7FzrD35+vn6sXetn/n0+fqxf6xE8AFwAWjiafVp9mrgja7xhHW9Q79/X
+9FKGR/Rj2ZKFhV/EzaOjCr+vRV94apkYcnToi+UR8tDw9vJ4ymHjrdTtpr+
H/aPTDzH45+SaSXbSrYYf5V8RzmPxjIssX1kjsky48+S90kTq/eP4Y1FRwPA
m8OjI0/twPbx9Bdl6Ml0k+3HXyV7UMaffC5+LFmcPLu01TTW8tOw8ezPnyXD
TJYZFjY9KF75Sa1/VX9Sxp7XyJvD88DrwDt1RG1/RB1/od7PL/czXjWKNvnW
xXyevm+NWn8/2gH7f7UfDYHPg6aMluz2Gh9d40fW9sVemIy00jRstGu00t9q
tx/djwbtmBpvVOOlXpiKtJU8JLwjNJa8mTRutG18wbTG+qfyXbADv93+/bH9
aOT4tWgYaBcwIGnjHlXbT+xHI8fLZR/bcCKxwtXX8MRxxbGcMZ3x13HYNfp9
fvjYONmyX/Q7ZL3JgDHWH5IRIyuGv0a/TYaJLBN5Ifp9supo4GWd6PfJx+FV
oM/yN/bl1eG94cGR86HHQb9M34Ingysjm0K9CItJloVsF/0MLCcZL8b6HTJY
ZLHwEukfymvBAnRs/REZIh5DVobXi10tM8NYhoZMjpVsjkn6K/+f/SRrSP0I
W0rmEG+SfqP8E6xErCH6hNVmwxpWa6MBo/1Sc1NLoEGjPVNTUEuisaGtUVNS
e6A5ozVTg/B7QVNGS4blp7aw3TjsRDUGtQcaNto1NQi1CZogWiA1CrUPmh9a
HzUQeunT67516Hl7qTXR7NDqqDlZD1kjYcKdNZvfJxof2h7sRFkEMgmw/+SU
qO3RDNEKqfH5vaQpoiXCKqQ9oqGmnaZB8v7pF8mrleEki04/CUtMJh0/jOsL
f+GKz3Ca6ws/G18bP496J57GU1v99a6j+Nn42ujL9xjFT85XTm/9xlH8tny3
9OBvGsWfy6fLD6Gnp5eHyc2PQc/yxbmwtvh/1P/wS57c+ofUY/GgcKHowV87
il+db53+Xf/xtLmWPTZNvRpfEmeSfl49D68Rt5E/TM1brRtHUtaPfpkMHlk8
9OSvGsUvyDco20D9WH6CHAVZcfqNWGky6/z9CkOumwwl2/UfZdbJlPN+q5di
qcnek53m+oiNL7PNtUx/VKbc/u12mW4y5GSsyW7Tv5UvypPJu6O/e8GqsNhk
PagPyz+Qg8C/oz8rc0z2mGwJGRPyAOQC8JrxnMmZ41WS5af/i7Un089Yf1nG
lqwt++oHy6TzN7RdNPa09TReWAA0/LT72Ai0cDT+tP00cfTfNOG04Lhd9OI0
3rTdOCz0q+qN23fCpaHno+mm5catoS/kn8Z7wH2gj6JhoV3BGaGnsX7Gq8Gt
odeh0aHNwa2hD6EZoRXBVaHXVm/r98PaoMfWD/jrfFgf9I++7/jZGKH0XvJX
9+yEO0L/yL+NX4FjQW+hHopPhlNGT08/ws/N102frcartosBTR/Hj8w/y0dL
/88Ph1+NwWk+bM5srsxzbP5PT4J/z3Nj/UAPgo/PM6XepV7FH8UnZT1nDWrt
ybPveuaa51qHOeD66JrpWslTpB5Pj4f/z2NqPUcPga/Pg0pPz+PA24BTxA/A
H4jfjcFJn+j3CR8cw1J/jR9RHsNj236anpdeFwaa9Zb1GB4C5oF+kR6R3hBG
mPWpegCeAQYA/wM9Ez8xXzG9NT0/fhCOkP6dmr5aPqaX+qr1M94S7hJ2m56n
XieGGz6cnq5eLk6cftvvx8njwGTTf75lnDwKjDP97pvHyT/BiNMv1S/GZ8Np
o1ej/6Edximj56LRos3CweCXN1/DL8ExWenXjZNHgUlHv0AjQRuB08GPzy+D
p4w5Se/IX3ZbJwxDfnoaMdowXA76cn4F/CYcJ3o4njZett+0ejuaSlpKjEV6
GvN/vE3cTXoY+i3+dD51/gDr8af3w0qhp1eP2qAftgY9vZqdWt11rX/A/A2g
EZeT3sn6GT8UR5SeyfoNbxR3lJ6SRpI2EqeH3pDfCO8XUxAfUE9HLwc3kL6Q
PwkfGKNQv1+/mV4do0l9hV9WvgoGHX0ZvyPeNQao+QH+Af5pr53v05DTjmP3
mp+Zr+G98Nxbj1vzW+vzpLk288/gtbpGq2fTF35qJgwd9UB+BTxYzCX1dDVs
tWvMIfU3+sPPzIQdj9dA34t3hHukXspvsMIDHqberH7FH8cnpz6sZqxWjIGi
/0TP9qGZMIDUm/lH8Gkxh9TT1djV1jGMsEJkauHHYoZgb/AL4cticKj/8k/g
yWKiqLeqj+J7YHJgD9EH4uljEOk38LjwtmAG6bfR+NL23rwYbbf5ABYqjTdt
sfkCdiyNMe2w6ysWKQ0xbbL5gaw4GuWfttcrbG2aY9px13ssVRpy2nAeN942
GnHacZ4/Xj8aclpk8w9ZczTJ/Nz01/hzOHT8e/wI+Hc4eOr5+iv7dsKVoW3n
GeQVpHHHNuIR5A3ENqKd5uHj3aOhpn3nKeQlpIFXH6UXk2+CIaO/xT+I/4fh
pz/Gb4wXhxtn/U3/K4+dR9t6yxrM2oun1fqJHhvvAOPA9ZaeHW8Ig0e9gR5O
PgmmgvUxfbFsYx5v82VrAmuBLdrrPz2X/G6ec15f+jF8dZ5f9XM1LLUrHlX1
XPo2+Sw8qt4P+n58I5wj9UL1WDxgzBn1C/o7fAoMCvMVcxhzF55j9RV6Pfkr
GAr6v3gl+HU4dtg3eAh48xg41q/W0NbOGBP68fxIeGuYavQi9CD4i5iH9DH8
/PKBMAr18/RvX98Jh0Y/k79S3g+GI70ADQHtAKYc1hp/nnwLzDX9P36/vWbC
bNM/1PPT68McUw+m98NPxthRP+N/wpPF1LHe5yd8YjdMJ/VqHibeJewceiL+
t3fMhElGP6QZ/86ZMNboh2iGaIUw8qzX6NFkUWMm/B9tcV33
         
         "]]}]}, {}, {}, {}, {}}, {
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0D1MU1EYgOFPKg1LiwObEHVgIyZuLCTCBgEGExcZTBgcINpUg00tTUOI
4S/amJgYNicmFgcZiG4uLgzU0has1ZhqDIM6ucjP0+Hmnvc597vn5l6bzdx6
cCEi1l0TiYjO+u/FiLb7lN7qjbhkfbk7otdmjl3Rw3pIZ22+ZNfZbfbb8+P8
DRthD9kfdo/tsUm2a6bMl9kxm2Hv2DZ7zXqcv2Nmjn9k79kg+8Dy7Ac7ZM/N
jPFVlkhG/GNldpe9YldZSvd1RSyyLTbC0uwG22RvWV3f4dNsp3MOa7Acm2cV
VmGP9Zze1zdTEZ9Ynt1n/3WVV1mBZdgJq7EDVmRPdJY3WI2VWIE9YkeszpbY
gm7qhu5P+08sx1rskD3Vef1Nj5o/Yiudd7Hv7LNe00V9ar/NmmyDldgZ+8m+
sGdsUS/xX6zFyp1ZtsyO2Vc24Dte8CQ/ByN4UmA=
       "]], 
      LineBox[{846, 2, 3584, 1262, 226, 842}], 
      LineBox[{849, 3, 1266, 3394, 230, 846}], 
      LineBox[{852, 4, 1269, 3395, 233, 849}], 
      LineBox[{855, 5, 1272, 236, 3526, 852}], 
      LineBox[{858, 6, 1275, 239, 3527, 855}], 
      LineBox[{3365, 7, 1278, 242, 858}], 
      LineBox[{864, 8, 1281, 245, 861, 3365}], 
      LineBox[{867, 9, 3586, 1284, 248, 864}], 
      LineBox[{870, 10, 1287, 251, 867}], 
      LineBox[{873, 11, 1290, 3398, 254, 870}], 
      LineBox[{876, 12, 1293, 3399, 257, 873}], 
      LineBox[{879, 13, 1296, 260, 3530, 876}], 
      LineBox[{3367, 14, 1299, 263, 3531, 879}], 
      LineBox[{883, 15, 1302, 266, 3335}], 
      LineBox[{912, 30, 4281, 1303, 267, 883}], 
      LineBox[{941, 45, 1332, 296, 912}], 
      LineBox[{970, 60, 1361, 4078, 325, 941}], 
      LineBox[{999, 75, 1390, 354, 4223, 970}], 
      LineBox[{4020, 90, 1419, 383, 4237, 999}], 
      LineBox[{4035, 105, 1448, 412, 1028, 4020}], 
      LineBox[{1086, 120, 4297, 1477, 441, 1057, 4035}], 
      LineBox[{1115, 135, 4311, 1506, 470, 1086}], 
      LineBox[{1144, 150, 1535, 4094, 499, 1115}], 
      LineBox[{1173, 165, 1564, 4108, 528, 1144}], 
      LineBox[{1202, 180, 1593, 557, 4253, 1173}], 
      LineBox[{4050, 195, 1622, 586, 4267, 1202}], 
      LineBox[{4064, 210, 1651, 615, 1231, 4050}], 
      LineBox[{1261, 225, 1680, 644, 1260, 4064}], LineBox[{3263, 645, 1261}],
       LineBox[{3264, 882, 3367}]}, {}, {}, 
     {GrayLevel[0], Opacity[0.3], 
      LineBox[{858, 2471, 1705, 2679, 4549, 1280, 2485, 1761, 4577, 2721, 
       1317, 2499, 1817, 4605, 2763, 1346, 2513, 4431, 1873, 2805, 1375, 2527,
        4445, 1929, 2847, 1404, 4459, 2541, 1985, 2889, 1433, 4473, 2555, 
       2041, 2931, 4681, 1462, 2569, 2097, 2973, 4717, 1491, 2583, 2153, 4745,
        3015, 1520, 2597, 2209, 4773, 3057, 1549, 2611, 4487, 2265, 3099, 
       1578, 2625, 4501, 2321, 3141, 1607, 4515, 2639, 2377, 3183, 1636, 4529,
        2653, 2433, 3225, 1665}], 
      LineBox[{3365, 3700, 3455, 3788, 4958, 3585, 3706, 3460, 3804, 3588, 
       3712, 3465, 4897, 3820, 3590, 3718, 4923, 3470, 3836, 3592, 3724, 4925,
        3475, 3852, 3594, 4929, 3730, 3480, 3868, 3596, 4935, 3736, 3485, 
       3884, 4997, 3598, 3742, 3490, 3900, 5010, 3600, 3748, 3495, 4913, 3916,
        3602, 3754, 3500, 4915, 3932, 3604, 3760, 4939, 3505, 3948, 3606, 
       3766, 4941, 3510, 3964, 3608, 4945, 3772, 3515, 3980, 3610, 4951, 3778,
        3520, 3996, 3612}], 
      LineBox[{8, 862, 246, 1282, 4274, 23, 898, 282, 1318, 38, 927, 311, 
       4071, 1347, 53, 956, 4216, 340, 1376, 68, 985, 4230, 369, 1405, 83, 
       4013, 1014, 398, 1434, 98, 4028, 1043, 427, 1463, 4290, 113, 1072, 456,
        1492, 4304, 128, 1101, 485, 4087, 1521, 143, 1130, 514, 4101, 1550, 
       158, 1159, 4246, 543, 1579, 173, 1188, 4260, 572, 1608, 188, 4043, 
       1217, 601, 1637, 203, 4057, 1246, 630, 1666, 218}], 
      LineBox[{3367, 3703, 3458, 3797, 4963, 3587, 3709, 3463, 4896, 3813, 
       3589, 3715, 3468, 4898, 3829, 3591, 3721, 4924, 3473, 3845, 3593, 3727,
        4926, 3478, 3861, 3595, 4932, 3733, 3483, 3877, 3597, 4938, 3739, 
       3488, 3893, 5006, 3599, 3745, 3493, 3909, 5015, 3601, 3751, 3498, 4914,
        3925, 3603, 3757, 3503, 4916, 3941, 3605, 3763, 4940, 3508, 3957, 
       3607, 3769, 4942, 3513, 3973, 3609, 4948, 3775, 3518, 3989, 3611, 4954,
        3781, 3523, 4005, 3613}], 
      LineBox[{3392, 3991, 3519, 3990, 5045, 3390, 3975, 3514, 3974, 5038, 
       3388, 3959, 3509, 4920, 3958, 3386, 3943, 3504, 4917, 3942, 3384, 3927,
        5025, 3499, 3926, 3382, 3911, 5016, 3494, 3910, 3380, 5007, 3895, 
       3489, 3894, 3378, 4992, 3879, 3484, 3878, 4991, 3376, 3863, 3479, 3862,
        4984, 3374, 3847, 3474, 4902, 3846, 3372, 3831, 3469, 4899, 3830, 
       3370, 3815, 4971, 3464, 3814, 3368, 3799, 3459, 3798, 3364, 4955, 3783,
        3454, 3782, 3584}], 
      LineBox[{3393, 3998, 3521, 3997, 5048, 3391, 3982, 3516, 3981, 5041, 
       3389, 3966, 3511, 4921, 3965, 3387, 3950, 3506, 4918, 3949, 3385, 3934,
        5029, 3501, 3933, 3383, 3918, 5020, 3496, 3917, 3381, 5011, 3902, 
       3491, 3901, 3379, 4999, 3886, 3486, 3885, 4998, 3377, 3870, 3481, 3869,
        4987, 3375, 3854, 3476, 4903, 3853, 3373, 3838, 3471, 4900, 3837, 
       3371, 3822, 4975, 3466, 3821, 3369, 3806, 3461, 3805, 3366, 4959, 3790,
        3456, 3789, 3586}], 
      LineBox[{1251, 4000, 3522, 3999, 5049, 1222, 3984, 3517, 3983, 5042, 
       1193, 3968, 3512, 4922, 3967, 1164, 3952, 3507, 4919, 3951, 1135, 3936,
        5030, 3502, 3935, 1106, 3920, 5021, 3497, 3919, 1077, 5012, 3904, 
       3492, 3903, 1048, 5001, 3888, 3487, 3887, 5000, 1019, 3872, 3482, 3871,
        4988, 990, 3856, 3477, 4904, 3855, 961, 3840, 3472, 4901, 3839, 932, 
       3824, 4976, 3467, 3823, 903, 3808, 4967, 3462, 3807, 869, 4960, 3792, 
       3457, 3791, 1287}], 
      LineBox[{3394, 2665, 1686, 2666, 4892, 3524, 2707, 1742, 4568, 2708, 
       3532, 2749, 1798, 4596, 2750, 3536, 2791, 4623, 1854, 2792, 3540, 2833,
        4637, 1910, 2834, 3544, 4985, 2875, 1966, 2876, 3548, 4993, 2917, 
       2022, 2918, 4905, 3552, 2959, 2078, 2960, 4909, 3556, 3001, 2134, 4736,
        3002, 3560, 3043, 2190, 4764, 3044, 3564, 3085, 4791, 2246, 3086, 
       3568, 3127, 4805, 2302, 3128, 3572, 5039, 3169, 2358, 3170, 3576, 5046,
        3211, 2414, 3212, 3580}], 
      LineBox[{3395, 3784, 3614, 3785, 4893, 3525, 3800, 3620, 4964, 3801, 
       3533, 3816, 3626, 4972, 3817, 3537, 3832, 4980, 3632, 3833, 3541, 3848,
        4982, 3638, 3849, 3545, 4986, 3864, 3644, 3865, 3549, 4994, 3880, 
       3650, 3881, 4906, 3553, 3896, 3656, 3897, 4910, 3557, 3912, 3662, 5017,
        3913, 3561, 3928, 3668, 5026, 3929, 3565, 3944, 5034, 3674, 3945, 
       3569, 3960, 5036, 3680, 3961, 3573, 5040, 3976, 3686, 3977, 3577, 5047,
        3992, 3692, 3993, 3581}], 
      LineBox[{3398, 3793, 3617, 3794, 4894, 3528, 3809, 3623, 4968, 3810, 
       3534, 3825, 3629, 4977, 3826, 3538, 3841, 4981, 3635, 3842, 3542, 3857,
        4983, 3641, 3858, 3546, 4989, 3873, 3647, 3874, 3550, 5002, 3889, 
       3653, 3890, 4907, 3554, 3905, 3659, 3906, 4911, 3558, 3921, 3665, 5022,
        3922, 3562, 3937, 3671, 5031, 3938, 3566, 3953, 5035, 3677, 3954, 
       3570, 3969, 5037, 3683, 3970, 3574, 5043, 3985, 3689, 3986, 3578, 5050,
        4001, 3695, 4002, 3582}], 
      LineBox[{3399, 1723, 656, 1724, 4895, 3529, 1779, 670, 4324, 1780, 3535,
        1835, 684, 4338, 1836, 3539, 1891, 4135, 698, 1892, 3543, 1947, 4149, 
       712, 1948, 3547, 4990, 2003, 726, 2004, 3551, 5003, 2059, 740, 2060, 
       4908, 3555, 2115, 754, 2116, 4912, 3559, 2171, 768, 4380, 2172, 3563, 
       2227, 782, 4394, 2228, 3567, 2283, 4191, 796, 2284, 3571, 2339, 4205, 
       810, 2340, 3575, 5044, 2395, 824, 2396, 3579, 5051, 2451, 838, 2452, 
       3583}], LineBox[{3450, 3994, 3693, 3776, 4949, 3446, 3978, 3687, 3770, 
       4943, 3442, 3962, 3681, 4888, 3764, 3438, 3946, 3675, 4884, 3758, 3434,
        3930, 5027, 3669, 3752, 3430, 3914, 5018, 3663, 3746, 3426, 5008, 
       3898, 3657, 3740, 3422, 4995, 3882, 3651, 3734, 4933, 3418, 3866, 3645,
        3728, 4927, 3414, 3850, 3639, 4880, 3722, 3410, 3834, 3633, 4876, 
       3716, 3406, 3818, 4973, 3627, 3710, 3402, 3802, 4965, 3621, 3704, 3396,
        4956, 3786, 3615, 3698, 3526}], 
      LineBox[{3451, 3995, 3694, 3777, 4950, 3447, 3979, 3688, 3771, 4944, 
       3443, 3963, 3682, 4889, 3765, 3439, 3947, 3676, 4885, 3759, 3435, 3931,
        5028, 3670, 3753, 3431, 3915, 5019, 3664, 3747, 3427, 5009, 3899, 
       3658, 3741, 3423, 4996, 3883, 3652, 3735, 4934, 3419, 3867, 3646, 3729,
        4928, 3415, 3851, 3640, 4881, 3723, 3411, 3835, 3634, 4877, 3717, 
       3407, 3819, 4974, 3628, 3711, 3403, 3803, 4966, 3622, 3705, 3397, 4957,
        3787, 3616, 3699, 3527}], 
      LineBox[{3452, 4003, 3696, 3779, 4952, 3448, 3987, 3690, 3773, 4946, 
       3444, 3971, 3684, 4890, 3767, 3440, 3955, 3678, 4886, 3761, 3436, 3939,
        5032, 3672, 3755, 3432, 3923, 5023, 3666, 3749, 3428, 5013, 3907, 
       3660, 3743, 3424, 5004, 3891, 3654, 3737, 4936, 3420, 3875, 3648, 3731,
        4930, 3416, 3859, 3642, 4882, 3725, 3412, 3843, 3636, 4878, 3719, 
       3408, 3827, 4978, 3630, 3713, 3404, 3811, 4969, 3624, 3707, 3400, 4961,
        3795, 3618, 3701, 3530}], 
      LineBox[{3453, 4004, 3697, 3780, 4953, 3449, 3988, 3691, 3774, 4947, 
       3445, 3972, 3685, 4891, 3768, 3441, 3956, 3679, 4887, 3762, 3437, 3940,
        5033, 3673, 3756, 3433, 3924, 5024, 3667, 3750, 3429, 5014, 3908, 
       3661, 3744, 3425, 5005, 3892, 3655, 3738, 4937, 3421, 3876, 3649, 3732,
        4931, 3417, 3860, 3643, 4883, 3726, 3413, 3844, 3637, 4879, 3720, 
       3409, 3828, 4979, 3631, 3714, 3405, 3812, 4970, 3625, 3708, 3401, 4962,
        3796, 3619, 3702, 3531}]}, 
     {GrayLevel[0], Opacity[0.3], 
      LineBox[{4006, 4539, 4111, 4538, 4955, 4268, 4541, 4112, 4892, 4540, 
       4269, 4543, 4113, 4893, 4542, 4270, 4545, 4956, 4114, 4544, 4271, 4547,
        4957, 4115, 4546, 4272, 4549, 4116, 4548, 4273, 4958, 4551, 4117, 
       4550, 4274, 4553, 4118, 4552, 4959, 4275, 4555, 4119, 4554, 4960, 4276,
        4557, 4120, 4894, 4556, 4277, 4559, 4121, 4895, 4558, 4278, 4561, 
       4961, 4122, 4560, 4279, 4563, 4962, 4123, 4562, 4280, 4963, 4565, 
       4854}], LineBox[{887, 4567, 4314, 4566, 3799, 1305, 4569, 4315, 4568, 
       1308, 4571, 4316, 4964, 4570, 1310, 4573, 4965, 4317, 4572, 1312, 4575,
        4966, 4318, 4574, 1314, 4577, 4319, 4576, 1316, 3804, 4579, 4320, 
       4578, 1318, 4581, 4321, 4580, 3806, 1320, 4583, 4322, 4582, 4967, 1322,
        4585, 4323, 4968, 4584, 1324, 4587, 4324, 4586, 1326, 4589, 4969, 
       4325, 4588, 1328, 4591, 4970, 4326, 4590, 1330, 4896, 4593, 4855}], 
      LineBox[{4020, 4663, 4355, 4865}], 
      LineBox[{4022, 4666, 4153, 4665, 4992, 4283, 4669, 4154, 4905, 4668, 
       4285, 4672, 4155, 4906, 4671, 4286, 4675, 4995, 4156, 4674, 4287, 4678,
        4996, 4157, 4677, 4288, 4681, 4158, 4680, 4289, 4997, 4684, 4159, 
       4683, 4290, 4687, 4160, 4686, 4999, 4291, 4690, 4161, 4689, 5001, 4292,
        4693, 4162, 4907, 4692, 4293, 4696, 4163, 4908, 4695, 4294, 4699, 
       5004, 4164, 4698, 4295, 4702, 5005, 4165, 4701, 4296, 5006, 4705, 
       4857}], LineBox[{4035, 4703, 4369, 4866}], 
      LineBox[{4036, 4707, 4167, 4706, 5007, 4298, 4709, 4168, 4909, 4708, 
       4299, 4711, 4169, 4910, 4710, 4300, 4713, 5008, 4170, 4712, 4301, 4715,
        5009, 4171, 4714, 4302, 4717, 4172, 4716, 4303, 5010, 4719, 4173, 
       4718, 4304, 4721, 4174, 4720, 5011, 4305, 4723, 4175, 4722, 5012, 4306,
        4725, 4176, 4911, 4724, 4307, 4727, 4177, 4912, 4726, 4308, 4729, 
       5013, 4178, 4728, 4309, 4731, 5014, 4179, 4730, 4310, 5015, 4733, 
       4858}], LineBox[{4050, 4831, 4411, 4867}], 
      LineBox[{4064, 4845, 4425, 4868}], LineBox[{1332, 4592, 4327, 4870}], 
      LineBox[{4078, 4620, 4341, 4871}], 
      LineBox[{4079, 4426, 4125, 4622, 4899, 4210, 4427, 4126, 4623, 4211, 
       4428, 4127, 4980, 4624, 4212, 4429, 4876, 4128, 4625, 4213, 4430, 4877,
        4129, 4626, 4214, 4431, 4130, 4627, 4215, 4923, 4432, 4131, 4628, 
       4216, 4433, 4132, 4629, 4900, 4217, 4434, 4133, 4630, 4901, 4218, 4435,
        4134, 4981, 4631, 4219, 4436, 4135, 4632, 4220, 4437, 4878, 4136, 
       4633, 4221, 4438, 4879, 4137, 4634, 4222, 4924, 4439, 4846}], 
      LineBox[{4080, 4440, 4139, 4636, 4902, 4224, 4441, 4140, 4637, 4225, 
       4442, 4141, 4982, 4638, 4226, 4443, 4880, 4142, 4639, 4227, 4444, 4881,
        4143, 4640, 4228, 4445, 4144, 4641, 4229, 4925, 4446, 4145, 4642, 
       4230, 4447, 4146, 4643, 4903, 4231, 4448, 4147, 4644, 4904, 4232, 4449,
        4148, 4983, 4645, 4233, 4450, 4149, 4646, 4234, 4451, 4882, 4150, 
       4647, 4235, 4452, 4883, 4151, 4648, 4236, 4926, 4453, 4847}], 
      LineBox[{4094, 4760, 4383, 4874}], LineBox[{4108, 4788, 4397, 4875}], 
      LineBox[{4109, 4482, 4181, 4790, 4917, 4240, 4483, 4182, 4791, 4241, 
       4484, 4183, 5034, 4792, 4242, 4485, 4884, 4184, 4793, 4243, 4486, 4885,
        4185, 4794, 4244, 4487, 4186, 4795, 4245, 4939, 4488, 4187, 4796, 
       4246, 4489, 4188, 4797, 4918, 4247, 4490, 4189, 4798, 4919, 4248, 4491,
        4190, 5035, 4799, 4249, 4492, 4191, 4800, 4250, 4493, 4886, 4192, 
       4801, 4251, 4494, 4887, 4193, 4802, 4252, 4940, 4495, 4848}], 
      LineBox[{4110, 4496, 4195, 4804, 4920, 4254, 4497, 4196, 4805, 4255, 
       4498, 4197, 5036, 4806, 4256, 4499, 4888, 4198, 4807, 4257, 4500, 4889,
        4199, 4808, 4258, 4501, 4200, 4809, 4259, 4941, 4502, 4201, 4810, 
       4260, 4503, 4202, 4811, 4921, 4261, 4504, 4203, 4812, 4922, 4262, 4505,
        4204, 5037, 4813, 4263, 4506, 4205, 4814, 4264, 4507, 4890, 4206, 
       4815, 4265, 4508, 4891, 4207, 4816, 4266, 4942, 4509, 4849}], 
      LineBox[{4209, 4595, 4328, 4594, 4971, 4065, 4597, 4329, 4596, 4066, 
       4599, 4330, 4972, 4598, 4067, 4601, 4973, 4331, 4600, 4068, 4603, 4974,
        4332, 4602, 4069, 4605, 4333, 4604, 4070, 4897, 4607, 4334, 4606, 
       4071, 4609, 4335, 4608, 4975, 4072, 4611, 4336, 4610, 4976, 4073, 4613,
        4337, 4977, 4612, 4074, 4615, 4338, 4614, 4075, 4617, 4978, 4339, 
       4616, 4076, 4619, 4979, 4340, 4618, 4077, 4898, 4621, 4856}], 
      LineBox[{4223, 4635, 4138, 4861}], LineBox[{4237, 4649, 4152, 4862}], 
      LineBox[{4238, 4735, 4370, 4734, 5016, 4081, 4737, 4371, 4736, 4082, 
       4739, 4372, 5017, 4738, 4083, 4741, 5018, 4373, 4740, 4084, 4743, 5019,
        4374, 4742, 4085, 4745, 4375, 4744, 4086, 4913, 4747, 4376, 4746, 
       4087, 4749, 4377, 4748, 5020, 4088, 4751, 4378, 4750, 5021, 4089, 4753,
        4379, 5022, 4752, 4090, 4755, 4380, 4754, 4091, 4757, 5023, 4381, 
       4756, 4092, 4759, 5024, 4382, 4758, 4093, 4914, 4761, 4859}], 
      LineBox[{4239, 4763, 4384, 4762, 5025, 4095, 4765, 4385, 4764, 4096, 
       4767, 4386, 5026, 4766, 4097, 4769, 5027, 4387, 4768, 4098, 4771, 5028,
        4388, 4770, 4099, 4773, 4389, 4772, 4100, 4915, 4775, 4390, 4774, 
       4101, 4777, 4391, 4776, 5029, 4102, 4779, 4392, 4778, 5030, 4103, 4781,
        4393, 5031, 4780, 4104, 4783, 4394, 4782, 4105, 4785, 5032, 4395, 
       4784, 4106, 4787, 5033, 4396, 4786, 4107, 4916, 4789, 4860}], 
      LineBox[{4253, 4803, 4194, 4863}], LineBox[{4267, 4817, 4208, 4864}], 
      LineBox[{4281, 4564, 4124, 4869}], 
      LineBox[{4282, 4454, 4342, 4650, 4984, 4007, 4455, 4343, 4985, 4651, 
       4008, 4456, 4344, 4986, 4652, 4009, 4457, 4927, 4345, 4653, 4010, 4458,
        4928, 4346, 4654, 4011, 4459, 4347, 4655, 4012, 4929, 4460, 4348, 
       4656, 4013, 4461, 4349, 4657, 4987, 4014, 4462, 4350, 4658, 4988, 4015,
        4463, 4351, 4989, 4659, 4016, 4464, 4352, 4990, 4660, 4017, 4465, 
       4930, 4353, 4661, 4018, 4466, 4931, 4354, 4662, 4019, 4932, 4467, 
       4850}], LineBox[{4284, 4468, 4356, 4664, 4991, 4021, 4469, 4357, 4993, 
       4667, 4023, 4470, 4358, 4994, 4670, 4024, 4471, 4933, 4359, 4673, 4025,
        4472, 4934, 4360, 4676, 4026, 4473, 4361, 4679, 4027, 4935, 4474, 
       4362, 4682, 4028, 4475, 4363, 4685, 4998, 4029, 4476, 4364, 4688, 5000,
        4030, 4477, 4365, 5002, 4691, 4031, 4478, 4366, 5003, 4694, 4032, 
       4479, 4936, 4367, 4697, 4033, 4480, 4937, 4368, 4700, 4034, 4938, 4481,
        4851}], LineBox[{4297, 4704, 4166, 4872}], 
      LineBox[{4311, 4732, 4180, 4873}], 
      LineBox[{4312, 4510, 4398, 4818, 5038, 4037, 4511, 4399, 5039, 4819, 
       4038, 4512, 4400, 5040, 4820, 4039, 4513, 4943, 4401, 4821, 4040, 4514,
        4944, 4402, 4822, 4041, 4515, 4403, 4823, 4042, 4945, 4516, 4404, 
       4824, 4043, 4517, 4405, 4825, 5041, 4044, 4518, 4406, 4826, 5042, 4045,
        4519, 4407, 5043, 4827, 4046, 4520, 4408, 5044, 4828, 4047, 4521, 
       4946, 4409, 4829, 4048, 4522, 4947, 4410, 4830, 4049, 4948, 4523, 
       4852}], LineBox[{4313, 4524, 4412, 4832, 5045, 4051, 4525, 4413, 5046, 
       4833, 4052, 4526, 4414, 5047, 4834, 4053, 4527, 4949, 4415, 4835, 4054,
        4528, 4950, 4416, 4836, 4055, 4529, 4417, 4837, 4056, 4951, 4530, 
       4418, 4838, 4057, 4531, 4419, 4839, 5048, 4058, 4532, 4420, 4840, 5049,
        4059, 4533, 4421, 5050, 4841, 4060, 4534, 4422, 5051, 4842, 4061, 
       4535, 4952, 4423, 4843, 4062, 4536, 4953, 4424, 4844, 4063, 4954, 4537,
        4853}]}, {}}}],
  AspectRatio->1,
  Axes->True,
  Frame->True,
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}]],
  Method->{"TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{0, All}, {0, All}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.570426897917255*^9, {3.570426968648581*^9, 3.5704269707136173`*^9}, {
   3.570427222033291*^9, 3.570427240022152*^9}, 3.570427436106123*^9, {
   3.570485659294079*^9, 3.570485664548131*^9}, {3.609569953680142*^9, 
   3.609569968906968*^9}, 3.609571492532119*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Signal", "Section",
 CellChangeTimes->{{3.570427629379537*^9, 3.570427642545865*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"length", " ", "to", " ", "the", " ", "PMT"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"PMT", " ", "position"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PosF", "[", "id_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"d", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]p", "[", 
           RowBox[{"[", "id", "]"}], "]"}], "]"}], ",", "0", ",", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]p", "[", 
           RowBox[{"[", "id", "]"}], "]"}], "]"}]}], "}"}]}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"Tan", "[", 
        RowBox[{
         RowBox[{"\[Theta]p", "[", 
          RowBox[{"[", "id", "]"}], "]"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "id"], "20", " ", "\[Degree]"}]}], 
        "]"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "2"], "-", 
            RowBox[{"\[Theta]p", "[", 
             RowBox[{"[", "id", "]"}], "]"}]}], "]"}]}], ",", "0", ",", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "2"], "-", 
           RowBox[{"\[Theta]p", "[", 
            RowBox[{"[", "id", "]"}], "]"}]}], "]"}]}], "}"}]}]}], "//", 
     "N"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PosB", "[", "id_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"d", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]p", "[", 
           RowBox[{"[", "id", "]"}], "]"}], "]"}], ",", "0", ",", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]p", "[", 
           RowBox[{"[", "id", "]"}], "]"}], "]"}]}], "}"}]}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"Tan", "[", 
        RowBox[{
         RowBox[{"\[Theta]p", "[", 
          RowBox[{"[", "id", "]"}], "]"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "id"], "70", " ", "\[Degree]"}]}], 
        "]"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "2"], "-", 
            RowBox[{"\[Theta]p", "[", 
             RowBox[{"[", "id", "]"}], "]"}]}], "]"}]}], ",", "0", ",", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "2"], "-", 
           RowBox[{"\[Theta]p", "[", 
            RowBox[{"[", "id", "]"}], "]"}]}], "]"}]}], "}"}]}]}], "//", 
     "N"}]}], "\[IndentingNewLine]", 
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{"PosB", "[", "1", "]"}], "-", 
     RowBox[{"PosF", "[", "1", "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ArcCos", "[", 
     RowBox[{
      RowBox[{"Normalize", "[", 
       RowBox[{"PosF", "[", "1", "]"}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], 
    FractionBox["180", "\[Pi]"]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ArcCos", "[", 
     RowBox[{
      RowBox[{"Normalize", "[", 
       RowBox[{"PosB", "[", "1", "]"}], "]"}], ".", 
      RowBox[{"Normalize", "[", 
       RowBox[{"PosF", "[", "1", "]"}], "]"}]}], "]"}], 
    FractionBox["180", "\[Pi]"]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5704277189074993`*^9, 3.570427740583625*^9}, {
  3.570427946856481*^9, 3.570428024952079*^9}, {3.570428055750903*^9, 
  3.570428168285468*^9}, {3.5704282680923357`*^9, 3.5704282734163733`*^9}, {
  3.5704283168423853`*^9, 3.570428405302997*^9}, {3.5704284416347647`*^9, 
  3.5704286469057407`*^9}, {3.570442958479177*^9, 3.570442961058135*^9}, {
  3.57044383028024*^9, 3.57044383292723*^9}, {3.5704458160988092`*^9, 
  3.570445818916252*^9}, {3.5704859549765453`*^9, 3.570485999294215*^9}}],

Cell[BoxData["1421.5972566400433`"], "Output",
 CellChangeTimes->{{3.570428138060837*^9, 3.5704281466608963`*^9}, 
   3.570428177626194*^9, 3.570428273986754*^9, 3.570428363984201*^9, {
   3.570428467142563*^9, 3.570428483053481*^9}, {3.5704285665767937`*^9, 
   3.570428648320075*^9}, 3.57044296242935*^9, 3.570443833513587*^9, 
   3.5704447119326687`*^9, 3.570444868242724*^9, 3.57044581946935*^9, 
   3.5704846856803093`*^9, {3.570485958023487*^9, 3.5704859995954723`*^9}, 
   3.570486922948512*^9, 3.570609419275565*^9, 3.570689520017869*^9, 
   3.5708500451782103`*^9, 3.571680359543572*^9, 3.6095693141796827`*^9, 
   3.609716336823391*^9}],

Cell[BoxData["19.999999999999975`"], "Output",
 CellChangeTimes->{{3.570428138060837*^9, 3.5704281466608963`*^9}, 
   3.570428177626194*^9, 3.570428273986754*^9, 3.570428363984201*^9, {
   3.570428467142563*^9, 3.570428483053481*^9}, {3.5704285665767937`*^9, 
   3.570428648320075*^9}, 3.57044296242935*^9, 3.570443833513587*^9, 
   3.5704447119326687`*^9, 3.570444868242724*^9, 3.57044581946935*^9, 
   3.5704846856803093`*^9, {3.570485958023487*^9, 3.5704859995954723`*^9}, 
   3.570486922948512*^9, 3.570609419275565*^9, 3.570689520017869*^9, 
   3.5708500451782103`*^9, 3.571680359543572*^9, 3.6095693141796827`*^9, 
   3.609716336829441*^9}],

Cell[BoxData["50.000000000000014`"], "Output",
 CellChangeTimes->{{3.570428138060837*^9, 3.5704281466608963`*^9}, 
   3.570428177626194*^9, 3.570428273986754*^9, 3.570428363984201*^9, {
   3.570428467142563*^9, 3.570428483053481*^9}, {3.5704285665767937`*^9, 
   3.570428648320075*^9}, 3.57044296242935*^9, 3.570443833513587*^9, 
   3.5704447119326687`*^9, 3.570444868242724*^9, 3.57044581946935*^9, 
   3.5704846856803093`*^9, {3.570485958023487*^9, 3.5704859995954723`*^9}, 
   3.570486922948512*^9, 3.570609419275565*^9, 3.570689520017869*^9, 
   3.5708500451782103`*^9, 3.571680359543572*^9, 3.6095693141796827`*^9, 
   3.609716336830495*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Remove", "[", 
  RowBox[{
  "tF", ",", "tB", ",", "\[CapitalGamma]F", ",", "\[CapitalGamma]B", ",", 
   "QB", ",", "QF", ",", "Qsum", ",", "Qlog", ",", "Tavg", ",", 
   "\[CapitalDelta]T"}], "]"}]], "Input",
 CellChangeTimes->{{3.5704905417989197`*^9, 3.570490547160899*^9}, {
  3.570490735668775*^9, 3.570490745286612*^9}, {3.5704909593329763`*^9, 
  3.570490970165915*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Signal", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"QB", "[", 
     RowBox[{"\[Theta]NN_", ",", "\[Phi]NN_", ",", "id_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"LightOutput", "[", 
      RowBox[{"KE", "[", 
       RowBox[{"P", "[", 
        RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], "]"}], 
      "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{"HitPoint", "[", 
            RowBox[{
             RowBox[{"P", "[", 
              RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
             "id"}], "]"}], "-", 
           RowBox[{"PosB", "[", "id", "]"}]}], "]"}]}], 
        RowBox[{"att", "[", 
         RowBox[{"[", "id", "]"}], "]"}]]}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"QF", "[", 
     RowBox[{"\[Theta]NN_", ",", "\[Phi]NN_", ",", "id_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"LightOutput", "[", 
      RowBox[{"KE", "[", 
       RowBox[{"P", "[", 
        RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], "]"}], 
      "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{"HitPoint", "[", 
            RowBox[{
             RowBox[{"P", "[", 
              RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
             "id"}], "]"}], "-", 
           RowBox[{"PosF", "[", "id", "]"}]}], "]"}]}], 
        RowBox[{"att", "[", 
         RowBox[{"[", "id", "]"}], "]"}]]}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalGamma]B", "[", 
     RowBox[{"\[Theta]NN_", ",", "\[Phi]NN_", ",", "id_"}], "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"HitPoint", "[", 
         RowBox[{
          RowBox[{"P", "[", 
           RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
          "id"}], "]"}], "-", 
        RowBox[{"PosB", "[", "id", "]"}]}], "]"}], 
      RowBox[{"\[Beta]plastic", " ", "c"}]], "+", 
     RowBox[{"ToF", "[", 
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
       "id"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalGamma]F", "[", 
     RowBox[{"\[Theta]NN_", ",", "\[Phi]NN_", ",", "id_"}], "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"HitPoint", "[", 
         RowBox[{
          RowBox[{"P", "[", 
           RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
          "id"}], "]"}], "-", 
        RowBox[{"PosF", "[", "id", "]"}]}], "]"}], 
      RowBox[{"\[Beta]plastic", " ", "c"}]], "+", 
     RowBox[{"ToF", "[", 
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
       "id"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tB", "[", 
     RowBox[{"\[Theta]NN_", ",", "\[Phi]NN_", ",", "id_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"\[CapitalGamma]B", "[", 
      RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], "-", 
     RowBox[{"\[CapitalGamma]F", "[", 
      RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "1"}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tF", "[", 
     RowBox[{"\[Theta]NN_", ",", "\[Phi]NN_", ",", "id_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"\[CapitalGamma]F", "[", 
      RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], "-", 
     RowBox[{"\[CapitalGamma]F", "[", 
      RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "1"}], 
      "]"}]}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5704282852096148`*^9, 3.57042830184315*^9}, {
  3.570428665656732*^9, 3.570428827963159*^9}, {3.57042888087201*^9, 
  3.570428900589196*^9}, {3.570429355052475*^9, 3.57042939289396*^9}, {
  3.570429430560439*^9, 3.5704294364138107`*^9}, {3.5704312449229116`*^9, 
  3.5704312510209427`*^9}, {3.5704847066230373`*^9, 3.5704847457857857`*^9}, {
  3.570490434091639*^9, 3.570490475325027*^9}, {3.5704905173504143`*^9, 
  3.570490536905958*^9}, {3.5704905839256887`*^9, 3.570490688190222*^9}, {
  3.570493559454218*^9, 3.570493597757679*^9}, {3.57049574400452*^9, 
  3.57049574561915*^9}, {3.57049579517863*^9, 3.570495808203309*^9}, {
  3.5705004026617517`*^9, 3.570500429351152*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Qsum", "[", 
   RowBox[{"\[Theta]NN_", ",", "\[Phi]NN_", ",", "id_"}], "]"}], ":=", 
  SqrtBox[
   RowBox[{
    RowBox[{"QB", "[", 
     RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], 
    RowBox[{"QF", "[", 
     RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], 
     "]"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qlog", "[", 
   RowBox[{"\[Theta]NN_", ",", "\[Phi]NN_", ",", "id_"}], "]"}], ":=", 
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{"QB", "[", 
     RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], 
    RowBox[{"QF", "[", 
     RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}]], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tavg", "[", 
   RowBox[{"\[Theta]NN_", ",", "\[Phi]NN_", ",", "id_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"tB", "[", 
      RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], "+", 
     RowBox[{"tF", "[", 
      RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]T", "[", 
   RowBox[{"\[Theta]NN_", ",", "\[Phi]NN_", ",", "id_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"tB", "[", 
    RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], "-", 
   RowBox[{"tF", "[", 
    RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.570428914303173*^9, 3.570429035242537*^9}, {
  3.570431253933373*^9, 3.570431283489195*^9}, {3.570484763775703*^9, 
  3.5704847693657618`*^9}, {3.570490551891079*^9, 3.570490561326408*^9}, {
  3.570490630980549*^9, 3.5704906349566936`*^9}, {3.570490707784251*^9, 
  3.570490731943429*^9}, {3.570500410908955*^9, 3.570500443626032*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ObserAll", "[", 
   RowBox[{"\[Theta]NN_", ",", "\[Phi]NN_", ",", "id_"}], "]"}], ":=", 
  RowBox[{"TableForm", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<KE and Mom\>\"", ",", 
       RowBox[{"KE", "[", 
        RowBox[{"P", "[", 
         RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], "]"}], 
       ",", 
       RowBox[{"Mom", "[", 
        RowBox[{"P", "[", 
         RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], "]"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<Polar Angle\>\"", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", 
         RowBox[{"P", "[", 
          RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], "]"}], 
        FractionBox["180", "\[Pi]"]}], ",", 
       RowBox[{
        RowBox[{"\[Phi]", "[", 
         RowBox[{"P", "[", 
          RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], "]"}], 
        FractionBox["180", "\[Pi]"]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Alpha]  and  \[Beta]\>\"", ",", 
       RowBox[{"\[Alpha]", "[", 
        RowBox[{"P", "[", 
         RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], "]"}], 
       ",", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"P", "[", 
          RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], "]"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<fl and ToF\>\"", ",", 
       RowBox[{"fl", "[", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
         "id"}], "]"}], ",", 
       RowBox[{"ToF", "[", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
         "id"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"HitPoint", "[", 
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
       "id"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<Light Output\>\"", ",", 
       RowBox[{"LightOutput", "[", 
        RowBox[{"KE", "[", 
         RowBox[{"P", "[", 
          RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], "]"}], 
        "]"}], ",", " ", "\"\<atten length\>\"", ",", 
       RowBox[{"att", "[", 
        RowBox[{"[", "id", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"{", 
      RowBox[{"\"\<Distance to PMT\>\"", ",", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"HitPoint", "[", 
          RowBox[{
           RowBox[{"P", "[", 
            RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
           "id"}], "]"}], "-", 
         RowBox[{"PosB", "[", "id", "]"}]}], "]"}], ",", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"HitPoint", "[", 
          RowBox[{
           RowBox[{"P", "[", 
            RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
           "id"}], "]"}], "-", 
         RowBox[{"PosF", "[", "id", "]"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<QB and \[CapitalGamma]B\>\"", ",", 
       RowBox[{"QB", "[", 
        RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
       RowBox[{"\[CapitalGamma]B", "[", 
        RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<QF and \[CapitalGamma]F\>\"", ",", 
       RowBox[{"QF", "[", 
        RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
       RowBox[{"\[CapitalGamma]F", "[", 
        RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Qsum\>\"", ",", "\"\<Qlog\>\"", ",", "\"\<Tavg\>\"", ",", 
       "\"\<\[CapitalDelta]T\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qsum", "[", 
        RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
       RowBox[{"Qlog", "[", 
        RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
       RowBox[{"Tavg", "[", 
        RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], ",", 
       RowBox[{"\[CapitalDelta]T", "[", 
        RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.570429158589809*^9, 3.570429303871049*^9}, {
  3.570429409473506*^9, 3.570429415298964*^9}, {3.570429445646102*^9, 
  3.570429456543418*^9}, {3.5704297299036007`*^9, 3.5704298287977543`*^9}, {
  3.570431295164074*^9, 3.5704313494750967`*^9}, {3.570440280644636*^9, 
  3.5704403407632923`*^9}, {3.570484775444591*^9, 3.570484776522686*^9}, {
  3.5704907743700447`*^9, 3.5704908252484093`*^9}, {3.570490877674738*^9, 
  3.5704909379303913`*^9}, {3.570500453524658*^9, 3.5705005020548077`*^9}, {
  3.5706094432979393`*^9, 3.570609451913432*^9}, {3.5706095134139495`*^9, 
  3.5706095197063093`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TableForm", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Polar Angle\>\"", ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", 
          RowBox[{"P", "[", 
           RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "1"}], "]"}], "]"}], 
         FractionBox["180", "\[Pi]"]}], ",", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"P", "[", 
           RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "1"}], "]"}], "]"}], 
         FractionBox["180", "\[Pi]"]}], ",", "\"\<|\>\"", ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", 
          RowBox[{"P", "[", 
           RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "2"}], "]"}], "]"}], 
         FractionBox["180", "\[Pi]"]}], ",", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"P", "[", 
           RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "2"}], "]"}], "]"}], 
         FractionBox["180", "\[Pi]"]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<fl and ToF\>\"", ",", 
        RowBox[{"fl", "[", 
         RowBox[{
          RowBox[{"P", "[", 
           RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "1"}], "]"}], ",", 
          "1"}], "]"}], ",", 
        RowBox[{"ToF", "[", 
         RowBox[{
          RowBox[{"P", "[", 
           RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "1"}], "]"}], ",", 
          "1"}], "]"}], ",", "\"\<|\>\"", ",", 
        RowBox[{"fl", "[", 
         RowBox[{
          RowBox[{"P", "[", 
           RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "2"}], "]"}], ",", 
          "2"}], "]"}], ",", 
        RowBox[{"ToF", "[", 
         RowBox[{
          RowBox[{"P", "[", 
           RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "2"}], "]"}], ",", 
          "2"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<QB and \[CapitalGamma]B\>\"", ",", 
        RowBox[{"QB", "[", 
         RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "1"}], "]"}], ",", 
        RowBox[{"\[CapitalGamma]B", "[", 
         RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "1"}], "]"}], ",", 
        "\"\<|\>\"", ",", 
        RowBox[{"QB", "[", 
         RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "2"}], "]"}], ",", 
        RowBox[{"\[CapitalGamma]B", "[", 
         RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "2"}], "]"}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<QB and \[CapitalGamma]B\>\"", ",", 
        RowBox[{"QF", "[", 
         RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "1"}], "]"}], ",", 
        RowBox[{"\[CapitalGamma]F", "[", 
         RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "1"}], "]"}], ",", 
        "\"\<|\>\"", ",", 
        RowBox[{"QF", "[", 
         RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "2"}], "]"}], ",", 
        RowBox[{"\[CapitalGamma]F", "[", 
         RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "2"}], "]"}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\>\"", ",", "\"\<Tavg(1)\>\"", ",", "\"\<\[CapitalDelta]T(1)\>\"",
         ",", "\"\<|\>\"", ",", "\"\<Tavg(2)\>\"", ",", 
        "\"\<\[CapitalDelta]T(2)\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<\>\"", ",", 
        RowBox[{"Tavg", "[", 
         RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "1"}], "]"}], ",", 
        RowBox[{"\[CapitalDelta]T", "[", 
         RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "1"}], "]"}], ",", 
        "\"\<|\>\"", ",", 
        RowBox[{"Tavg", "[", 
         RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "2"}], "]"}], ",", 
        RowBox[{"\[CapitalDelta]T", "[", 
         RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "2"}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", 
     RowBox[{"40", "\[Degree]"}], ",", 
     RowBox[{"140", " ", "\[Degree]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Phi]NN", ",", "0"}], "}"}], ",", 
     RowBox[{
      RowBox[{"-", "20"}], " ", "\[Degree]"}], ",", " ", 
     RowBox[{"20", " ", "\[Degree]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570609532419037*^9, 3.5706098448339057`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]NN$$ = 
    1.8500490071139892`, $CellContext`\[Phi]NN$$ = 0.005585053606381868, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]NN$$], 40 Degree, 140 Degree}, {{
       Hold[$CellContext`\[Phi]NN$$], 0}, (-20) Degree, 20 Degree}}, 
    Typeset`size$$ = {534., {40., 45.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]NN$1083$$ = 0, $CellContext`\[Phi]NN$1084$$ = 
    0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Theta]NN$$ = 
        40 Degree, $CellContext`\[Phi]NN$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]NN$$, $CellContext`\[Theta]NN$1083$$, 0], 
        Hold[$CellContext`\[Phi]NN$$, $CellContext`\[Phi]NN$1084$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      TableForm[{{"Polar Angle", $CellContext`\[Theta][
            $CellContext`P[$CellContext`\[Theta]NN$$, $CellContext`\[Phi]NN$$,
              1]] (180/Pi), $CellContext`\[Phi][
            $CellContext`P[$CellContext`\[Theta]NN$$, $CellContext`\[Phi]NN$$,
              1]] (180/Pi), "|", $CellContext`\[Theta][
            $CellContext`P[$CellContext`\[Theta]NN$$, $CellContext`\[Phi]NN$$,
              2]] (180/Pi), $CellContext`\[Phi][
            $CellContext`P[$CellContext`\[Theta]NN$$, $CellContext`\[Phi]NN$$,
              2]] (180/Pi)}, {"fl and ToF", 
          $CellContext`fl[
           $CellContext`P[$CellContext`\[Theta]NN$$, $CellContext`\[Phi]NN$$, 
            1], 1], 
          $CellContext`ToF[
           $CellContext`P[$CellContext`\[Theta]NN$$, $CellContext`\[Phi]NN$$, 
            1], 1], "|", 
          $CellContext`fl[
           $CellContext`P[$CellContext`\[Theta]NN$$, $CellContext`\[Phi]NN$$, 
            2], 2], 
          $CellContext`ToF[
           $CellContext`P[$CellContext`\[Theta]NN$$, $CellContext`\[Phi]NN$$, 
            2], 2]}, {"QB and \[CapitalGamma]B", 
          $CellContext`QB[$CellContext`\[Theta]NN$$, $CellContext`\[Phi]NN$$, 
           1], 
          $CellContext`\[CapitalGamma]B[$CellContext`\[Theta]NN$$, \
$CellContext`\[Phi]NN$$, 1], "|", 
          $CellContext`QB[$CellContext`\[Theta]NN$$, $CellContext`\[Phi]NN$$, 
           2], 
          $CellContext`\[CapitalGamma]B[$CellContext`\[Theta]NN$$, \
$CellContext`\[Phi]NN$$, 2]}, {"QB and \[CapitalGamma]B", 
          $CellContext`QF[$CellContext`\[Theta]NN$$, $CellContext`\[Phi]NN$$, 
           1], 
          $CellContext`\[CapitalGamma]F[$CellContext`\[Theta]NN$$, \
$CellContext`\[Phi]NN$$, 1], "|", 
          $CellContext`QF[$CellContext`\[Theta]NN$$, $CellContext`\[Phi]NN$$, 
           2], 
          $CellContext`\[CapitalGamma]F[$CellContext`\[Theta]NN$$, \
$CellContext`\[Phi]NN$$, 2]}, {
         "", "Tavg(1)", "\[CapitalDelta]T(1)", "|", "Tavg(2)", 
          "\[CapitalDelta]T(2)"}, {"", 
          $CellContext`Tavg[$CellContext`\[Theta]NN$$, \
$CellContext`\[Phi]NN$$, 1], 
          $CellContext`\[CapitalDelta]T[$CellContext`\[Theta]NN$$, \
$CellContext`\[Phi]NN$$, 1], "|", 
          $CellContext`Tavg[$CellContext`\[Theta]NN$$, \
$CellContext`\[Phi]NN$$, 2], 
          $CellContext`\[CapitalDelta]T[$CellContext`\[Theta]NN$$, \
$CellContext`\[Phi]NN$$, 2]}}], 
      "Specifications" :> {{$CellContext`\[Theta]NN$$, 40 Degree, 140 
         Degree}, {{$CellContext`\[Phi]NN$$, 0}, (-20) Degree, 20 Degree}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{579., {96., 101.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.570609775860961*^9, 3.57060979997434*^9}, 
   3.57060984560495*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1500"}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1000", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "200", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"HitPoint", "[", 
            RowBox[{
             RowBox[{"P", "[", 
              RowBox[{
               RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", 
               RowBox[{"\[Phi]NN", " ", "\[Degree]"}], ",", "1"}], "]"}], ",",
              "1"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        "Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"HitPoint", "[", 
            RowBox[{
             RowBox[{"P", "[", 
              RowBox[{
               RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", 
               RowBox[{"\[Phi]NN", " ", "\[Degree]"}], ",", "2"}], "]"}], ",",
              "2"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        "Black", ",", 
        RowBox[{"PointSize", "[", "Large", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PosF", "[", "1", "]"}], ",", 
           RowBox[{"PosB", "[", "1", "]"}], ",", 
           RowBox[{"PosF", "[", "2", "]"}], ",", 
           RowBox[{"PosB", "[", "2", "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "Orange", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PosF", "[", "1", "]"}], ",", 
           RowBox[{"HitPoint", "[", 
            RowBox[{
             RowBox[{"P", "[", 
              RowBox[{
               RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", 
               RowBox[{"\[Phi]NN", " ", "\[Degree]"}], ",", "1"}], "]"}], ",",
              "1"}], "]"}], ",", 
           RowBox[{"PosB", "[", "1", "]"}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"HitPoint", "[", 
          RowBox[{
           RowBox[{"P", "[", 
            RowBox[{
             RowBox[{"a", " ", "\[Degree]"}], ",", 
             RowBox[{"b", " ", "\[Degree]"}], ",", "1"}], "]"}], ",", "1"}], 
          "]"}], ",", 
         RowBox[{"HitPoint", "[", 
          RowBox[{
           RowBox[{"P", "[", 
            RowBox[{
             RowBox[{"a", " ", "\[Degree]"}], ",", 
             RowBox[{"b", " ", "\[Degree]"}], ",", "2"}], "]"}], ",", "2"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "50", ",", "140"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", 
         RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Phi]NN", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "20"}], ",", " ", "20"}], "}"}]}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.570486073965938*^9, 3.570486163873453*^9}, {
   3.570486206857387*^9, 3.570486322222786*^9}, {3.5704863580801687`*^9, 
   3.570486437348487*^9}, {3.570486481509657*^9, 3.57048651512144*^9}, {
   3.570486552259605*^9, 3.5704865772956753`*^9}, 3.570610408259132*^9, {
   3.5706105909945836`*^9, 3.570610598404008*^9}, {3.570610829018198*^9, 
   3.570610980021835*^9}, {3.570611346473795*^9, 3.570611346633804*^9}, {
   3.5706113778875914`*^9, 3.570611461802391*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]NN$$ = 40, $CellContext`\[Phi]NN$$ =
     0, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]NN$$], 40, 140}, {{
       Hold[$CellContext`\[Phi]NN$$], 0}, -20, 20}}, Typeset`size$$ = {
    360., {161., 166.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]NN$1642$$ = 
    0, $CellContext`\[Phi]NN$1643$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Theta]NN$$ = 40, $CellContext`\[Phi]NN$$ = 
        0}, "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]NN$$, $CellContext`\[Theta]NN$1642$$, 0], 
        Hold[$CellContext`\[Phi]NN$$, $CellContext`\[Phi]NN$1643$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Graphics3D[{
          Arrow[{{0, 0, 0}, {0, 0, 1500}}], 
          Arrow[{{0, 0, 0}, {1000, 0, 0}}], 
          Arrow[{{0, 0, 0}, {0, 200, 0}}], Red, 
          Line[{{0, 0, 0}, 
            $CellContext`HitPoint[
             $CellContext`P[$CellContext`\[Theta]NN$$ 
              Degree, $CellContext`\[Phi]NN$$ Degree, 1], 1]}], Blue, 
          Line[{{0, 0, 0}, 
            $CellContext`HitPoint[
             $CellContext`P[$CellContext`\[Theta]NN$$ 
              Degree, $CellContext`\[Phi]NN$$ Degree, 2], 2]}], Black, 
          PointSize[Large], 
          Point[{
            $CellContext`PosF[1], 
            $CellContext`PosB[1], 
            $CellContext`PosF[2], 
            $CellContext`PosB[2]}], Orange, 
          Line[{
            $CellContext`PosF[1], 
            $CellContext`HitPoint[
             $CellContext`P[$CellContext`\[Theta]NN$$ 
              Degree, $CellContext`\[Phi]NN$$ Degree, 1], 1], 
            $CellContext`PosB[1]}]}], 
        ParametricPlot3D[{
          $CellContext`HitPoint[
           $CellContext`P[$CellContext`a Degree, $CellContext`b Degree, 1], 
           1], 
          $CellContext`HitPoint[
           $CellContext`P[$CellContext`a Degree, $CellContext`b Degree, 2], 
           2]}, {$CellContext`a, 50, 140}, {$CellContext`b, -20, 20}]], 
      "Specifications" :> {{$CellContext`\[Theta]NN$$, 40, 
         140}, {{$CellContext`\[Phi]NN$$, 0}, -20, 20}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {217., 222.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.570486272693781*^9, {3.570486304564064*^9, 3.570486322764985*^9}, {
   3.570486412322657*^9, 3.570486438011138*^9}, {3.57048650755136*^9, 
   3.570486515559976*^9}, 3.570486577981192*^9, 3.570486923082411*^9, 
   3.570490986078281*^9, 3.570609419666588*^9, {3.570610409747217*^9, 
   3.5706104342026157`*^9}, {3.570610847724268*^9, 3.5706108832282987`*^9}, {
   3.5706109584936037`*^9, 3.570610980881884*^9}, {3.570611442505287*^9, 
   3.570611462697442*^9}, 3.57068952637786*^9, 3.570850045320602*^9, 
   3.5716803600946035`*^9, 3.609569314297283*^9, 3.6097163369077587`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ObserAll", "[", 
    RowBox[{
     RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", 
     RowBox[{"\[Phi]NN", " ", "\[Degree]"}], ",", "id"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Phi]NN", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "20"}], ",", " ", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"att", ",", "2000", ",", "50000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"id", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570429308025064*^9, 3.5704293284344893`*^9}, 
   3.570429469311479*^9, {3.570484784393771*^9, 3.5704847991707773`*^9}, {
   3.570485702620866*^9, 3.570485730305283*^9}, {3.5704869795023727`*^9, 
   3.570486995678054*^9}, {3.570490836548077*^9, 3.5704908396410923`*^9}, 
   3.570500476096768*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`att$$ = 2000, $CellContext`id$$ = 
    1, $CellContext`\[Theta]NN$$ = 40, $CellContext`\[Phi]NN$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]NN$$], 40, 140}, {{
       Hold[$CellContext`\[Phi]NN$$], 0}, -20, 20}, {
      Hold[$CellContext`att$$], 2000, 50000}, {
      Hold[$CellContext`id$$], {1, 2}}}, Typeset`size$$ = {433., {85., 90.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]NN$18139$$ = 0, $CellContext`\[Phi]NN$18140$$ =
     0, $CellContext`att$18141$$ = 0, $CellContext`id$18142$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`att$$ = 2000, $CellContext`id$$ = 
        1, $CellContext`\[Theta]NN$$ = 40, $CellContext`\[Phi]NN$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]NN$$, $CellContext`\[Theta]NN$18139$$, 0], 
        Hold[$CellContext`\[Phi]NN$$, $CellContext`\[Phi]NN$18140$$, 0], 
        Hold[$CellContext`att$$, $CellContext`att$18141$$, 0], 
        Hold[$CellContext`id$$, $CellContext`id$18142$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`ObserAll[$CellContext`\[Theta]NN$$ 
        Degree, $CellContext`\[Phi]NN$$ Degree, $CellContext`id$$], 
      "Specifications" :> {{$CellContext`\[Theta]NN$$, 40, 
         140}, {{$CellContext`\[Phi]NN$$, 0}, -20, 20}, {$CellContext`att$$, 
         2000, 50000}, {$CellContext`id$$, {1, 2}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{482., {170., 175.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.570485730883519*^9, {3.570486980689136*^9, 3.570486996393854*^9}, 
   3.570490840378571*^9, 3.5704909418900957`*^9, 3.5704909811466827`*^9, 
   3.570495759327922*^9, 3.570495815370675*^9, {3.570500478041678*^9, 
   3.5705005076829767`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "[", 
       RowBox[{"P", "[", 
        RowBox[{"\[Theta]NN", ",", "0", ",", "1"}], "]"}], "]"}], 
      FractionBox["180", "\[Pi]"]}], ",", 
     RowBox[{"KE", "[", 
      RowBox[{"P", "[", 
       RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"LightOutput", "[", 
      RowBox[{"KE", "[", 
       RowBox[{"P", "[", 
        RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}], "]"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", 
     RowBox[{"20", " ", "\[Degree]"}], ",", " ", 
     RowBox[{"160", " ", "\[Degree]"}]}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.7"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lab \[Theta]\>\"", ",", "\"\<KE\>\"", ",", "\"\<LightOutput\>\""}], 
     "}"}]}], ",", 
   RowBox[{"BoxRatios", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570430606493061*^9, 3.5704306178195963`*^9}, {
  3.5704848374355164`*^9, 3.5704848526093273`*^9}, {3.5704848919315443`*^9, 
  3.570484944822824*^9}, {3.5704857430381603`*^9, 3.570485754957464*^9}}],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJwNVGs8FIgenaXYlNcaM17lNSiWsGM8VnPPmBmG1s4oj0gtedTMYoi1JTdr
5TV0E+Uq8ogku/LcEbuhDJPHL93yCm3eFdlUaq2iOx/Ol/M7v///nPPhGB4R
7guTIxAI7jLIy1BcFfY3W2KEomDFLfqpQmT0RHS5TBKxNG4zW3TfCLNStT7l
M0J8JY19VS/jKXIl429HjXBhgLn+4WchmGlpBw2niAh4fHyhbMkI/WRuw/BP
QkiuvPmHME0EK6UkY4NkDL1NpKDURCEEz57wOmeI4ETJ9bfwjUHh73skjRVi
xWM8yvsZEWLz/+Q7qFIwESAfPBUsxPmO3F+q/iKCXDYSfyDABF9K4qP4zkKs
xtrQdTeIOGg7lvBu505QjJ88LZmJAimZ8PobY02sWigmjN4zx69bjbVy06OA
1uTbEg9NxL24WZoQaAlW8LrTO0oUZuUym7fHa2LON74/j2iN2V7L4Om6SAh6
DdabqjVxyuXsZF6IDbbV9Uy7OkdiaU6xgD6libahy/aeA7YIJRP6vvotAsWU
AN1UIxJI9JB/9O2oCN2d6W24MwIN5neryXwSbpD0/QtS7KD38q9c7pXv0Xex
2m6tjoTmDt1QzVc0xPVINtifBHiXqRHhp0CG9NzUYRrTAYmn1X2VwwT4zeNK
3cVDZMT/r70w8rwjKmJWRStSPkqv+Yq7W8lYGAvNev/RCSs5evKeZD7w38KR
3bu04MGaU1D1cgbx0ujs1shjaJ3XEXhf0oIl+0GG+O4e6OVP5CjXHsWw5LWc
/g5tDBTOm1VZ/QuJvkpVP78KxxJ/5M6mGm0orS/LpzIA7+z80iGHcOi4N86Y
0XXQK52/ULkGFNmsXO+JCkNl2ubwqhc66Mv4o+3v6wwEfq14bP1mKCSZDRvE
S7oo3L7J1z/UBSt35S1sJkJAs/TI3s/Xg8FY5szcdiYGRw+sS5RCwLPVbpvl
bEf54ZBvRX1MSLyOGNSxj+AHhs/LfqsdMCRO3TiawQJVmDhwMyoYOl47NORc
9LF397UGriMbs49IajbXglAWf7qvxNIAX+uGHec8Y+Nz0531o23fod7RwLyo
2wCDDQN9JRWuOGZmoML+4jBquoIi5pMMMSXJrJ3xcYOW2PvP3pRAaORoqfKd
jTDyrtO0nMSBVrqZ35XhALSYrGk+NjZGQUtOadIgB5y172a17fxxZCxT/bkZ
Bca+Z7eaprnjRIzPD+pNfjjbdW9kwsYE3cXX3fluHuCIk70DtHyxbJGeuTnJ
FMNaTW+OfPTA83P9trHF3nAa/uKkZMEMpaSBxn0392I1beHDtO1+uHRd+7iR
vQtDne/DPwi/QYaOR6lavRfKOm3zqNkWsB58SaGaeOKWVXSI3j4elFqaCj27
LCFqP1fhtOCJBxWTmxc6PNFcOdebFGwNJc2Y+tar3yI6bPn3PMpedCv/WOVl
aAv+/uTXpANc8ChTv2b8wsEFu8pxhRgqEg+kPzY/yMWklFRDKOPgsNDsVsu/
qTjeZt5LP8zFT1vqwxPyOXDdM70eKKJiSsrqCg/lwvryU8XYZA7YMw8LT5ZT
MX+83Kg5motle7HKST8OPEXkji+HqOC2vT/hn8lF0NGLuaPyHJA/I/Sn2NtB
Wdkpq6KVi+iM3PPPD7kh7k3OBIFAw6XCM2dabst81jwpLNjvBsXp4iU5ZRqK
zrDS7nfI/jb1Rnq4u2HXacN5bR0all31y1e7ZXc2ewoaqW5w1HIfEFFpuHpZ
z8XzkUx/Bw8vb3XDRXl/5XwBDdqxmsTVRS7U+okd7S2u8Jf63HGaoMFqS/Sn
Gyo8PLj/zCCM7IoxjcuDvUv2CLR6ekNHjYecbKn+B2VXOP+R1964YY9Cp0W/
LHUeJmsrm3M3ueJxqNr5SlUHsCZG2iKIPBic6mnsfs1GTdzBU002DhAorDTv
1uEhSE/wjNHPRvBYx5+t8Q6gJ9z2FZvwsGxiKUpNZmPsTcmJJgVHvKTecul2
lulLYcFaYmHx3jGFY15OuHp6vGlZwANEk8SGHia4k4nKsRp0bLKMt0yO4KFO
/Ja13M6EfEa7qgh0jBdQqtWjeCil6witxUzEpRf0OkXRoVDbUmsbw4N1tE+j
+CoTjJkFWsx9OiLf1i7G/SjL++J7xfFTTKgcKlIfq5btiJqJ6VqKLO/otj0p
Vky41olOJ7wHNIbLnopSZT6zGIwpChMdxG20pV0MCP1Mr+imy/rs5LoydJl4
qNKkUcdnwDqVSdkj4oHAuu6t+DkTQcaC47NrDORw3BdLs2Q9jA95Jn9yQdpi
kuE8xwX/B3ihAHE=
      "]], Line3DBox[CompressedData["
1:eJw90GtIU2EcBvDlKqNpzXSzhbazOmhWLjO1i13enSSmUZ1tlSWylVdEbIYa
oR+appmY5rSssOmcectII5uWLKXQLrrmppamYSHmSMtlLbug9n76f3j5wcPD
8z8cQZRSGuvAYDD88GPix4vd/EVTSCP0ZM5j21cKTKS5BdM4JwKWZ+ybpMDg
A4+jVEU0oh2ZhQ2fKNChWr7bpZhGvazOO7xBCtxQv2SNrgTvh7a1572hQLL4
2KfnpTRq8rAxk9socOeZiQpHDY1O2b3NR69ToF2VfetmOY20wp2cvnwKjHbz
vOGjpVFRU98pWRYFGmr2lB+swvvxh9gRSgqcf+M1crWeRrayqeELoRTIIiY5
PD3ecQ/P8p0XgTZDe4bQRCOG2WXSNUEENvK5utZe/B84e9gLChHY+XdjD2XB
+++MQVPHRSDJLdgUPoBzZm1eT4gInK3xdFcN47sJ43Q1IQJ/N3VqLRP4bq/+
ScsgAtn9lvPpDAlSVRzXRoUhMPBzCHtgK85jowTd8XvBw13XG1cUShDqEMu7
cnaBXZs5iv0zEkSkeD1SXwsCazVap4UjUtRRY/1J+mwDF//mprPuSZHW2qvO
X+kHHsn9nuDKliHUv0b8648P6BaSWVuYJEMq3uqh00YS1M6ejfBT4r7/i4ZL
LSQojTSutCTLECNvOEdfSYJhKe2ZnFS883PH0e3nSHBZnDLrdjruRxvTDHwS
dJLN2O/m4n3L+N2R1PWgwMlD86oS73jL9Ene68DmAHZZYhXOT56T21etA6Wl
4jLnahnqGPX1vTwvAM2bMnWSOnw3w5MyDQjA5vrp7qH7+C4vOGYsWwBOvHiQ
96UN7/zQniTHCTC4O7zhigHnjWPv5WYCLCkRmoTtOA8rUN8xEGCkOsEz5Rm+
29yik5QSoJX1o+/fS/z9yU+T/MUEOOUwt7T8Nd4ZK3rYFUCAabO+u1EP3vm2
KChOQIAPZhbuZZvwzu0qa4GdD47mlFu9zLjfaotmm/hg9haF1ysL7n+8paiv
44MXH6G4xH7cD4z5cCKLD1Z8ENU5v8W50XV0bSQf/A9cU/pw
      
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->0.7,
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{
    FormBox["\"Lab \[Theta]\"", TraditionalForm], 
    FormBox["\"KE\"", TraditionalForm], 
    FormBox["\"LightOutput\"", TraditionalForm]},
  BoxRatios->1,
  ImageSize->{512.3338416143494, 356.5863772110903},
  PlotRange->{{9.383346301230912, 79.34458357269476}, {0., 
   252.16003848497064`}, {5.219004711880537, 37.853122352495575`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{-1.1269660963793293`, -2.9769292524594957`, 1.1479719698069701`},
  ViewVertical->{-0.16367048350916832`, -0.03293012882184282, 
   0.9859653033670365}]], "Output",
 CellChangeTimes->{{3.570430610920691*^9, 3.5704306183490753`*^9}, {
   3.570484830455626*^9, 3.5704848531210623`*^9}, {3.570484917316155*^9, 
   3.5704849451545963`*^9}, 3.57048575668407*^9, 3.570495764015334*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalGamma]B", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
        "]"}], ",", 
       RowBox[{"\[CapitalGamma]F", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalGamma]B", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
        "]"}], ",", 
       RowBox[{"\[CapitalGamma]B", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalGamma]B", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
        "]"}], ",", 
       RowBox[{"\[CapitalGamma]F", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalGamma]F", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
        "]"}], ",", 
       RowBox[{"\[CapitalGamma]B", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalGamma]F", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
        "]"}], ",", 
       RowBox[{"\[CapitalGamma]F", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalGamma]B", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
        "]"}], ",", 
       RowBox[{"\[CapitalGamma]F", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
        "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "Red", ",", "Orange", ",", "Green", ",", " ", "Cyan", ",", " ", "Blue", 
      ",", " ", "Purple"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5716807439545593`*^9, 3.571680761826581*^9}, 
   3.57168085813609*^9, {3.5716977599798203`*^9, 3.5716977718595*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1, 0.5, 0], LineBox[CompressedData["
1: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
pqA5in7xi03uHXp4UvDUNHpm+OOaq2Ik5LCf4F2L+7v+98caRQkSvqjOFG5C
W6ct5zPhHBjz62CFMP08aLYMtaIlfB7tV0Ebcp0964xzpL5Y1l4/dIrlYlM+
zqFVB2zuXaTnasvlEFecU/kzWnKy0TaJgWmqMvi8Mqu/nqJ1r480D+Jc21M3
E8yB5z8z5OK5HfIkaHw65itErw9aI59H0BH+P4fk0OE3m68X4tysOLhlzpxe
T77LrpPFOXv5YCPcp38u9DZeS4mET816hY1oZRMuD3ac0ycDa/0G0EO/ywra
0FMlLac5sJ61NwvPWeFcbxOyydcFXVo3DQHqJLxyzDp8AX3SsD9TC0h4Kfn6
0jX0dytm1XUaJFh9j3N9j2adWOOZp0nCI36qqQ7WT1caGd20H9dnuwyLOtZn
0FlvIq5PAsPbh50n0cqva+Nm0U+u2fOEoa/W2m+sMyDB2q96sBHtKR3CbnWY
hH3VgzVG2A8emXvmZRqTcH2083Yo9hP7ssiTQhYkzA50/JbHnHtMd1bYzhE/
53u64Ig2DPBQ1nfCelN2NCwb3W/F9EDBGeuRsCC5Bvtfa9b+2+yncf/2ZHzu
R7ueev2pwgXvZ4LlTwHm3HCnwhM7vHGOmvpSlIv9/K95u5NiJAkPZUc/fUL/
eHGhXzqKhNrV4SIJ7P/iv+uKdkSTQL3i2vsQLWp+y4gjBufgzc1trZgXmtv6
Rz7HkcBnobBnJ+ba+gWbhaI0ErrXPJ9UxHwinjzQeq6ABBbbfpkLaCjaGnXq
BgkeGosz79Gznm0XjW6SwCTWOO2P+UY0KTNYroiEXYxL/U2YU4Vrj/DN3iHh
D6tPhA/mp7BVyu+IUnS764oC5rPd5q9dRp6TECh367kK5sJ3uf9aLn4iQXdr
of5d9D6BCwvRIyQ4fy0zF8CcmLNh0SXyMwnB1Mi5RXT877R9oWMk7E7MVXsW
gzlTNNQi4CvWo3sCyqfisX684s0P+UmC9OaPTzgw96nbS+rWMVKgp/5k3g/M
WaFaL8ZFdlLwvJjVX7yJffjEwKSOGAXG52/HSGBe/8E2fsBdnAKHT8v+tcU8
3x/xnrVOkgLGf37GDt/Gep8tUmhHUoDjXJ/dCs4LojVbT9UoUODz6H37EsxV
0c9Z2+7pUMD7d2kTL85PB5jU4jLdKGB0R45XBPuI9udvMaM1FBhun63ffBD7
yrffFpy8MpD6bNTtfAruIyPzubAzMvj7Lu1+4zi/C4boiDXJgNTEHkqQEQVE
kkutGGVkIfE/vsD8RgqA2a6bkC4LDEJNm5tNZEAwWLg8kFkOpGyTolh+y8Bd
hnafAZCDEHWVZs6rsqA+Iqa/GoCfp59hPa4kBxLH9YMNnsnB7S97bJlvo2Nb
zJQZqdj/1LSyxaiQGm4hPqhNhdJipqjbT6hwq/BHbU0KFeTERZ70WtNA5/Lk
xMggFTLexX7rsaEB/36B3cpDVEh0LmjqsaNB64rAi5SPVKhq2ho58B8NvF+/
qNAYocLdhD6lRW8amLWrdt2YoAI1KSUsOpEGC1tLOXxnqeCwTFWeqaNBGZS9
MWajQXWL5op4Iw0CNle9LWWngX9QQoL1SxoMsR/i28RJg1mBCNHOtzRg9jD1
7eaiwZMijj0d/TRInYhOstyE1818yy/1mwbdhpzcXttpIMGdeDzgDw3uLD0M
6d2B33doCW9fpsE/9dY9qiI0+H6nNCiUSR6c9a8HrxWjwfhTaZ0FbnkoqDF1
zt9Fg/dNzxssNsmDyzFtflaCBtvUh4hafnkQu7xjnQtJg8HJuqZ4IXmYjOhu
2ydLg+23+FfmheXBeqUlt0COBkWTPDvtxOQhpnyyjJNGA7YjSyodkvLw9Lr6
Ri/5//+/0KX/+z/R/wBSePYh
     "]]}, 
   {RGBColor[0, 1, 0], LineBox[CompressedData["
1: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
w1k0IscpRf3zXK2SZXUXyXh9Jdf/WRvi4TMv0FCU9Fn57369TVJ/dp6ncTZ4
heu/8Rd53711/yyNLzGuPz2JhzaIXpFLp5G9+7XIv/eLndTY6pBG41Xo/fCd
xJ3RzJprp2icmWYQ6vNvvso+iv1JIePlrvm1j9jj7tgfK07SuF5o0ONH7LnL
fVZaMo0plT9sgonLR2SO9iXR2LPjulE4saPna2PTRBov1vmdjCK+UFc6Kz6B
RprRnl3xxOfW3rVoiyfz1XSn/DjxZ/nLN4RxNL6Odzh2+t917QjrsBgaz26F
NGUQuzeb6f13hEa49s2mPOJ9BeOv+0bQUJb7fqyIOMt5dMnTQzR++2lUPCKu
PBynrh5Og3f3YlojMWfv4ohHB2lskTIw7yRGu6WySjDJxx7VzV+IJSbe69we
SOO0tKOiJFnfDvO2zpnsR6N73tdMBWI/qdgi9wNkPr4tua1BvEq/LqhkH8nf
fXcWmRB3Hj5U4OZD1s9NsccWxPFZL/RKdtFwWhlRYUdcrvb3o8JOGiuoFENf
4i96ZeMebKdxb7HT1Sji7t9GvkqeNJSSq0+nEu92WjdzhzuJh/bot2JijZj5
tOpWEq8HX4NkSH3I0tOc4LeJ5Gv7+gPTiD+/8nv72YFGmF//W11i5yfcDhd7
kv/NU77bEoc52h1eZUdjeEk5rhOfCiuD5hoa7VUWmeXEC1VCck+vptETUOL7
hvjrbYN1ClY0PudUe8iQeifGs5o7ZiX5nmCFAzuI5Sq+725dTOPx1hTLCOLu
VXKh6xfRqOQ+OX6OODSmqPz5Ahr2vdFeDcSbKjM7H4DGHSWhzVJSX98GOcVe
NCbxm64tPn89g6KKD/sPaNMQqcmt3URcGX254JuARtG5LfIhxGIroOvN0HDw
LWguJxZfV5y3lUdjbkFz4WpS/1Njs6fazqRxvrP28kGyf/xsFXdcqESjOv37
oUvEGJPwuEyR5Jd8/asXxIH6Bq5mCjRm9Mx7NHMDg1d2qfrz5WnIzt0x5ilx
p3YiPU+GxsCblz/07En9S+W6m//l4/zk4sGtxM83TryYMcKHR966kFRi0Vnj
VMWH+TiooSoYS/a78Jzftx4P8jGlPvldE3GprWa6dT8fRR/EhzI2MZAsVcOu
Tj60D+aGtxK3fLdWqu/go/8pc0qV7L+LZ93izG3nQ36q8tbjxB0pJV/E3/KR
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
/84G
     "]]}, 
   {RGBColor[0, 1, 1], LineBox[CompressedData["
1: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
dZo36OP03ZflndoM/gcbPmPG
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.5, 0, 0.5], LineBox[CompressedData["
1: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
BjA8wg==
     "]]}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{10., 10.},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}]],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.5716807689059863`*^9, 3.5716808643074427`*^9, {3.5716977611678877`*^9, 
   3.571697776868786*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tB", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
        "]"}], ",", 
       RowBox[{"tF", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tB", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
        "]"}], ",", 
       RowBox[{"tB", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tB", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
        "]"}], ",", 
       RowBox[{"tF", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tF", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
        "]"}], ",", 
       RowBox[{"tB", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tF", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
        "]"}], ",", 
       RowBox[{"tF", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tB", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
        "]"}], ",", 
       RowBox[{"tF", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
        "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "Red", ",", "Orange", ",", "Green", ",", " ", "Cyan", ",", " ", "Blue", 
      ",", " ", "Purple"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", 
      RowBox[{"-", "5"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.571680553156646*^9, 3.5716806985989647`*^9}, {
  3.5716807828847857`*^9, 3.571680805929104*^9}, {3.5716809509884005`*^9, 
  3.5716809613359923`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJyFzmtIk2EUB/BX52Utp++2Nl0z0foYoW4kAwmXNloXbMpARedsK4c2K0U0
ychLYIrRVBpRKdOioVgYmpnXMQW1Vq0cTJgVjeHMS9a8jfJSQZ7jtx54ePjB
+f+fE6G8lHzemyAIyZ/795XGa79X8cJExL/zP7d/WORIB0PBs5VbPYoIHth6
eN0q1nHBU9lc9relYHCToIF2q4gDVq4cWrzu2AMO7wprb8xkgbvpl+mR6wxw
j4Mbd6GSBJNHwkcHZYHgDN+LrZT+3bhvypYjao0KTt2Qu40aPzCVJetzdVPA
ofb0/MwQL+w38w+8U2zEbZtYdmV0CT1gkbrCnlOyBDb2+WtLxufBZTWk273g
wHn3m11ebRPYpy/8TC04iz6ju5o8/35om5aY0tL4gS/g8GTTdHbkHJj8+Sj9
7toPsEiu62E8WQVnKaJkvuJfmFerqNNVW+DaxPK6e6S3EfKdAv/XAh9w6tNm
veKkH1jWtBo7XEsFnx5V0g8aaGBtwmaxfSEA7Ek3zKroQWCOOd/sX0eChQWz
lI1nDLCPs6DENcQEF/L1czYnCzwz5iNn+7LBLYyH2udMDniyX2ZjCIPBGl5c
HfNUCP7XOBLtTOOCJdFJgcfL94JHltSm2zoe+Erzx1c599HCFMtqgh5tzMp7
6WlFB3hOzKkG0DdzO4OOOtGTfJuZww/FfJH03EoMWi9PjLDGoqUV3IB6MVpb
/+JxUBr6WKpmk1GGLtN9WnHfQFtoUyxrNZq41jusa0BLJBPL+wzoma+a/UT7
jryJXezoQFNFtjuGXjS5TmbVDKE7wh4k5Y3ssLA6VzqOHpuaaRO8Rf8GCe4T
mA==
     "]]}, 
   {RGBColor[1, 0.5, 0], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0, 1, 0], LineBox[CompressedData["
1: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
/pXE6P/dW/wPQtZ58g==
     "]]}, 
   {RGBColor[0, 1, 1], LineBox[CompressedData["
1:eJxFzWlI0wEUAPA5j020ms6JTbf+kuiSma4P0wnlOmwpObxKIWU6tDINB6WV
kxJjOaaF4REIpVTDC5pZg2mac0QMCXSpZOLCXB7NKW6amsc6Pvjeg8fjx7uC
pcWp+WQSiZT0L//XvaCZTEEPtwjhnsPuPOi0raO1WuuseBVdR+q+GGhD/8gN
2hg1o0V0d41hEM2RPSFU1egZyoDicii6wiSa1pawwGwuk6noYYKLjjc9vpQQ
ALb59QmY3xngOWv09PYoHbw8MD/WOuQDpvEGRe3WA+AWijnkgMEbvOIbGW5u
8AS3DZPiq8c9cH+2Koua7Ab2blYIyvUu4OR6flyj25+4PefoalTnZFvgLp79
lfTYOvhqtEu2RebAPj+QLWEvgfVmWjE/ag7vyTkUy6oZ+/e/uIWIR8Ck8oX0
0g4NOq1WzeAaBsBL/rkc13FwxWj9hW+np8H6zUGCe2MOnJOTWmnl2cC0rMOm
Hb4dnFlwTZN9fg28uS3RFPE3wLWxR8ni4i2wbvvNuwjFLrir0+veoxSSHu4X
Dh3R+ZLBFZaSWJbRFfxy0h64r9cdfNv364RATQFHOZ/p8l94gmuE1oSfdi+w
8GCjOPHkfjD1ZkfirTIazistNd2LPviPonQMS+ng6RbThohg4P+GlfexVn8w
UZDRPjURAJYlqUOd3EBwXtgp+pUmFu5bmtum1OgYD8dOxmv0p5R+h8SIzlvS
KbTraFkcb7EsnQ1uYX2urPE7BO4TydkGAk3jZpKdXDQ1fOytMh4dU/fxjLUU
bSwrYc1MomUL4vy782jO85G44DW0cntX0u9BgDvaGL0nCLQxjVfUGorOjKTK
6RHohesfdL8EaNX4U1uhEN0oZ1bNnkUvr/eopEnoZLbz90waof8LSz0oqw==

     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxF1HlM0nEYBnDAMYM8SUceIQY68eCHSSpmYg5Qm5k5l5iRpdiSMrGYU3I6
Q8tVTts6aDb6x7xnXquoNaG0peWcLsMYyyNjYZkDU1PXucb7fbdnzz7b8/fr
n1uUnk/A4XAH/uZf20/BF9maT2DxdvuMHpQbspHrNcNt5MPIl5XmxLL9yHQM
97skAjlsjT1mIyKfJOuXpzvZYOaD41VcAnLDbFxTCy4U7FDYGSWmBoNpwpnr
5ZlB4DihoH+wIRAsib3TvooPAI+x9oWzZAywclJvLVnyB3MiY37y79HBSUGu
fK9LNPBCq19WCNUXPLe15ij5tRfY1HeLEptHBf/QX0ujRXmCQ9V9jSuLFHDF
jkYHyoAbWKyVSfQqZ7COIeh+mEwC9+u/znUWEMGKwSeVJhEeLM91sY7XbvDt
pntnzVX7LYM5Lr41oiQzGJdfKukYGEWmvJviSN8MgC86FLt+NIPjfxXv2mKw
gU+tUCuYlg3wGWlCwaACr7N76pExUruHCH6889UQJiWBP5s02c8zncHfozF5
4303sE0zsk1koIAVWtOhBKsHuDzHifclmQpuVR1xL6vzAqfyX2bVvvcBf3MS
YzfkNHCK0lTkdoEO5pLWp49Z/MEtXdz5zTwGeHK2rv3sFBOcIZThIqoD0f6K
YIIRFgQWjk8seFtYYJZFyVtcDAEbuZaqNWMYeJ6iTumdQRYy9atFZmSXkWbr
shXZeJv5lEZig6d1M4X4aOQ1rIdHViMTh2ocAzTI4VGK9YQm5JDI3vTabuQX
sg5v3jDy1Q8Ex92byDk3l4JVeAy89xxH/dYRuctXJK7yQB4flvQS2MhLijLp
aS5yZVraeUMMsnu9U482Ebln9dM8lor87G5uZVsGsud2giowG7n0///S/QFM
DhmV
     "]]}, 
   {RGBColor[0.5, 0, 0.5], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{-5, -5},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}]],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.571680702394182*^9, 3.5716808106433735`*^9, 
  3.571680965519232*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "[", 
           RowBox[{"P", "[", 
            RowBox[{
             RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
            "]"}], "]"}], 
          FractionBox["180", "\[Pi]"]}], ",", 
         FractionBox[
          RowBox[{"QB", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
           "]"}], 
          RowBox[{"Qsum", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
           "]"}]]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "[", 
           RowBox[{"P", "[", 
            RowBox[{
             RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
            "]"}], "]"}], 
          FractionBox["180", "\[Pi]"]}], ",", 
         FractionBox[
          RowBox[{"QF", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
           "]"}], 
          RowBox[{"Qsum", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
           "]"}]]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"id", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570689572297782*^9, 3.570689641324986*^9}, {
  3.570689760070554*^9, 3.570689781854905*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`id$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`id$$], {1, 2}}}, Typeset`size$$ = {
    360., {177., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`id$1383$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`id$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`id$$, $CellContext`id$1383$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{{$CellContext`\[Theta][
            $CellContext`P[$CellContext`\[Theta]NN Degree, 
             0, $CellContext`id$$]] (180/
           Pi), $CellContext`QB[$CellContext`\[Theta]NN Degree, 
            0, $CellContext`id$$]/$CellContext`Qsum[$CellContext`\[Theta]NN 
           Degree, 0, $CellContext`id$$]}, {$CellContext`\[Theta][
            $CellContext`P[$CellContext`\[Theta]NN Degree, 
             0, $CellContext`id$$]] (180/
           Pi), $CellContext`QF[$CellContext`\[Theta]NN Degree, 
            0, $CellContext`id$$]/$CellContext`Qsum[$CellContext`\[Theta]NN 
           Degree, 0, $CellContext`id$$]}}, {$CellContext`\[Theta]NN, 40, 
         140}, PlotRange -> All, GridLines -> Automatic, GridLinesStyle -> 
        Directive[Dashed], AspectRatio -> 1, PlotStyle -> {Red, Blue}], 
      "Specifications" :> {{$CellContext`id$$, {1, 2}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{409., {221., 226.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5706896208036203`*^9, 3.570689642299906*^9}, 
   3.570689782271881*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"1500", "-", 
        RowBox[{"2", "x"}]}], 
       RowBox[{"2", " ", "a"}]], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1500"}], "}"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2000", ",", "4000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570690466398046*^9, 3.570690556912709*^9}, {
  3.570690624969269*^9, 3.5706906433569193`*^9}, {3.570695818202322*^9, 
  3.570695845946477*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 2840., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 2000, 4000}}, Typeset`size$$ = {
    360., {114., 118.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$1546$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 2000}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$1546$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Exp[(1500 - 2 $CellContext`x)/(2 $CellContext`a$$)], {$CellContext`x, 
         0, 1500}, GridLines -> Automatic, GridLinesStyle -> 
        Directive[Dashed], PlotRange -> {0.5, 1.5}], 
      "Specifications" :> {{$CellContext`a$$, 2000, 4000}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{409., {160., 165.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.570690492538575*^9, 3.570690557401103*^9}, {
  3.57069062581592*^9, 3.570690644043902*^9}, {3.570695837221582*^9, 
  3.57069584672606*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ToF", "[", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
          "]"}], ",", "1"}], "]"}], ",", 
       RowBox[{"Qsum", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ToF", "[", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
          "]"}], ",", "2"}], "]"}], ",", 
       RowBox[{"Qsum", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
        "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570615416886609*^9, 3.5706154243630366`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1:eJwdzH0s1HEAx3H6g5SLUZ4paXaS5ft14vdz7vfBljsxq6Z5qMjzQ8naPAxL
R5Gnmd2mWGrhdjQ783SeJ/IwD0sntqROGSs9WcZUusn6473Xf2/76JsX4vbp
6Ojw9/rv2np3tB4BeJ02uT0cbnlrTOwNCLwtv3TxWziENGgFDoYEzpBkvqvn
IBoIqHM0Ith5tLVc+ZCDvlQa4WxCEDnvsiMu55Df/bjD04Jg20dI+zM4cF93
Q3ysCTxkFeezUjjM+uPsOTuCij+JdmeiOLS5h5vFnCCQaxRDKgmH6qXN4jpX
At9Bvvu0DYfKqd7EaxKCxQClnviFCPxDtt8kgQSfJ19aabpFiDFS1LoFE7RV
BDWmK0VQGg6UHwghMNA97dpULcL4h/n2sSiCuvrdX/ZpIhy/k9iYlUXQUtBa
E24rQmxHknq8keBqZnPOWpY3Iq0vqxgexcwbbeF9gRA50jnH18YUhrthzRed
hHBOSfFPPUwRVhPVdcxOiMJk99oma4rR2ey85/pCxIy49ghOUhxksWS26AXP
zXR5rT/FytQr86P5XshY6D0yXEBx728/nqhZiGd7n8mKKDwUTrWKMRYrkJsm
lFIEbTz41NrHYsN3M85URjEvlvpPy1mMVM645NdRBBf1sRbZLARWxaE9QxRV
JYF8ngOL5gWP/sZRCoFEUSCw2PtpBPo1ExSx723VV3gsfDfMQ/PVFJ45MX6q
bQZyu/b9yR8phE1pZbenGUxGaCcSVynK707mdQ4xOLWuzE1ao7D8Lk74oWIg
m0zqS/tJ0bKsMo1/yuDSoF5A5hZFoTF/oaGKgVs8ncn7TSHmDclWSxnMpTKB
JVoK67JhP76UwVtl0nCVrhtsBDfWrmcw+AdUShLd
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAA2q5pwpYBM0DOWl4rM+M2QCyWxXr4
/TJAJZFZ2NHrNkDkcKDGW/oyQO17be1x9DZAe1saFSfzMkDdjDlPtgU3QHxl
O3PQ5DJAnvXX7E8oN0CWK3NnbcgyQNOGwmvGbTdAzFK97smQMkBuoJJTv/k3
QEwi06XdJTJAiLFLj9cVOUA9bnJnVyIyQNEVYRuQHzlA0Zh5w9IeMkA4cT5C
Sik5QI3B1kbOFzJAVC91X8M8OUDsUptf2AkyQMW6zdHIYzlAegtXAjjuMUDi
9ORlILI5QBq4CX0euDFA1gSixwBQOkDtN4G1ybQxQLw2jEHsWTpATOmPanax
MUCYQE5P2WM6QO/96UbUqjFA1H95Jbh3OkCB7vmvoZ0xQAU0SLaInzpA8NQV
gYKDMUBkgYU4de86QEMIGi9WUDFAOCOnM3qQO0CfEl++ZE0xQOJkYhTsmTtA
8xn6gXRKMUBdDw1PX6M7QPg6lqOXRDFAxGN20Um2O0BZ7T0+7DgxQL37fwUv
3DtAi7AGXgQ2MUD5op2wq+U7QOnc+awdMzFA6ZA1tCnvO0BzfdLVUy0xQKAx
GcQpAjxA9uCLQc4hMUBHqpABOig8QCCy48jvHjFA29hha8ExPEA05Fd6Ehwx
QM+DNixKOzxAIP8WWVsWMUApbC6yX048QM7PI4WBEzFA3qfzduxXPEBS0NDY
qBAxQEdcAJJ6YTxAAhKU9PoKMUBH4zPKmnQ8QLLFb7slCDFAaH/85ix+PECu
VPOOiwcxQIXfRHA2gDxAduT8nw==
      "]], LineBox[CompressedData["
1:eJwV13k81F8XB3BEqVQz8x1RiZivRBlD9q0PiSRZWqgUhfZUkgghZAnZZclW
lkjRZm8hIaUQUREpKirikUo/z/WX1/tlmHPPOffec6X3HrN2FuDj4/Ph5+Ob
/pnNut5bxa+M+E2pjHfPdRAzP37o+hQPUncKpSxsdHC+9JTRu0ke0mIXSQ0w
dKBmQz0Q+cOD1+HBhPEcbVifbt2p/4uH8qJbfQ+PaGMTJbH4xBgPdW7t/NfU
tWETu/n31REevqy3luz9owXvZz0Tnd95YLbckbpSooVwvpXijCEeHqntdIgO
1cLTrqRtJl94uOOnWmi0SwtuZ+Nv+/bzkCVq/+Q/nhYMD5znlvXxYHDfc7RB
UAum4W1PRnt4SKZX75nzXhOHjIe8lLp5uBd1oXFNhSakd6maH3nLw+q7qrJz
kjQxwSeund/Bw/zy5czZHpqorLZzkm/lYVzyZ6q0pibavqV9Va3nYcHHZyUB
JRrwWBcQcqaWhyuh6uc2pGjgxnFHvUfVPFw7/y2101cDomIvvlhV8XDLN75U
wUwDxe3H9fxu8XAxaNI7/Is6PoZR1ozLPHDjjLO26Khj+wsLd7dkHkLkmi2v
y6nDibM4rTORh4UGec92stXxQGDDeE4MiW8T/+Wk72q4dORRuXkID5MTf/mL
s9XQNxgs03iSh9qYj75fpdQQPZJiuOYE8Y8VsWoMNaSsVth9x4WHrtc5u+/y
qcHepjIo8yAP+k+khMw/qCJ/0Z+QYHsemnVFkotzVZHImTXqb8aD46X7S8e0
VJHUrBslZMqDoTBLsXmVKn46c6XDjHnYIrV7qkFKFaPDDhIJBiSfXz4ECM9U
RdRk+6EyDVKPsvyBC62rEbMkb2oVzYPQsWC+826rMfb4Y0HoXyX8bfxrlP1M
Bdlv7611HlfC79jAHYLVKjCceD5uOKIEoVwdo9MlKojx2p4vOKAEVV6xcnyW
CtoM/ieX2aKEiTVvUpI8VVAvvCFEL18JUZ0Rl2YoqEAx9I6ldrYSFi3OHNFc
pgIrvl8yWhlKiNbYt9ZtoQrY+jU9uglKWPImwuC3gAq+JXZfsTunBMHIjDjO
O2XoFZTumtyhBJnn9XncSGU0pF1at2ibEuzw0MQmUBn3fK4s17RSwo6+DovT
Z5TRz7fipZeJEtTnJ93uPqCMRXfjry5WVUKu/M4PiuuV8Wki2fXuPCX8r9rl
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
HFE=
      "]]}, {}}, {{}, {}, {}, {}}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{10., 5.},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}]],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.570615430079364*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ToF", "[", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
          "]"}], ",", "1"}], "]"}], ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", 
         RowBox[{"P", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
          "]"}], "]"}], 
        FractionBox["180", "\[Pi]"]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ToF", "[", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
          "]"}], ",", "2"}], "]"}], ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", 
         RowBox[{"P", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
          "]"}], "]"}], 
        FractionBox["180", "\[Pi]"]}]}], "}"}]}], "\[IndentingNewLine]", 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570615562329928*^9, 3.570615596699894*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
TQNPbkhZy70j38OxuYH3WzXwf51PR60=
     "]]}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{10., 20.},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}]],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.570615578553856*^9, 3.570615597452937*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "[", 
           RowBox[{"P", "[", 
            RowBox[{
             RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
            "]"}], "]"}], 
          FractionBox["180", "\[Pi]"]}], ",", 
         RowBox[{"\[CapitalDelta]T", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "[", 
           RowBox[{"P", "[", 
            RowBox[{
             RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
            "]"}], "]"}], 
          FractionBox["180", "\[Pi]"]}], ",", 
         RowBox[{"Tavg", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"20", ",", "70"}], "}"}], ",", "All"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "0.6"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"{", 
    RowBox[{"id", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570494755658395*^9, 3.570494801426059*^9}, {
  3.570494842792718*^9, 3.570494885664988*^9}, {3.5704949246971292`*^9, 
  3.570494926053068*^9}, {3.570497947683259*^9, 3.570497948768916*^9}, {
  3.570611574566841*^9, 3.570611596442092*^9}, {3.570616676871676*^9, 
  3.5706166874822826`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`id$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`id$$], {1, 2}}}, Typeset`size$$ = {360., {99., 104.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`id$5936$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`id$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`id$$, $CellContext`id$5936$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{{$CellContext`\[Theta][
            $CellContext`P[$CellContext`\[Theta]NN Degree, 
             0, $CellContext`id$$]] (180/Pi), 
          $CellContext`\[CapitalDelta]T[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}, {$CellContext`\[Theta][
            $CellContext`P[$CellContext`\[Theta]NN Degree, 
             0, $CellContext`id$$]] (180/Pi), 
          $CellContext`Tavg[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}}, {$CellContext`\[Theta]NN, 40, 140}, 
        PlotRange -> {{20, 70}, All}, GridLines -> Automatic, GridLinesStyle -> 
        Directive[Dashed], AspectRatio -> 0.6, PlotStyle -> {Red, Blue}], 
      "Specifications" :> {{$CellContext`id$$, {1, 2}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403., {140., 146.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5704947725912657`*^9, 3.5704948019148407`*^9}, {
   3.570494847716611*^9, 3.570494886331189*^9}, 3.5704949264807873`*^9, 
   3.5704957712421103`*^9, 3.570495819095427*^9, 3.57049794933374*^9, 
   3.570611598014182*^9, 3.5706167159439106`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "Red", "  ", "*)"}], 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[CapitalGamma]F", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
           "]"}], "-", 
          FractionBox["1500", 
           RowBox[{"\[Beta]plastic", " ", "c"}]]}], ",", 
         RowBox[{"QF", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "Blue", " ", "*)"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[CapitalGamma]B", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
           "]"}], "-", 
          FractionBox["1500", 
           RowBox[{"\[Beta]plastic", " ", "c"}]]}], ",", 
         RowBox[{"QB", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", "Orange", "*)"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"\[CapitalGamma]B", "[", 
             RowBox[{
              RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}],
              "]"}], "+", 
            RowBox[{"\[CapitalGamma]F", "[", 
             RowBox[{
              RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}],
              "]"}]}], "2"], "-", 
          FractionBox["1500", 
           RowBox[{"2", "\[Beta]plastic", " ", "c"}]]}], ",", 
         RowBox[{"Qsum", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", "Green", " ", "*)"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[CapitalGamma]B", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
           "]"}], "-", 
          RowBox[{"\[CapitalGamma]F", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
           "]"}]}], ",", 
         RowBox[{"Qsum", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}], ","}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "20"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "40"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Red", ",", "Blue", ",", "Orange", ",", "Green", ",", "Black"}], 
       "}"}]}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "0"}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"id", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570507656734489*^9, 3.5705077124498167`*^9}, {
   3.570509193814732*^9, 3.5705092220948677`*^9}, 3.57050933080735*^9, {
   3.570509910025017*^9, 3.570509925618043*^9}, {3.5705104238312683`*^9, 
   3.570510434520446*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`id$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`id$$], {1, 2}}}, Typeset`size$$ = {
    360., {179., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`id$2052$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`id$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`id$$, $CellContext`id$2052$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{{$CellContext`\[CapitalGamma]F[$CellContext`\[Theta]NN 
            Degree, 0, $CellContext`id$$] - 
          1500/($CellContext`\[Beta]plastic $CellContext`c), 
          $CellContext`QF[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}, \
{$CellContext`\[CapitalGamma]B[$CellContext`\[Theta]NN Degree, 
            0, $CellContext`id$$] - 
          1500/($CellContext`\[Beta]plastic $CellContext`c), 
          $CellContext`QB[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}, \
{($CellContext`\[CapitalGamma]B[$CellContext`\[Theta]NN Degree, 
              0, $CellContext`id$$] + \
$CellContext`\[CapitalGamma]F[$CellContext`\[Theta]NN Degree, 
              0, $CellContext`id$$])/2 - 
          1500/((2 $CellContext`\[Beta]plastic) $CellContext`c), 
          $CellContext`Qsum[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}, \
{$CellContext`\[CapitalGamma]B[$CellContext`\[Theta]NN Degree, 
            0, $CellContext`id$$] - \
$CellContext`\[CapitalGamma]F[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$], 
          $CellContext`Qsum[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}, Null}, {$CellContext`\[Theta]NN, 40, 140}, 
        PlotRange -> {{-10, 20}, {0, 40}}, GridLines -> Automatic, 
        GridLinesStyle -> Directive[Dashed], AspectRatio -> 1, 
        PlotStyle -> {Red, Blue, Orange, Green, Black}, 
        AxesOrigin -> {-10, 0}], 
      "Specifications" :> {{$CellContext`id$$, {1, 2}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403., {219., 225.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.570507704805163*^9, 3.5705077135600567`*^9}, {
   3.57050921404884*^9, 3.5705092232610207`*^9}, 3.5705093316557198`*^9, 
   3.57050992747526*^9, {3.5705104248636093`*^9, 3.570510435445842*^9}, 
   3.5706099027862206`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", "Black", " ", "*)"}], 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalGamma]F", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", " ", ",", 
           "1"}], "]"}], ",", 
         RowBox[{"QF", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "Red", "  ", "*)"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalGamma]F", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}], ",", 
         RowBox[{"QF", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "Blue", " ", "*)"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalGamma]B", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}], ",", 
         RowBox[{"QB", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "Pink", " ", "*)"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tF", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}], ",", 
         RowBox[{"QF", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "Cyan", " ", "*)"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tB", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}], ",", 
         RowBox[{"QB", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", "Orange", "*)"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalDelta]T", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}], ",", 
         RowBox[{"Qsum", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", "Green", " ", "*)"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Tavg", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}], ",", 
         RowBox[{"Qsum", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", "30"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "40"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Black", ",", "Red", ",", "Blue", ",", "Pink", ",", " ", "Cyan", ",", 
        "Orange", ",", "Green"}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "20"}], ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Pink", ",", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<tF\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"tF", "[", 
             RowBox[{
              RowBox[{"40", " ", "\[Degree]"}], ",", "0", ",", "id"}], "]"}], 
            ",", 
            RowBox[{"QF", "[", 
             RowBox[{
              RowBox[{"40", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
             "]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", "Cyan", ",", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<tB\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"tB", "[", 
             RowBox[{
              RowBox[{"40", " ", "\[Degree]"}], ",", "0", ",", "id"}], "]"}], 
            ",", 
            RowBox[{"QB", "[", 
             RowBox[{
              RowBox[{"40", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
             "]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", "Green", 
        ",", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<Tavg\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Tavg", "[", 
             RowBox[{
              RowBox[{"40", " ", "\[Degree]"}], ",", "0", ",", "id"}], "]"}], 
            ",", 
            RowBox[{"Qsum", "[", 
             RowBox[{
              RowBox[{"40", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
             "]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", "Orange", 
        ",", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<\[CapitalDelta]T\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[CapitalDelta]T", "[", 
             RowBox[{
              RowBox[{"40", " ", "\[Degree]"}], ",", "0", ",", "id"}], "]"}], 
            ",", 
            RowBox[{"Qsum", "[", 
             RowBox[{
              RowBox[{"40", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
             "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"id", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5704871765174847`*^9, 3.57048730495291*^9}, {
   3.570487335528916*^9, 3.570487337623374*^9}, {3.570487430373942*^9, 
   3.570487493066338*^9}, {3.570487598848174*^9, 3.5704875995502863`*^9}, {
   3.570490281408609*^9, 3.57049028181415*^9}, {3.570491067167529*^9, 
   3.570491137583857*^9}, {3.570493650934935*^9, 3.5704936731285152`*^9}, {
   3.5704939810842113`*^9, 3.570493982328738*^9}, {3.5704958419370813`*^9, 
   3.570495852378702*^9}, {3.570497111384801*^9, 3.570497111741477*^9}, 
   3.570497714570057*^9, {3.570497938140877*^9, 3.5704979395222197`*^9}, {
   3.570497970792818*^9, 3.570497983617056*^9}, {3.5705005220937233`*^9, 
   3.570500527562215*^9}, {3.570502900225885*^9, 3.570502900696044*^9}, {
   3.570502968806656*^9, 3.570502976290698*^9}, {3.5706100272383385`*^9, 
   3.570610110089078*^9}, {3.5706101576848*^9, 3.5706101637571473`*^9}, {
   3.5706118511956635`*^9, 3.570611891795985*^9}, {3.570612061133671*^9, 
   3.5706121055452113`*^9}, {3.57061684932154*^9, 3.5706169124921527`*^9}, {
   3.570617312031005*^9, 3.570617372557467*^9}, 3.570617430063756*^9, {
   3.5706175533258066`*^9, 3.570617620131627*^9}, {3.570617889106012*^9, 
   3.57061791057524*^9}, {3.570618528869604*^9, 3.5706185301476774`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`id$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`id$$], 2}, {1, 2}}}, Typeset`size$$ = {
    360., {179., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`id$6548$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`id$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`id$$, $CellContext`id$6548$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot[{{
          $CellContext`\[CapitalGamma]F[$CellContext`\[Theta]NN Degree, 0, 1], 
          $CellContext`QF[$CellContext`\[Theta]NN Degree, 0, 1]}, {
          $CellContext`\[CapitalGamma]F[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$], 
          $CellContext`QF[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}, {
          $CellContext`\[CapitalGamma]B[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$], 
          $CellContext`QB[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}, {
          $CellContext`tF[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$], 
          $CellContext`QF[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}, {
          $CellContext`tB[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$], 
          $CellContext`QB[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}, {
          $CellContext`\[CapitalDelta]T[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$], 
          $CellContext`Qsum[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}, {
          $CellContext`Tavg[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$], 
          $CellContext`Qsum[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}}, {$CellContext`\[Theta]NN, 40, 140}, 
        PlotRange -> {{-20, 30}, {0, 40}}, GridLines -> Automatic, 
        GridLinesStyle -> Directive[Dashed], AspectRatio -> 1, 
        PlotStyle -> {Black, Red, Blue, Pink, Cyan, Orange, Green}, 
        AxesOrigin -> {-20, 0}, Epilog -> {Pink, 
          Text["tF", {
            $CellContext`tF[40 Degree, 0, $CellContext`id$$], 
            $CellContext`QF[40 Degree, 0, $CellContext`id$$]}], Cyan, 
          Text["tB", {
            $CellContext`tB[40 Degree, 0, $CellContext`id$$], 
            $CellContext`QB[40 Degree, 0, $CellContext`id$$]}], Green, 
          Text["Tavg", {
            $CellContext`Tavg[40 Degree, 0, $CellContext`id$$], 
            $CellContext`Qsum[40 Degree, 0, $CellContext`id$$]}], Orange, 
          Text["\[CapitalDelta]T", {
            $CellContext`\[CapitalDelta]T[40 Degree, 0, $CellContext`id$$], 
            $CellContext`Qsum[40 Degree, 0, $CellContext`id$$]}]}], 
      "Specifications" :> {{{$CellContext`id$$, 2}, {1, 2}}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{403., {219., 225.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.570487192730832*^9, {3.570487229101367*^9, 3.570487235284115*^9}, {
   3.570487296618891*^9, 3.570487305567058*^9}, 3.5704873381657257`*^9, 
   3.570487600554003*^9, 3.5704902829866734`*^9, {3.570491131843992*^9, 
   3.570491138100794*^9}, {3.57049362292143*^9, 3.570493676947154*^9}, 
   3.570495783792412*^9, {3.570495827334942*^9, 3.570495853610737*^9}, 
   3.570497113123361*^9, 3.570497715568872*^9, 3.5704979400658007`*^9, {
   3.5704979718951473`*^9, 3.570497985054864*^9}, 3.570500531216214*^9, 
   3.570502907664803*^9, 3.570502977346496*^9, 3.570609927708646*^9, 
   3.5706101138442926`*^9, 3.570610164615196*^9, 3.570611895152177*^9, 
   3.5706121077343364`*^9, 3.5706169173534307`*^9, 3.5706173738625417`*^9, 
   3.5706174339059763`*^9, {3.5706175774371853`*^9, 3.57061762105768*^9}, 
   3.5706179125783544`*^9, 3.570618531021727*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Tavg", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
        "]"}]}], ",", 
      RowBox[{"\[CapitalGamma]F", "[", 
       RowBox[{
        RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
       "]"}]}], "}"}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5706179791781635`*^9, 3.5706180311491365`*^9}, {
  3.5706180837851467`*^9, 3.5706180928426647`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Ynw=
     "]]}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 10.},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}]],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.5706179953690896`*^9, 3.570618032672223*^9}, {
  3.570618085711257*^9, 3.570618094108737*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Qsum", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
          "]"}], ",", 
         RowBox[{"Qsum", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"QB", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}], ",", 
         RowBox[{"QF", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "35"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "35"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue", ",", "Green"}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"\"\<Slope=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"p2", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", 
            RowBox[{"p1", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], 
           RowBox[{
            RowBox[{"p2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{"p1", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"25", ",", "25"}], "}"}]}], "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"id", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"att", ",", "2000", ",", "5000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1", ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "10"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p2", ",", 
       RowBox[{"{", 
        RowBox[{"20", ",", "10"}], "}"}]}], "}"}], ",", "Locator"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.570494225465921*^9, 3.570494245502626*^9}, {
  3.5704943555504913`*^9, 3.570494437435515*^9}, {3.570495867296853*^9, 
  3.570495875658608*^9}, {3.570496583693594*^9, 3.570496616697493*^9}, {
  3.570496654070406*^9, 3.570496660506051*^9}, {3.570497998609993*^9, 
  3.570498007762054*^9}, {3.5704984044905252`*^9, 3.5704984858982067`*^9}, {
  3.5704999427971573`*^9, 3.570500079138809*^9}, {3.570500184373786*^9, 
  3.5705001884908323`*^9}, {3.570500540704544*^9, 3.57050058139769*^9}, {
  3.57050167841337*^9, 3.570501704494391*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`att$$ = 2000, $CellContext`id$$ = 
    1, $CellContext`p1$$ = {10, 10}, $CellContext`p2$$ = {20, 10}, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`id$$], {1, 2}}, {
      Hold[$CellContext`att$$], 2000, 5000}, {{
       Hold[$CellContext`p1$$], {10, 10}}, Automatic}, {{
       Hold[$CellContext`p2$$], {20, 10}}, Automatic}}, Typeset`size$$ = {
    360., {178., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`id$20044$$ = 
    False, $CellContext`att$20045$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`att$$ = 2000, $CellContext`id$$ = 
        1, $CellContext`p1$$ = {10, 10}, $CellContext`p2$$ = {20, 10}}, 
      "ControllerVariables" :> {
        Hold[$CellContext`id$$, $CellContext`id$20044$$, False], 
        Hold[$CellContext`att$$, $CellContext`att$20045$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot[{{
          $CellContext`Qsum[$CellContext`\[Theta]NN Degree, 0, 1], 
          $CellContext`Qsum[$CellContext`\[Theta]NN Degree, 0, 2]}, {
          $CellContext`QB[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$], 
          $CellContext`QF[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}}, {$CellContext`\[Theta]NN, 40, 140}, 
        PlotRange -> {{0, 35}, {0, 35}}, GridLines -> Automatic, 
        GridLinesStyle -> Directive[Dashed], AspectRatio -> 1, 
        PlotStyle -> {Red, Blue, Green}, AxesOrigin -> {0, 0}, Epilog -> 
        Text[
          StringJoin["Slope=", 
           
           ToString[(Part[$CellContext`p2$$, 2] - 
             Part[$CellContext`p1$$, 2])/(Part[$CellContext`p2$$, 1] - 
            Part[$CellContext`p1$$, 1])]], {25, 25}]], 
      "Specifications" :> {{$CellContext`id$$, {1, 2}}, {$CellContext`att$$, 
         2000, 5000}, {{$CellContext`p1$$, {10, 10}}, Automatic, ControlType -> 
         Locator}, {{$CellContext`p2$$, {20, 10}}, Automatic, ControlType -> 
         Locator}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{409., {236., 242.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5704943827743883`*^9, 3.570494438046253*^9}, {
   3.570495860073039*^9, 3.570495876364987*^9}, {3.570496595489128*^9, 
   3.570496617365655*^9}, 3.570496661318811*^9, {3.570498000553747*^9, 
   3.5704980090502253`*^9}, {3.570498424480777*^9, 3.5704984872831182`*^9}, 
   3.570499991496593*^9, {3.570500058085784*^9, 3.570500079904181*^9}, 
   3.570500189135668*^9, {3.570500551638472*^9, 3.570500583650012*^9}, 
   3.570501706478348*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ToF", "[", 
          RowBox[{
           RowBox[{"P", "[", 
            RowBox[{
             RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
            "]"}], ",", "1"}], "]"}], "-", 
         RowBox[{"\[CapitalGamma]F", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
          "]"}]}], ",", 
        RowBox[{"Tavg", "[", 
         RowBox[{
          RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
         "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ToF", "[", 
          RowBox[{
           RowBox[{"P", "[", 
            RowBox[{
             RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
            "]"}], ",", "2"}], "]"}], "-", 
         RowBox[{"\[CapitalGamma]F", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
          "]"}]}], ",", 
        RowBox[{"Tavg", "[", 
         RowBox[{
          RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
         "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"GridLinesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.570502079543935*^9, 3.570502080462228*^9}, {
  3.570502114333248*^9, 3.570502164885442*^9}, {3.5706136713157682`*^9, 
  3.5706136976252728`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwVx38803kcwPGZclgxMStb67v247uy7avox6NT+5TkR+1EVJSFqPnVD/1Q
iE6U4vKrR4USIVeLFLFW2puMCodSjsqvilV3O4VUdK774/V4Pl7sgN0eQWQS
ibT5R/+7e+XE5WfFGNKvW3W8iydAZGtNMaMAQ2dLKMkYW4CGFF5+gbkYihdf
cAhmCtD2Izfffj+Doc+TYw/J5gI0erXX1D0eQ0lCfNiLJEDWtuwtB30xdP/2
zhXRL3B0ILP4VRkNQ4aWOridiSN585Y/LBhzkFPwftdUCo4+B9xbllLKQCYV
haS1XjzkKkw4TZfPRMrzSdeotzhIvtW6wXQvDTXYvKxPWTwXWUZnp4oiZyAW
mCty7mConWLQ4q8xRVQKtVTVzULaVal5v5w2RheutFsucGAibrp15TbNVFTV
fDn/TvcsJHwBzDUZeuhexN/tQg0dUbd6cqYkf5PMZwa0PM6loaUTkbP0hz5J
7KZ8SDFWmiPs5Vly9rVBiaK3x8D3oxnChhl6F962Sbzrco9vt6IiqDN2Xd4K
arLssNL0wzTkJ7pafnGgTz1yn8DCYo1Qnnxn2UCnTs21IfVlrTRAh45aKyWO
o+oZrlNu7vPSR0mDYzmM8HF1kiVLnbiShDyvh5E/xZNg6K4PzeH9NwnTlhgo
OKwPfqXPpD0TI5IzaTs49RsMQDvQfGVRuk6yrumU1u2TIZC+2GeY0N9IPBON
xsOBAoAnpAmr2yTK5++njG02ARLDduTV0t/VzhvKFp7aQwVqv12tgXOH+k1d
oEt4ixlov1dbMnMG1FZXTwYF0s2hKfVTdEj4kJra2L2rKsYCrtOd8ivJn9Wq
xrPjtd00WG+Ft785Na62718SzRbRYb7KK5gIIMHjuhMTJRdngnPcaKizgz7Y
L4r9tWRiFgj9+g846RlAV0PGPMVWBuxIpNSvqjEEu7LRXOwtE5gb28pETyjQ
f/3w0U4ZCw66de67pDEBxdc8mzh9DAhdRfaIsRnk+6y0P9SGAaNs9ObAlRlQ
LMpiDxewAd9YFPNyrQUUTe6OXJA5FzjfPATe8y2h9vwJ6YJYDsiE8e2bSTNh
M6W49WAyF06a1XS9trIC48hKJ3UhD3Tanof7pUzYkpVRsOceH1JF5492xLAg
r1oa4aMngOk//5TqdQyDdR5G5/51mgfKltryr4/Y4P7A8bVH/nyoRpOTUg4H
Pr6/uy98qRBk8gNpchUXRvxd9hesEIJ/Dzk9F7hAL44592K1EBK4iyue13Nh
b1yHq4e7ELon0nZKn3LBZFlRkneIEKKqZEWef3FBvrjjSOsFITwvT8tuZPHA
M3RTcLC+CGq01OOBiTy4MfXI8gEjETCPLfbpS+aBygWXBVFFIGjojfLL4IFU
cfxUyGwRqASoOOgSDzTnzCvTlohgIa35SfIdHkQzO9OkYSLQZmWUOOt4AGMV
bpkdIpgbylpvsI4PpTHN+fweEQwmO72ocedD8mCpcfWACIaz2WuObuLDoiDx
vOFREejypz+Yup0PH17btCdYiCFluXWmbRQfDn0pAYmHGKL6Yn2ZV/lw42ms
E6dVDP477eMXGOHQORxfOPtPMdQoYuhSUxwOxvXJGL1isFtm2hZKw6HmHWkU
GxKD69AK1S02DjbP4rSeVAIIiweFO5bh4MH/hxTgTsCX8q5eeRgOKWfS3TK9
CdBFQUtVBA7Djo/YD/0JsKi0NTQ+jEN4Y6uPfQQBvyGfbcpEHGSzCgPdMglw
bnJ8b38Jh/IAR9rFHAKsT/KDrxThkL80yFdXQIB0ycRq8+s4mE+V3M+p+PHn
ts8eU+KgbZn+cuweAVUh71i71DjUtifkbNIQ4BC57oRWg0P9HLtJVTMBWwKm
ee9owsGXXGo09zkBLmaKs4NPcPgPcIKb5w==
     "]]}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}]],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.5705021455721188`*^9, 3.570502166106064*^9}, 
   3.570610258727579*^9, 3.570613700530439*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tB", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}], ",", 
         RowBox[{"tF", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Tavg", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}], ",", 
         RowBox[{"\[CapitalDelta]T", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "15"}], ",", "15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "15"}], ",", 
        RowBox[{"-", "20"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"id", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570494468332571*^9, 3.5704944906403303`*^9}, {
  3.570495882680488*^9, 3.570495886139585*^9}, {3.5704980581567383`*^9, 
  3.5704980590156097`*^9}, {3.5704981202520533`*^9, 3.570498162236371*^9}, {
  3.570499360304825*^9, 3.57049938137836*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`id$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`id$$], {1, 2}}}, Typeset`size$$ = {
    360., {176., 180.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`id$16764$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`id$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`id$$, $CellContext`id$16764$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot[{{
          $CellContext`tB[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$], 
          $CellContext`tF[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}, {
          $CellContext`Tavg[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$], 
          $CellContext`\[CapitalDelta]T[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}}, {$CellContext`\[Theta]NN, 40, 140}, 
        PlotRange -> {{-15, 15}, {-20, 20}}, GridLines -> Automatic, 
        GridLinesStyle -> Directive[Dashed], AspectRatio -> 1, 
        PlotStyle -> {Red, Blue}, AxesOrigin -> {-15, -20}], 
      "Specifications" :> {{$CellContext`id$$, {1, 2}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403., {216., 222.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.570494470499156*^9, 3.570494491243091*^9}, 
   3.570495887939389*^9, 3.570498059684375*^9, {3.570498123406026*^9, 
   3.570498162861513*^9}, {3.570499365060564*^9, 3.570499382004838*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalDelta]T", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}], ",", 
         RowBox[{"Qlog", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Tavg", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}], ",", 
         RowBox[{"Qlog", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "15"}], ",", "15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "15"}], ",", 
        RowBox[{"-", "1"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"id", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5705026160036783`*^9, 3.570502694125266*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`id$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`id$$], {1, 2}}}, Typeset`size$$ = {
    360., {174., 179.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`id$20964$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`id$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`id$$, $CellContext`id$20964$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot[{{
          $CellContext`\[CapitalDelta]T[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$], 
          $CellContext`Qlog[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}, {
          $CellContext`Tavg[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$], 
          $CellContext`Qlog[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}}, {$CellContext`\[Theta]NN, 40, 140}, 
        PlotRange -> {{-15, 15}, {-1, 1}}, GridLines -> Automatic, 
        GridLinesStyle -> Directive[Dashed], AspectRatio -> 1, 
        PlotStyle -> {Red, Blue}, AxesOrigin -> {-15, -1}], 
      "Specifications" :> {{$CellContext`id$$, {1, 2}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403., {215., 221.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.570502624776762*^9, 3.5705026948799667`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalDelta]T", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}], ",", 
         RowBox[{"tB", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalDelta]T", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}], ",", 
         RowBox[{"tF", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "id"}], 
          "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "15"}], ",", "15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "15"}], ",", 
        RowBox[{"-", "10"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"id", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5704983642852707`*^9, 3.570498393441476*^9}, {
   3.570498506203103*^9, 3.570498588534997*^9}, {3.570498638457447*^9, 
   3.570498720047503*^9}, {3.5704987701122503`*^9, 3.570498793178978*^9}, 
   3.570500350324671*^9, {3.570500618043633*^9, 3.57050062626235*^9}, {
   3.5705026089195538`*^9, 3.570502638942378*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`id$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`id$$], {1, 2}}}, Typeset`size$$ = {
    360., {171., 176.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`id$20765$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`id$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`id$$, $CellContext`id$20765$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot[{{
          $CellContext`\[CapitalDelta]T[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$], 
          $CellContext`tB[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}, {
          $CellContext`\[CapitalDelta]T[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$], 
          $CellContext`tF[$CellContext`\[Theta]NN Degree, 
           0, $CellContext`id$$]}}, {$CellContext`\[Theta]NN, 40, 140}, 
        PlotRange -> {{-15, 15}, {-20, 20}}, GridLines -> Automatic, 
        GridLinesStyle -> Directive[Dashed], AspectRatio -> 1, 
        PlotStyle -> {Red, Blue}, AxesOrigin -> {-15, -10}], 
      "Specifications" :> {{$CellContext`id$$, {1, 2}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403., {212., 218.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.5705006279181843`*^9, 3.5705026404731293`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"QB", "[", 
        RowBox[{"\[Theta]NN", " ", ",", "0", ",", "id"}], "]"}], ",", 
       RowBox[{"QF", "[", 
        RowBox[{"\[Theta]NN", " ", ",", "0", ",", "id"}], "]"}]}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Theta]NN", ",", 
       RowBox[{"40", " ", "\[Degree]"}], ",", 
       RowBox[{"140", " ", "\[Degree]"}]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "40"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "40"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<QB\>\"", ",", "\"\<QF\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"id", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570429064700013*^9, 3.5704291174691763`*^9}, {
  3.570429561424605*^9, 3.570429601552966*^9}, {3.570429655674962*^9, 
  3.5704297148501053`*^9}, {3.5704314704666986`*^9, 3.570431485679153*^9}, {
  3.5704315421449203`*^9, 3.570431632285287*^9}, {3.570431762710581*^9, 
  3.570431785462604*^9}, {3.5704912731696157`*^9, 3.5704912834180307`*^9}, {
  3.570491355335713*^9, 3.570491387159793*^9}, {3.5704914323535*^9, 
  3.570491434037136*^9}, {3.570495912394719*^9, 3.570495915190855*^9}, {
  3.570498306557526*^9, 3.570498324864234*^9}, {3.570500635886245*^9, 
  3.570500668558589*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`id$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`id$$], {1, 2}}}, Typeset`size$$ = {
    360., {179., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`id$19496$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`id$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`id$$, $CellContext`id$19496$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot[{
         $CellContext`QB[$CellContext`\[Theta]NN, 0, $CellContext`id$$], 
         $CellContext`QF[$CellContext`\[Theta]NN, 
          0, $CellContext`id$$]}, {$CellContext`\[Theta]NN, 40 Degree, 140 
         Degree}, PlotRange -> {{0, 40}, {0, 40}}, AspectRatio -> 1, 
        GridLines -> Automatic, GridLinesStyle -> Directive[Dashed], Frame -> 
        True, FrameLabel -> {"QB", "QF"}], 
      "Specifications" :> {{$CellContext`id$$, {1, 2}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403., {219., 225.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.570429128695137*^9, 3.57042951288435*^9, {3.5704295847267427`*^9, 
   3.570429602052622*^9}, {3.570429659823745*^9, 3.5704297154153147`*^9}, 
   3.570431113983385*^9, 3.570431486644224*^9, {3.57043153116389*^9, 
   3.570431564648595*^9}, {3.570431619430694*^9, 3.570431632791314*^9}, 
   3.570431786534*^9, 3.5704448907678003`*^9, 3.570491285427684*^9, {
   3.5704913764865103`*^9, 3.570491387773457*^9}, 3.570491437363503*^9, 
   3.570495921085248*^9, {3.5704983135250072`*^9, 3.570498325376257*^9}, {
   3.5705006472198887`*^9, 3.570500669034134*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Tavg", "[", 
        RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"Tavg", "[", 
        RowBox[{"\[Theta]NN", " ", ",", "0", ",", "2"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalDelta]T", "[", 
        RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"\[CapitalDelta]T", "[", 
        RowBox[{"\[Theta]NN", " ", ",", "0", ",", "2"}], "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", 
     RowBox[{"40", " ", "\[Degree]"}], ",", 
     RowBox[{"140", " ", "\[Degree]"}]}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "15"}], ",", "15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "15"}], ",", "15"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<L\>\"", ",", "\"\<R\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570501723376256*^9, 3.570501803647442*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFzHs0lAkYBvBxaVzmG5RL0aTEfF9bqnEpkvZ7i20kFEurRHZYDV23q2rE
UbrRTveUblQTTRck1+p7RXSTTGMt2QgNRYyWdpS1a8/p1B/vec/vPM95bETr
An7RZrFY4cP3//c2tDpoquGCTvm8PQ38SeD3xfoW3Xj7KAU+XyyM3uQt5Xzz
j5491bUD5Fe/kPc6Cju+WW76XCFtIr/uLdc4DbX8/i0/P/X2rkOKb84aypbB
MxKClxzwj+znwjY8Xpn2kAS2KCdM2M2FgSX3ZPeRhEZVkuuU9uH+vBW7uwpJ
UPnXvDJu5oJn7ckwyxwSnrZ8kL6s4YJ5dqCWJJ2ExTVrd0puc+Hoyd4nkYkk
dMT1LG+TcCGn9ruG+54koPJRm3IzF/QKXl0cO4eEiqLiGRVrudCoaPfZOmN4
P9jQUR7OBeZT3QwXkoTsy8m/7fTkQn2jzKFej4SYuPRMb4ILXvpuCy494cN8
o7vqLWcIMMq7xFoYxAeZalfAx+MECCzi5sT68QEeqUK3SAkwjrJ6ekXIhyVG
9etjEwnIexZez3XjA+9FY+JuMQGSBRJpvzUfIk/0Ot5xJkBnZr/Q8a0dkP7O
GZlVHOhrqTYIjreDq8036ldrceB26r6rJrm2MN9h1Gy7WAOoEDRWpMycCN2V
tuOL6vRgHJrK04omgLXKy8FyORtMOCY3il9Zg9n0NW/aH+nCGZnSwsGDB2YE
S/xMqAMFVRnpRa8sYVBbPFmrXQtKNrxX2j8YDX7RBQYD61gwjSeqfnzOHCLt
U3T0HIZoZ93OFMNCU7BPDrm5LO0zndXcxA7tHQmuospzj+s1dFD5uT0RViYg
6EzLCA74SA+Fbis07iQgXJcdn33+L1pzb/qE1TsN4NjK60p33V56ooD1+tRc
Nrh6r6l2mfOeHuWtm7MxSAdg1ePoabwOOsXCmkmaywJ1V63+DlErPViyzNzj
3SdazW/yPHqlkc68UevbNNhHY41tSGadglarqmQzDnfTuAyH/jhSRpto3I8Y
jW6jWeEX5XGh/rRg0u5D9ndrhnOv+S51pQzLyqnvT9dM5gKqcsMyaxhsdr7P
9qpjshWxiRHGL5n1/9y14KWpGFZnd9O6ltdMnvTDjpg1akbt9lYeekTFRI4W
pudrf2QSfpZu77DrZLosKWXbgc/M89ZLh8pFPUxfUVD0dBELB4mDGYGfexn7
+P5VXh46mJkaX8Ti9TFdK1o2C7XYKE7zqxov+MiYJXEq5pXqozh9lk/DOg2j
CarJnqrg4AVjlcXDvZ8YwaL6jecfGGGCqDLw8ZNBht2dd7rPcCSKtdX5io4h
Rju7P0clG4XqIpk0KY6F2ksuSxoXmqFglkcCeVYLBwYCJi2dbIGbZm8c+yJL
Gz3tE5XBrDGoX510IqZKBwNHlja0Wllhc97WU4Fduvi8o+nhJl8eRqVP9y7Q
jMCYqakJdRJrjI17YlXM00PD2XrSoF0TMOHm88Et0/Qxq/r+rYFHNig5Vp5r
4G6AGfDvv762ttiXm5xvIjLEMPHmQ+JiOwx2J1pHbeEgf5X1YrYPiV7XW53b
t3PwTbLwZak/iXdCjK6WxHOw77TN/ISfSDSTnx2K3M/B7nRu2YgIEtdzogKK
znAwec6Uo07bSWwLuZUrLuNg7OudobwsEvcFele2mBDoutI90cGAQjvzyowS
cwJL5ZLRvsYUgveZi8esCBS4GdesMqeQ53TYXGhHoFD9fXGuDYXZfmvuXHch
0MGs7FKUG4V5i13sEsMI1NxqaBavprB8zOvloREE9mzH6oINFPrc6ihxFRM4
Jt9J33AbhZsGAt73/ErgQVi2ojCJwq6YFePDkwj0evrDO/fzFF5bWpbifoDA
KfvJaNllCi8k6NtYSgn0dRn0NL1GYaNf7D1F6rBPRoz7u5BCpaqs8uZZAvNj
3lqvZSiMTHXUpGQQ6LHVZ2/Hg+G8Wbko5gqBISJiadRTChfTJc+E1whcMFJ+
ol1B4X+cSs0f
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxNlX881Hccx+9kQuj8KHx/pCSZSlq1FPV9t5m4mZBKclzXrZ1+0CK5hRRi
w5gfrWJNhhlb3ayUUvfeZnGR3KVkU3F0XbnpkjysjnZ7PCr74/P4PJ6P1+Pz
/Hz++bzeswQxwR8bsFisbfr13841JXKsR2kIZC62rfmRwoBXnOhhSghnUej/
is9EuC4YPUK+4Q6r3per0ia4cP8dVcanE6xTymcuEJFvfA2F4ruKiIk8jcke
nBP2v/PmfAfxehJDN3wRJHxGQ8ge1e7WQBKNBD9HrBmkQaLk9Dn4k9itSveY
94AG6mb73tg1JKqC5Hen9uh9v9q+3fQeia3Kody/5DSUxLCeRC8nMVAenZx4
Vu9rrjREZxLVSY/D+xP178s+5iZik4gdsv6Ovfp83dhvl3QEXqm/sPRKNA0a
Hmuf9SiBqlDTd2r4NNgdrl4pHSRQUpH1ZbK33h/54n27bgK3J52s4prRENfz
bG57HYE+Fpe08SUU6MRt6g07CaxUpQaPFFHQf8dmxctPCASZihefS0HDBV7F
91sJ3GDRtTvhEAWNsc2y0TACqRvdh9JEFGS6XfIt8SNQeOTJOw1LKAhJZU9T
OxPoHLSkrOoaCeEL7Y/k99pjdc+prp1sEqBIVee+0R59Fll5OiXYgxNHc1Hp
a4eDTbMd6jttAcJPHDWfY4szVL6L7MOnQ6vjgV/bp01Hm4W77j+Q2UCP40Fh
v9YGbcxYorY11jBEGwQ5K6xRZyByZT+whOflXR6rm6wwIOqcyT8xHPB/O2Kj
X6UlCudnT5q8yAJC+35gfj/KwflZm0+HFU8Bm7rNuz1mTUUPQdOJq13GoJlr
HtnWZ4buA8VlocFGELerImdlqynyDY0OSL6dBCniterfDhtj4Sc/dXgZsiGO
6/hVAdcIPbi7ri9bOcY4Hfc7HbXYEGHH1Sg3apQJbNVMfqRho1Zz03i/4Cnj
YlD0bU/RS6l2zj3vgu81jNax5EmP9rkU5bM3V3UqGcz0KLwVNiLFMBy/nX+D
KXXd+8UtsyEpi/9dTRJvC5OnbmOd/eWRPvf1WdYpl6JafoHX3SstRVVtRFWv
lHXde5I5KKQSRcKhrVMHpCzOSEJfZxbDGhi8F6N8Ii01ejY+3KtgtCse1vDy
R6Scgyu2iD/qY1K25H6mdnohdU8dsxqw/Ztp7yvPaxS8lAZeLF23yfUpozPL
KQt5wca8sgrxx16jTNXRA/UsyhBnWmlPjE8eY0TFAdcc3I3wPLIfV99ngejk
cv8/Y4wxxSSgvCFtEpROVU1vzjBF39UO1nyWEaQImkKutpghi8evTW8wBpGB
tk6htsCE5Nm2gvVTQFtfmZuexMHzxNVcb405uC9/P8X5G0tUPmAv9xRyIM4z
lrzxgxVCzQei/WgJxtfTj2y/Zo09S6uqkldbQ8+ZfcdCNDYYKJNknPndBrad
XMg9NzoNKaeVK2SLp0NCUgtxgbLFgJR5upEWW0g53a6Ld7NDJ/mOALtge0gs
bKw18bLH2mvrYoq6CBiuzarjCAhsa4sLnZZDgVP2jgO8bQR2fKR4mlZAQXeQ
bEv1dgLdBvctfXaMgtsN82K9Y/X/pGDVj52VFPizmmXiNAKHNO47y5ECF5PV
gQ8rCTwlyNrEG6agUM6tW1ZDoKKiZGfncwqyhRnvHj5NYIJnhkswm4bsD66k
zz5P4O5VXxb7WdDg+9NRfqSMQE7w4z3gQkO5/0HL7gECowsOTgkIp6H7uOnM
+VoCR5MlUoWAhiXHE/0ShwkcyVnvEBpFw22u79/UGIEe6upeYTwNCW9dFkda
kBitctx3OI+G/m2tfIkViclPy7I4X+t7RzFjK9uWxMTxAf/ib/S+zEv13zmQ
GBeZequ2mobMIUfJQ3cS61z3mD5qpEHokL/HcymJrpL+z8UtNHgNlwbm6Huu
hBN/zkSh70FxS+QifQ82LztJz79HQ96M8bxUHxJrJ3+14fJ9GhpDxu/c5JKo
a/xwVZBGf9+xTh+XtSQq83Ud/UM0DEcVtXy2bqKXvVz5I38IJzjUy6zPKn6C
M0O4TUrOxNx4PUde5/8CT0jwyw==
     "]]}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{
    FormBox["\"L\"", TraditionalForm], 
    FormBox["\"R\"", TraditionalForm]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}]],
  PlotRange->{{-15, 15}, {-15, 15}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.570501745354748*^9, 3.570501767503541*^9}, 
   3.570501804503313*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Qlog", "[", 
       RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"Qlog", "[", 
       RowBox[{"\[Theta]NN", " ", ",", "0", ",", "2"}], "]"}]}], "}"}], "}"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", 
     RowBox[{"40", " ", "\[Degree]"}], ",", 
     RowBox[{"140", " ", "\[Degree]"}]}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<QB\>\"", ",", "\"\<QF\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570501598427425*^9, 3.5705016189145*^9}, {
  3.570501664718939*^9, 3.5705016978035297`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
x974L99+ilg=
     "]]}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{
    FormBox["\"QB\"", TraditionalForm], 
    FormBox["\"QF\"", TraditionalForm]},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}]],
  PlotRange->{{-0.3553993141600109, 0.3400292865177581}, {-0.5686389026560176,
    0.544046858428413}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.570501614684945*^9, 3.5705016195755167`*^9}, {
  3.570501693346216*^9, 3.570501698960527*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Walk Effect", "Section",
 CellChangeTimes->{{3.570432045484124*^9, 3.5704320527136307`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"Q0_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Q0", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["t", "3"], ")"}], "2"]}], "]"}]}], ")"}], " "}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", "4"}], "]"}]}], ")"}], 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"set", " ", 
        RowBox[{"g", "[", "6", "]"}]}], "\[Equal]", "1"}], " ", 
      "*)"}]}]]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"1", ",", "t"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "7"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", "All", "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5704830245462*^9, 3.570483231171941*^9}, {
  3.57048326185075*^9, 3.570483477222756*^9}, {3.570483580550577*^9, 
  3.570483628061777*^9}, {3.570483731462984*^9, 3.5704837512648983`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
3lfmuB9UOS+srpLRvOVhwTO4/w/0VFcq
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, {0., 1.0142565156469887`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.570483085823944*^9, 3.570483231585656*^9}, {
  3.57048326288466*^9, 3.57048329510041*^9}, {3.570483328318034*^9, 
  3.570483477838435*^9}, {3.570483599314536*^9, 3.570483628623662*^9}, {
  3.5704837377052727`*^9, 3.570483751919649*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gInv", "[", 
   RowBox[{"Qth_", ",", "Q0_"}], "]"}], ":=", 
  RowBox[{"3", 
   SqrtBox[
    RowBox[{"-", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", 
       RowBox[{"Qth", " ", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"-", "4"}], "]"}]}], ")"}], "Q0"]}]}], 
      "]"}]}]]}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"gInv", "[", 
      RowBox[{"Qth", ",", "Q0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Q0", ",", "5", ",", "40"}], "}"}], "\[IndentingNewLine]", ",", 
     
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Qth", ",", "40"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "6"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"\"\<Qth=\>\"", "<>", 
       RowBox[{"ToString", "[", "Qth", "]"}]}]}], "\[IndentingNewLine]", ",", 
     
     RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<Q0\>\"", ",", "\"\<Trigger Time\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"Qth", ",", "5", ",", "40"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5704835078501883`*^9, 3.570483541942647*^9}, {
  3.570483668741764*^9, 3.570483713336794*^9}, {3.570483755208041*^9, 
  3.5704837555513268`*^9}, {3.570483823816415*^9, 3.570483977952283*^9}, {
  3.570484016129335*^9, 3.57048403523022*^9}, {3.5704840967905893`*^9, 
  3.570484160562058*^9}, {3.570484552767705*^9, 3.5704846526889677`*^9}, {
  3.570511050826757*^9, 3.570511054307*^9}, {3.570511473292963*^9, 
  3.570511495952948*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Qth$$ = 5., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`Qth$$], 5, 40}}, Typeset`size$$ = {
    360., {124., 128.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`Qth$2296$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`Qth$$ = 5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`Qth$$, $CellContext`Qth$2296$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`gInv[$CellContext`Qth$$, $CellContext`Q0], \
{$CellContext`Q0, 5, 40}, PlotRange -> {{$CellContext`Qth$$, 40}, {0, 6}}, 
        PlotLabel -> StringJoin["Qth=", 
          ToString[$CellContext`Qth$$]], Frame -> True, 
        FrameLabel -> {"Q0", "Trigger Time"}], 
      "Specifications" :> {{$CellContext`Qth$$, 5, 40}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403., {166., 172.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.570483536725915*^9, 3.570483542581106*^9}, 
   3.570483632686142*^9, 3.570483720179305*^9, {3.570483826380055*^9, 
   3.570483837386881*^9}, {3.570483895152857*^9, 3.570483904484831*^9}, {
   3.57048395093363*^9, 3.570483978709455*^9}, 3.570484035932383*^9, {
   3.570484100384804*^9, 3.570484123072792*^9}, 3.570484572710849*^9, {
   3.570484615105041*^9, 3.570484653379773*^9}, 3.570511059486691*^9, {
   3.570511476887229*^9, 3.570511496848925*^9}, 3.57061551254208*^9, 
   3.570773978296356*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"WalkB", "[", 
   RowBox[{"\[Theta]NN_", ",", "\[Phi]NN_", ",", "id_", ",", "Qth_"}], "]"}], 
  ":=", 
  RowBox[{"gInv", "[", 
   RowBox[{"Qth", ",", 
    RowBox[{"QB", "[", 
     RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WalkF", "[", 
   RowBox[{"\[Theta]NN_", ",", "\[Phi]NN_", ",", "id_", ",", "Qth_"}], "]"}], 
  ":=", 
  RowBox[{"gInv", "[", 
   RowBox[{"Qth", ",", 
    RowBox[{"QF", "[", 
     RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TB", "[", 
   RowBox[{"\[Theta]NN_", ",", "\[Phi]NN_", ",", "id_", ",", "Qth_"}], "]"}], 
  ":=", 
  RowBox[{
   RowBox[{"\[CapitalGamma]B", "[", 
    RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], "+", 
   RowBox[{"gInv", "[", 
    RowBox[{"Qth", ",", 
     RowBox[{"QB", "[", 
      RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TF", "[", 
   RowBox[{"\[Theta]NN_", ",", "\[Phi]NN_", ",", "id_", ",", "Qth_"}], "]"}], 
  ":=", 
  RowBox[{
   RowBox[{"\[CapitalGamma]F", "[", 
    RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}], "+", 
   RowBox[{"gInv", "[", 
    RowBox[{"Qth", ",", 
     RowBox[{"QF", "[", 
      RowBox[{"\[Theta]NN", ",", "\[Phi]NN", ",", "id"}], "]"}]}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.5704322353898487`*^9, 3.570432356383456*^9}, {
  3.570511115923337*^9, 3.570511206433814*^9}, {3.570511619077734*^9, 
  3.570511635629635*^9}, {3.5706156529571114`*^9, 3.5706156978056765`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"TB", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1", ",",
             "Qth"}], "]"}], "-", 
          RowBox[{"TF", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1", ",",
             "Qth"}], "]"}]}], ",", 
         RowBox[{"Qlog", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"TB", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2", ",",
             "Qth"}], "]"}], "-", 
          RowBox[{"TF", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2", ",",
             "Qth"}], "]"}]}], ",", 
         RowBox[{"Qlog", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
          "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]NN", " ", ",", " ", "40", " ", ",", " ", "140"}], 
      "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"{", 
    RowBox[{"Qth", ",", "0.01", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"att", ",", "2000", ",", " ", "5000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570779750310692*^9, 3.570779819191297*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`att$$ = 2000., $CellContext`Qth$$ = 3.695, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`Qth$$], 0.01, 4}, {
      Hold[$CellContext`att$$], 2000, 5000}}, Typeset`size$$ = {
    360., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`Qth$7373$$ = 
    0, $CellContext`att$7374$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`att$$ = 2000, $CellContext`Qth$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`Qth$$, $CellContext`Qth$7373$$, 0], 
        Hold[$CellContext`att$$, $CellContext`att$7374$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{{$CellContext`TB[$CellContext`\[Theta]NN Degree, 0, 
            1, $CellContext`Qth$$] - $CellContext`TF[$CellContext`\[Theta]NN 
           Degree, 0, 1, $CellContext`Qth$$], 
          $CellContext`Qlog[$CellContext`\[Theta]NN Degree, 0, 
           1]}, {$CellContext`TB[$CellContext`\[Theta]NN Degree, 0, 
            2, $CellContext`Qth$$] - $CellContext`TF[$CellContext`\[Theta]NN 
           Degree, 0, 2, $CellContext`Qth$$], 
          $CellContext`Qlog[$CellContext`\[Theta]NN Degree, 0, 
           2]}}, {$CellContext`\[Theta]NN, 40, 140}, PlotRange -> All, 
        AspectRatio -> 1], 
      "Specifications" :> {{$CellContext`Qth$$, 0.01, 4}, {$CellContext`att$$,
          2000, 5000}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{403., {234., 240.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5707797826601973`*^9, 3.570779819852613*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "[", 
           RowBox[{"P", "[", 
            RowBox[{
             RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
            "]"}], "]"}], 
          FractionBox["180", "\[Pi]"]}], ",", 
         RowBox[{
          RowBox[{"TB", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1", ",",
             "Qth"}], "]"}], "-", 
          RowBox[{"TF", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1", ",",
             "Qth"}], "]"}], "+", 
          RowBox[{
           FractionBox["att", 
            RowBox[{"\[Beta]plastic", " ", "c"}]], 
           RowBox[{"Qlog", "[", 
            RowBox[{
             RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
            "]"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "[", 
           RowBox[{"P", "[", 
            RowBox[{
             RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
            "]"}], "]"}], 
          FractionBox["180", "\[Pi]"]}], ",", 
         RowBox[{
          RowBox[{"TB", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2", ",",
             "Qth"}], "]"}], "-", 
          RowBox[{"TF", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2", ",",
             "Qth"}], "]"}], "+", 
          RowBox[{
           FractionBox["att", 
            RowBox[{"\[Beta]plastic", " ", "c"}]], 
           RowBox[{"Qlog", "[", 
            RowBox[{
             RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
            "]"}]}]}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]NN", " ", ",", " ", "40", " ", ",", " ", "140"}], 
      "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"20", ",", "70"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"{", 
    RowBox[{"Qth", ",", "0.01", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"att", ",", "2000", ",", " ", "5000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5707760986903057`*^9, 3.570776123819984*^9}, {
  3.570776172319902*^9, 3.570776252397472*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`att$$ = 2500., $CellContext`Qth$$ = 3.13, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`Qth$$], 0.01, 4}, {
      Hold[$CellContext`att$$], 2000, 5000}}, Typeset`size$$ = {
    360., {171., 176.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`Qth$6585$$ = 
    0, $CellContext`att$6586$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`att$$ = 2000, $CellContext`Qth$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`Qth$$, $CellContext`Qth$6585$$, 0], 
        Hold[$CellContext`att$$, $CellContext`att$6586$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{{$CellContext`\[Theta][
            $CellContext`P[$CellContext`\[Theta]NN Degree, 0, 1]] (180/
           Pi), $CellContext`TB[$CellContext`\[Theta]NN Degree, 0, 
            1, $CellContext`Qth$$] - $CellContext`TF[$CellContext`\[Theta]NN 
           Degree, 0, 
           1, $CellContext`Qth$$] + \
($CellContext`att$$/($CellContext`\[Beta]plastic $CellContext`c)) \
$CellContext`Qlog[$CellContext`\[Theta]NN Degree, 0, 
             1]}, {$CellContext`\[Theta][
            $CellContext`P[$CellContext`\[Theta]NN Degree, 0, 2]] (180/
           Pi), $CellContext`TB[$CellContext`\[Theta]NN Degree, 0, 
            2, $CellContext`Qth$$] - $CellContext`TF[$CellContext`\[Theta]NN 
           Degree, 0, 
           2, $CellContext`Qth$$] + \
($CellContext`att$$/($CellContext`\[Beta]plastic $CellContext`c)) \
$CellContext`Qlog[$CellContext`\[Theta]NN Degree, 0, 
             2]}}, {$CellContext`\[Theta]NN, 40, 140}, 
        PlotRange -> {{20, 70}, {-10, 10}}, AspectRatio -> 1], 
      "Specifications" :> {{$CellContext`Qth$$, 0.01, 4}, {$CellContext`att$$,
          2000, 5000}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{403., {227., 233.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.570776211746028*^9, 3.570776253176858*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "[", 
           RowBox[{"P", "[", 
            RowBox[{
             RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
            "]"}], "]"}], 
          FractionBox["180", "\[Pi]"]}], ",", 
         RowBox[{
          RowBox[{"WalkB", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1", ",",
             "Qth"}], "]"}], "-", 
          RowBox[{"WalkF", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1", ",",
             "Qth"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "[", 
           RowBox[{"P", "[", 
            RowBox[{
             RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
            "]"}], "]"}], 
          FractionBox["180", "\[Pi]"]}], ",", 
         RowBox[{
          RowBox[{"WalkB", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2", ",",
             "Qth"}], "]"}], "-", 
          RowBox[{"WalkF", "[", 
           RowBox[{
            RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2", ",",
             "Qth"}], "]"}]}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]NN", " ", ",", " ", "40", " ", ",", " ", "140"}], 
      "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"20", ",", "70"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"{", 
    RowBox[{"Qth", ",", "0.01", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570773988211341*^9, 3.570774032229525*^9}, {
  3.5707740684728107`*^9, 3.570774225872962*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Qth$$ = 0.8300000000000001, Typeset`show$$ =
     True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`Qth$$], 0.01, 4}}, Typeset`size$$ = {
    360., {170., 174.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`Qth$2529$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`Qth$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`Qth$$, $CellContext`Qth$2529$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{{$CellContext`\[Theta][
            $CellContext`P[$CellContext`\[Theta]NN Degree, 0, 1]] (180/
           Pi), $CellContext`WalkB[$CellContext`\[Theta]NN Degree, 0, 
            1, $CellContext`Qth$$] - \
$CellContext`WalkF[$CellContext`\[Theta]NN Degree, 0, 
           1, $CellContext`Qth$$]}, {$CellContext`\[Theta][
            $CellContext`P[$CellContext`\[Theta]NN Degree, 0, 2]] (180/
           Pi), $CellContext`WalkB[$CellContext`\[Theta]NN Degree, 0, 
            2, $CellContext`Qth$$] - \
$CellContext`WalkF[$CellContext`\[Theta]NN Degree, 0, 
           2, $CellContext`Qth$$]}}, {$CellContext`\[Theta]NN, 40, 140}, 
        PlotRange -> {{20, 70}, {-1, 1}}, AspectRatio -> 1], 
      "Specifications" :> {{$CellContext`Qth$$, 0.01, 4}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403., {212., 218.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.570774168737002*^9, 3.570774193547124*^9}, 
   3.5707742263822327`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ToF", "[", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
          "]"}], ",", "1"}], "]"}], ",", 
       RowBox[{"Qsum", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ToF", "[", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
          "]"}], ",", "2"}], "]"}], ",", 
       RowBox[{"Qsum", "[", 
        RowBox[{
         RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
        "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570615416886609*^9, 3.5706154243630366`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwV13k8VN8bB3DaJK0zc8dS1nuFbJM9xEclUkkpCgkRv0pFREqLJVqJZMmS
bIUsyb6LSqQsRUVKX9oXKiTyO/6a13vu3DvPec5zznmutNPBLS7T+Pj47Pn5
+KY+a2+LbZF5zkDQXNC70ZyFIbnyns3PGCQ+UKMXW7DgcCfw9ukOBqUCucP7
N7MwPXCPaF8bg6KxxnmLtrIg/GaPdPoTBnHeeRM2O1ig2iY/6jYyCJru/fX3
bhb+O/pxcXQFg70p3lamR1noaYDYk3IG+4R23Ev0Y6GXFWUrQLzraq/V72Ms
3PZdmOFbyuCTIN/QjRMsBA9sc7AvYnBh5t0/k4EsfDQ23qqVx+D7fM722kss
HLrwabpIKoMtP/7FOqay8HJGqbppCgO3ozflX6axIM4byfO9wYD92HhgSwYL
lw2jI19eZ5AgdPnbmkwWCr5qjyYnMLA2e62hmMeC+sltER3xDKrD4/TT8lno
jL9wVICYb1rhYckCFrjxbbd1rzEIfa/7MvYuC+u6lqgeiGNgcm7FIU4RC2F3
HCaSYxmcVqvSDCtmoftypMjzGIbk9fmyOaUsTPZlnppDXLf/5z+dMhb8ReI1
DaMZBF7RyfhIXJdpp+11lUE8O8crrpyF78J9wbeiyO8XrfJcX8FCaswiQeoK
g49yPyduV7JQOa83/Xs4A35O2XbvGhbGj8pqF5xj8CP2q+y8+2S+VKz4vp5l
cMTj9lgNsXJOOiVH7Ou+hs/7AQs7ok8w8SEMlqcvTex5yELUx++tZ4MYzPwx
Y2l+EwvDfGK7D59g0Hz85CHHVhbmXK8SPenJgKmVXPO+mwWziLk3DBwZRDzf
vNH4Owu6mnN4+0xJvHJxeQWCbJyUevxzJs3AbPBQ6BEdNnb8uvNnnwyDTL2q
VyYr2MgvLzRuk2awUuj9HlFdNjwyh3OTpBg8fcInW6nHRkl5evNKCQY3upuN
BAzZODLtmVSIKIO3nyME043ZeCS+YJb5QjLfR8Z58y3ZePY62SHrH42U1QX/
nT/Axrs1czsVictXjmTaHWRj7ymFs9kTNMZ1+1OVD7EhP/i/6znjNLRbvqo/
9WAjt/l0XOEYjeAXI9XC3myk719U2jJMY9RdKS7vGBtKk8GnlL/T2BNw/pbg
WTZ6k4vN4t/QeNfi9tQ2lY2ZioXiMsS7Zxv7bkhjo68iQvNmLw2B0S0OK9PZ
yKt7qV74moZS2KpByZtsNLaK7G3rppF4WE7kQxYbNdN4paIvaNj9bQwJKmDD
r76j9lUrDa+daju/1bHxAZsuKNXT0Jx0cTzbx0bKE1f7hns0RpYnvg1+x4bs
jh4Pe+KMwciUgP9IvP6tdpfraEg4Dn85PsDGxU7/VWM15P6k9dFen9hYOzy0
rquSRt+dfutDQ2xk659TayimoW74Yjh2Ggf7E7sU9hBHPZd5nDidA6lvS5wE
iBMCpN+nzODA8/yxKLMiGv8q/AdyZnHwbqGhQMddGsceHeQ8nMNBw55dnJ/5
NEw11PUE2By81n5d65hNo80mkCmlORh9rHdzIXGTXo3nXYYDkR/t96uzaEj1
pE7kynJw6ltWtgRxiWBcY4YcBy8W14v13qIhOC9NL06RA7WEjyf2ZtDQud4U
eU6dg3UnzW2ybtAw9pD1iF3Nwd6bTmscifm3TrjHr+HActBnjzBxbJjsrSRj
DvYEJm0JSqYx60MpK92EjK+86JHDdRoHlA5WFKwn45HO02ESaaz8d6P9pSUH
dzUa+J/F0oi8HxS83ZmDa39vr7pAfHVT4ZCvCweqWXoNq4kTzU5mxe4h+blm
GFYQQ2PwtCZftxsHVFi11tVoGmMbgnWc3Tk4JGzX5hpFg7oSMRJwhAMBqYdq
+pdpKOTrmoyFcqAx80ba33AaG2OCNjPnSP5iR3aUE/vNksw0P8+BUcOiED3i
EKeEtakXOeCUDQwZhJH6tpZXtYzgwD7JeOGWizRyQhtaq69xkHnP1O7WWRrX
vDePduRw0K/SVupFXGA95P8rlwNJm+0WID7TtNKMk89Bts0O+a5QGsVu4sVb
Czh4lkgHzSGWmj/5rquYg5lnwz8dPUNjg8TmuG81HMhmq3gEBtJw9+r5s6md
A2X+h1+3EX/ssfP17eDAOMA6RZ74eFa7YfIzUh9zd5S2BJD1kzt462cnB7fY
78PFieefG/lyrZvM/0/Dbw2nyHXXwwZj/RwENlC7jU7QaBx/f/nbKAcqnier
FxNbBb03Fxvj4Ij67S3D/jSc9Yy3rv1L8utnJZ5NfFfVSSdpgoMDBz+vFiN+
tYvttnUahV6HwOd8x2ncserzahaiwDNxSnp9jKyXHNGa8bkU6gvnJlUQi3xo
2qo8n8K9Q/dXHSXOOPDBJmwhhZMfehb/9qOxiDP8yoqicPzPMmrkKI2sEqHa
nxIUCjPmru8ijjKxzJaXomC5ob64lDhZXqNvpzSFK8dLNP2JFYsEVRppCv/T
f3RvFjFb8a9JijyFSun1CowvDZUvhVdc1Cg8+S0hFXqE1JNR8wJ6LYXGRwZK
B4hj54gFHzehENKz4OhWYpPwd1ufm1KoCWjqkCZ+cmLtjPPrKQjQbVeqvcn+
NdmROmpBwUbWW0eAuPatE3+/LbleaW8x6EXmV3ODwpqdFFrCWbdeEYuUM7dT
7CkUVPUuySf+7sXXuNuRwrVuzN9FfCL8m+WHPRTUlPNFHxwm8VYLNk3zpJDc
xjYsJA5+31rhepiC8rudaSnE79b8E3rsRcGHydM4TVy04G1djA+FQ0rB9obE
V9fsjNLwp1C8yPa8KnHB3mde8ScoxF+U/yNJXPJw/50ZpygwuXei+YllGqxM
nwdQSN1U/eaBJ9nvlTLe+odSZJ+6SJURC/jcvPvhLIUFZ5zPZxMvMw0asDxP
oeGzpm4E8Ro9BVfFSxRiEtJSHYhFG0pev46k8Db5z9utxPcSJbI2RJF4qt0c
1hHbRIh1ll2lYFiZLKVObJGiZh4TSyGxrzZHkDg7xavcOolCzuPqWD7iByJn
nudeJ/FE+VeOeJD/O+NpPPsGBfku5A4Q11yXlyxLpTDgZub/mtjOT+QcO51C
1bQlQc+J09NU17lnULiZLKn/gHjAQqpeOpPM7/NtX6uJRadJnTqeRWHcy66z
hNjeNTK8M5tC2aF327KIE4qkcy/lUui+y5mIIN5l//M/vkIKu/fP8b5IvDEl
Y619EYUfH97KhhK3H3WbKC+m0LPEUO0EsYKl3V7fMgqaWxovHiW+H1Eo1VlO
4aKpgYw3cXiPq5JWJQXZmMHf+4krWMya39UUPM5qaP6PeO7KrRbbain079t3
24XYdUjhTmEdhczIGHsn4hTLkv9x6yms2l5luouYL4Dl49NAwYnTu8+O+Hfi
+pdd90l9Lp14sIN4e/ORSN2HFHy/ie20JjbZrX0lrpHC2jZdxW3E/EcmmsYe
UVi+YpeaJXGt15sdts0UHC+d89xMvNljfGXFYwqKqP68iTj7lLuv+BNSvzWT
CebErPJNgiefUjgQaH52I7GIfvWPN60UFk7Lub2B2F+mS2V1Oxl/sZTQlDXC
i+6ldZD1LnMreT3xwcwjubOfU7jUsM5jyqGxGkP7OikclZ3pN+V5Z+deeNJF
Qaypp3zKaRli/uovKViveq419Txa7lhD9CsK+8UGP035kL6Zy3g3mY9+XtdU
PDGSqXaOr8nzdGP+TcVbKpSWdb+Xwo58BXsL4nGD/21RekvyPfB+eGq8qWNz
N0f0UWj1e/ZwKh/vA7IzRt9RkFj4u30qX0skna129VOQ2bhOZDtxoKjFzvsD
ZPyvOqJsiB2qL1Qof6DwyzVuw07iLw5aXlEfyfowfO2ymzhvwOiryxcKeb8d
H+4h5vh157R8JfGdWOa8d6reXLc1an+nsH5alIkncdtjS0GhIZLvAP2wI8Sy
81iq3j8pfHitvvAYcaWaVE7vLwrUTvGqIGKqO6GkcITCEsNBu3PEUtVFLYZ/
KAhXKxiGEwdkmJo/GqNwZ0nn4/ip+gt1O/dmguyfJpZ+KcRKQoYm+yfJfGSt
2ps5tV7SJQ+M8nEx/Oksp5R4m2P42KIZXDTrfGypIS6W/59D0kwuBlIeNT+c
Wn9WPTxlAS40PspEviCebqfAMpvDxZ1nkWb/iCcF178MXcjF9MgD0rPJejf5
9CdGlMWFFeeTHos40Mf1XiabC/v57XpyxCz/hXYtXC4iI1+5Tu0vRUox18XE
uVhct96rnHidn+/VBwpclHqxQhqn7s9YLrNLkYuku2U9ncSSoUOLR5S4+JJf
Y/Wb+OZCCRt5Hrn/tKivOtkPWxMkZ4ZrcVH1tP5YBXF6+w9Nr9VcPFmc0dJC
7G1vW8Ay5kJ9f57LW2LNKNHk/LVczJQycxAg+7maI9PyYx0XKUMioVbEd3yO
eXpZcCHXopTOT84LtfM+My7v5EKidW27MHGsc99blV1ceM6xXqVC/MPigfJj
By7czfYP2BLnWp1fJOTMxaTUp7VlxMHKT+de2MvFjPZV7oHkfHp54+ePGz5c
CN5+esiEnHdiUHKRjeAizaGt34X4Nbd+W2skFzmyzglBxN11OqX+UVzkbtzQ
UUcsbW78ojOGi4yRKsdV5Pys21Z/+nISF46V5ZMbyfms7LE0Uuw2F+tneblH
k/P+2a9ZOUEPuZh1pj+xnPiiyElX6UdcHGa1znlDXHA9L7SqiQu9CvkIBdIv
OK6+M22shQunmXa7qqecYNHl/YzUR/Tnkd+k/wg34aNP93HBylZbHXaaRv9n
+38D41y8kjWxORxC49LXp/OG1YSx5PqalExijRmZTW0awog6E6rWRyzuNSiU
pyWMgeJJegvpr+bV2nH26woj55aHpSbpx+KdEk0/GQmDSUv9NPs8ef6MSPtJ
C2HYm9kr91+iYblxrsHFg8KYf4Obc5j0l4LltYVaOcKwzoruKyZOTQrfMj9P
GAF8E9vGiZtzBt0G8oVhVhb2J5j0p3fUtafHFApD7MwVjXjSv1qf2vuTr1IY
i2bInOq4RvqbdRu+f2wShrbkzkQv0h9HOy6oEP0kjFuCjy56ZdIwSK3476+c
CF74XW5PIO8fMnOuJe4vFEH5sJyi2Fsy3h5m8oWZKLpte0yF+BnM0E0+c+aN
KKSMt18vkmcwe8L1s9lFMRRdatLP38KAFSKy/pjuYqS/2CxXcIqBs6ewhM/g
YoT8FTm5pYRBe2LZIc2HS+B+TzDu7SCDkffFcvJJ4qgxmjRs0pLFDn6LiqRo
CegULejyPS0L7XVBizemSOIpv4bN08ey6NigqhBgIwWW+GO4yS9FY99WxcMT
Uth8de/SjqClkCqWHTVKkMa8D5uuWr9fCsfMNz/umckgu2SeWpOtHO5+WWXz
ewnpA4dKjjJtcnBXKqlhRmlUhbZoDu6Uh4+L2p75M2XhH0cNGn2Rx7ZYza9S
wkvx3nrPgxeBCqQPcOkNXCkH+vB8TzHtZThYstAmMlMefxeZ2xd/XYabiS8y
Jsn3gqLnuOL3FTH/n9/YZmUltARkv3HLVcKo7aPJf74qsPyJ5Z0JymiUMArO
PsfD0NrQM12lKvjJJ3nY0FkNs4N+uKtXqeB45ljd6X1qGJ+XPBxWpwLr7ntn
mzzV8OvLz28bm1SQX3Yj7MhpNcj8WXa5p1sFSw3Ux5YnqWF08tn6DXyqkD8x
K/Jotxr+PClOq52hinNvzdUt/yPPGzl5W0dQFT96uk7rfFFDy73xRkWWKv7L
zuLJjath/z3rjUsZVVxZrPz32hJ1KDg3abibqsJ6+caWxQ7q4Ovqb5nYoIqC
Z+sqWtzUYfRRkAnfrAp2TI51lqc6OsIfTSuzUcUpUYdbhiHqqAxpuSXjropg
fc1gTp46PjeW2JlGqJL3h7AIJX4NxIVc2/u5RxW/7DJq36Zr4JTywl/xfaoY
DO3UcsvXQP2Cpass3qtiw2Uvw3/lGogUSFOt+KGK182zJ21bNTCzd97dDn4e
Ple+qh8a14DRB47gVw4PG2V38/G2a6Ly1cjSrcI8SCg8kRBw1oSBj6JKhSgP
3x10Hf4c1IT3Y/OxSxI8/NLyWKIWqokLieJXDeV5+FT1ed7sMk0EOF8xeqzH
wyIhLacCWS18T3q6bLUBD108PrsSdS1sfn9zRhl4uEgvtuow0kKCpNCFTGMe
Dm89eGi7vRYuWBYNX93Eg0Ht+V91MVqIXpuflrCbh2srNNwzOdpw9jJrldnD
Q1XYmy9DjDbYTmK/b7rx4Dz7geMBTW2EuFrIlbjzYFpnOzrDWhsuA/Wr+3x4
mF58Uu5NvDY+1jg3uVzgQVsXwfUaOugNqOlXC+NBf637+VozHVi3ZynzR/Cg
GOLOL+aog/bCh6bJ0TwsCLmuHnhJB0V+tlXfb/DAW/FE3OCbDlysD1nfT+Ph
+llzDyeBFbjqbUEn3uRBfKHSDyHpFWi+KGq1OYeHp04dfr+3rcBTn+O690t5
iEzzq9zdsAKMYdTx9AoexFrk7i96twIFNh3DIdU8RE93m3aFXxcJccevmjfw
EOez87eJkS7EZkdGfXrKg4t0aOuXDl0UFI1mdbTzcCNNxXHdmC5MuXx8Nc95
aI5aUvZCUg+ajuW747p56H6ccSTOXQ/tVh1eZ3t5qJwUF2m+qgdF9o77R/t4
6LTO+Kdep4fcfRPb9/XzYJuj4znzpx5mVXor23/gAazJqiY5fQx9PrJmy2ce
ZOrnznlnqw8vl6JEk2880M2ndiRc1sdeyU/6BoM8zM2KC/Pp1gcT+1BS6xcP
aisntscyKxH/arap6gjJz1KPtdHOK+Hh51SkMMaDnLh32rFbKzEaeXGf7ATJ
f7+yYrasAb61rnKT4VuOjCIm64OvAaodYof6py3HkuLGdXwLDPF/i1xFlw==

      "]], LineBox[CompressedData["
1:eJwdzH0s1HEAx3H6g5SLUZ4paXaS5ft14vdz7vfBljsxq6Z5qMjzQ8naPAxL
R5Gnmd2mWGrhdjQ783SeJ/IwD0sntqROGSs9WcZUusn6473Xf2/76JsX4vbp
6Ojw9/rv2np3tB4BeJ02uT0cbnlrTOwNCLwtv3TxWziENGgFDoYEzpBkvqvn
IBoIqHM0Ith5tLVc+ZCDvlQa4WxCEDnvsiMu55Df/bjD04Jg20dI+zM4cF93
Q3ysCTxkFeezUjjM+uPsOTuCij+JdmeiOLS5h5vFnCCQaxRDKgmH6qXN4jpX
At9Bvvu0DYfKqd7EaxKCxQClnviFCPxDtt8kgQSfJ19aabpFiDFS1LoFE7RV
BDWmK0VQGg6UHwghMNA97dpULcL4h/n2sSiCuvrdX/ZpIhy/k9iYlUXQUtBa
E24rQmxHknq8keBqZnPOWpY3Iq0vqxgexcwbbeF9gRA50jnH18YUhrthzRed
hHBOSfFPPUwRVhPVdcxOiMJk99oma4rR2ey85/pCxIy49ghOUhxksWS26AXP
zXR5rT/FytQr86P5XshY6D0yXEBx728/nqhZiGd7n8mKKDwUTrWKMRYrkJsm
lFIEbTz41NrHYsN3M85URjEvlvpPy1mMVM645NdRBBf1sRbZLARWxaE9QxRV
JYF8ngOL5gWP/sZRCoFEUSCw2PtpBPo1ExSx723VV3gsfDfMQ/PVFJ45MX6q
bQZyu/b9yR8phE1pZbenGUxGaCcSVynK707mdQ4xOLWuzE1ao7D8Lk74oWIg
m0zqS/tJ0bKsMo1/yuDSoF5A5hZFoTF/oaGKgVs8ncn7TSHmDclWSxnMpTKB
JVoK67JhP76UwVtl0nCVrhtsBDfWrmcw+AdUShLd
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAA2q5pwpYBM0DOWl4rM+M2QCyWxXr4
/TJAJZFZ2NHrNkDkcKDGW/oyQO17be1x9DZAe1saFSfzMkDdjDlPtgU3QHxl
O3PQ5DJAnvXX7E8oN0CWK3NnbcgyQNOGwmvGbTdAzFK97smQMkBuoJJTv/k3
QEwi06XdJTJAiLFLj9cVOUA9bnJnVyIyQNEVYRuQHzlA0Zh5w9IeMkA4cT5C
Sik5QI3B1kbOFzJAVC91X8M8OUDsUptf2AkyQMW6zdHIYzlAegtXAjjuMUDi
9ORlILI5QBq4CX0euDFA1gSixwBQOkDtN4G1ybQxQLw2jEHsWTpATOmPanax
MUCYQE5P2WM6QO/96UbUqjFA1H95Jbh3OkCB7vmvoZ0xQAU0SLaInzpA8NQV
gYKDMUBkgYU4de86QEMIGi9WUDFAOCOnM3qQO0CfEl++ZE0xQOJkYhTsmTtA
8xn6gXRKMUBdDw1PX6M7QPg6lqOXRDFAxGN20Um2O0BZ7T0+7DgxQL37fwUv
3DtAi7AGXgQ2MUD5op2wq+U7QOnc+awdMzFA6ZA1tCnvO0BzfdLVUy0xQKAx
GcQpAjxA9uCLQc4hMUBHqpABOig8QCCy48jvHjFA29hha8ExPEA05Fd6Ehwx
QM+DNixKOzxAIP8WWVsWMUApbC6yX048QM7PI4WBEzFA3qfzduxXPEBS0NDY
qBAxQEdcAJJ6YTxAAhKU9PoKMUBH4zPKmnQ8QLLFb7slCDFAaH/85ix+PECu
VPOOiwcxQIXfRHA2gDxAduT8nw==
      "]], LineBox[CompressedData["
1:eJwV13k81F8XB3BEqVQz8x1RiZivRBlD9q0PiSRZWqgUhfZUkgghZAnZZclW
lkjRZm8hIaUQUREpKirikUo/z/WX1/tlmHPPOffec6X3HrN2FuDj4/Ph5+Ob
/pnNut5bxa+M+E2pjHfPdRAzP37o+hQPUncKpSxsdHC+9JTRu0ke0mIXSQ0w
dKBmQz0Q+cOD1+HBhPEcbVifbt2p/4uH8qJbfQ+PaGMTJbH4xBgPdW7t/NfU
tWETu/n31REevqy3luz9owXvZz0Tnd95YLbckbpSooVwvpXijCEeHqntdIgO
1cLTrqRtJl94uOOnWmi0SwtuZ+Nv+/bzkCVq/+Q/nhYMD5znlvXxYHDfc7RB
UAum4W1PRnt4SKZX75nzXhOHjIe8lLp5uBd1oXFNhSakd6maH3nLw+q7qrJz
kjQxwSeund/Bw/zy5czZHpqorLZzkm/lYVzyZ6q0pibavqV9Va3nYcHHZyUB
JRrwWBcQcqaWhyuh6uc2pGjgxnFHvUfVPFw7/y2101cDomIvvlhV8XDLN75U
wUwDxe3H9fxu8XAxaNI7/Is6PoZR1ozLPHDjjLO26Khj+wsLd7dkHkLkmi2v
y6nDibM4rTORh4UGec92stXxQGDDeE4MiW8T/+Wk72q4dORRuXkID5MTf/mL
s9XQNxgs03iSh9qYj75fpdQQPZJiuOYE8Y8VsWoMNaSsVth9x4WHrtc5u+/y
qcHepjIo8yAP+k+khMw/qCJ/0Z+QYHsemnVFkotzVZHImTXqb8aD46X7S8e0
VJHUrBslZMqDoTBLsXmVKn46c6XDjHnYIrV7qkFKFaPDDhIJBiSfXz4ECM9U
RdRk+6EyDVKPsvyBC62rEbMkb2oVzYPQsWC+826rMfb4Y0HoXyX8bfxrlP1M
Bdlv7611HlfC79jAHYLVKjCceD5uOKIEoVwdo9MlKojx2p4vOKAEVV6xcnyW
CtoM/ieX2aKEiTVvUpI8VVAvvCFEL18JUZ0Rl2YoqEAx9I6ldrYSFi3OHNFc
pgIrvl8yWhlKiNbYt9ZtoQrY+jU9uglKWPImwuC3gAq+JXZfsTunBMHIjDjO
O2XoFZTumtyhBJnn9XncSGU0pF1at2ibEuzw0MQmUBn3fK4s17RSwo6+DovT
Z5TRz7fipZeJEtTnJ93uPqCMRXfjry5WVUKu/M4PiuuV8Wki2fXuPCX8r9rl
f56zlfH7+lCNbTUX6UE7Yl7H8bB00W19gftcZBb2lm6O5KFq9sZthWVc2G6S
82sP5sFCYchWuJiLGVWcye9nSF9oPUhoTueiYkXRd6c9JK+3F5gX+XBRZJu0
mavEQ4PkJ98kbS4EJp6e+N8lJazl3yd7Sp2LvAmLdVnhSngfutnSWoWLtjIt
541+SpBVzVnNVOBi2V13t4T9SugdviyRuYiLVTo99KiaEjoqP7wT/q2ISl6z
uW0zFw6HPgVNjimioyvrSvJjLmTczK+NDCsidrjySXMJFyhItuv5rIj3lT/W
S6Rxcc3Rbu+LDkWsdpj5i3WIxFFV1tj0ShEuTTonh+xI3HbS+S9eKiLbY57d
PQsuZhYfrGmrV8S/G1m6i9S46Dl6dOtoqSIeptV7ls3k4vj63ZJmt1fBzlaw
UuXoStxNuTnxtGElStfsrny0Ux7W3zKlCwRWIjDtQVhVhRyO/Lrgz9BTgKbP
xff6GsvBrF7UIBsnD+7u/Yc7+WRx3+2KeePfFfheNstEaJwDf1tNSQGnFdCp
/Rzm80MGXI3Pif965VBjotL9fp4MbP7ZpOU4yCF0cquihLo09jpLmrkPLcfv
+Tk39nouQ6VjdMNkyHKY57v1epVIYdLPQIO1fDkGTx+PTQiQxA6Bz2vim2Vx
a56DpLPrUpzWkOX885GFev5Njb9OErh8r8Lw+GpZeDlqf6l2W4JR+ZlNvDEa
Oeb5nXW5i7Fu9g9x0Xs0rEzpoV2vF0HYZ1inzZ8Gv3PCJn6ZRUg98Lr/7mYa
ESvUNPV8xGH44WHnEjka4R1Zjk9ei0HOIWz9TgEaI5vcQ7+aiMHnZ5xx8nsO
2Albz3neXYi5DatrD1VzkDY5r2xCaSFCej/XHy/ggFWjLvi+QhR/d1weFSU+
8OGawUSZKHYo9R2oyCeedXwOq1QU8exJlVnEfmDqmdwRhaD5FqOsPA62bjm0
rPS6KIoD9Db3Z3Pw+MeFwtuXRaG+Q6InO4MDr3vLrBl+oujbLV3Ol8jBroBh
083GoojbrMKoSuCgdcH+FXlGovjeY5LtSVyzaGbppKEo5Bqdw0fjOaga9JDM
XSOKq9+LzL/GcXAvxVKIX0sUItG3EvpiSF3TyzgNK0WxLvg6W+giBx8bo79e
Y4pi0D5CvyGSgw8JJ/3mMkTxpjMrJ4LYwl3X7+h8UfyssVYWI5Y3WlSlMlcU
v1rFeYoRHMw+KyZfLSiKEyu7nztd4EBx/8dbY7/YcBiRdhAI4eC+iHNrbjcb
ta8HN7wI5mD/Bt3tkl1sKCyuPZ5KfK4jxyD+LRuuC6OOahD/p9+sFdjBRtzx
EYXj5zlwOl7+eF8LG24ZWkVDgRz0Hmvj6j9hI5Rr95B5joO97fevqN1gY2tL
l0C/PwclTJ5Z6XU2ntfV+5YTvxqbZ61TwIZw25MVTsR0Sb6PYR4bjl6d6uV+
HLRoZptuzWJD9RJ7zQlfDmbFB6WFJ7Ah+8a9e44PByKgLxj4shH1vHljnzcH
25nrfIt82FBehqkK4sj5s3qkvNmQfLaG50Jcdepb/5QHG1bXFKrbvDgwc66c
WevKxquDZRnFZzjwtpRzddzHhrtXunkkcfNrbelOJzakSvX1DxP32wxqWzgS
N8Z8lSU+apxVqOvAhojIb5c0TxLv0t5wiR1sHBGcK5PqwYGp9LGFw+ZsHHWa
nOVDrCmn7nBkIxvJrlbKu4nDwxNYXzaw0dPF3CRNnFeYVdRnwkZF686b+ac5
4M53bOoyYKMjJkvkqTsHGeK73T6psWGb6LBA5xQHru6bQg0k2airPP9Wlvi/
CcNHfRJshG1r6mUQezbWW55fwsbvoVupA24cqNkuc38mTup18WBjInEeLffa
jmJjrZHN7BnE1i873kYIk/qcfXNq5CSp1/o7fmqz2BhpNZLoIQ5N8PfqEmLj
1M2HC+8TVwqHuXJnsPGaPfrIm3hgytvx1T8K3gy974LEqX7G2rxRChYu0b/G
XTlY9ElCpWuEgvuveO0vxCO6JmfDhinUGGcdbSIOCudR/d8ocG4fDk4hHvQO
WJX5mcI7xU+7LhLbGsg9thygkJ05djSAmHvP8iZfPwX9lHrtI8Sxd5777umj
cPrK4HkQsyPTZ8p1U6hNqZBXJ86wytDofEdht4rwzFXE0fzbKy68pdD8bM5h
ceLJwxfKRzooLD9p3z96ggM0yMY/aqVwVeD+lkFivTVi291byPdd95v8QJzv
NOqyspmCmtnyiRZirqlQVEITWY9Devpd4ot11VePN1DoioozvUE8k03ZitST
/Pi+V88lnrp651DeEwq5bfvfJhHruhws7K0h+Rq4HBNLHJGi03W2msKDuUsi
Iogzfr07LPGIQjr1zuwcce+Gudm290n8teIMH+IJKxuLX5UUtq+IFPMgvpU7
bJNQQWGqUHPvSeK4d/fuq5WT/Daxh12ILwWGBrSVUngkKPXoELGRxvqcUyUU
trRsbts3/fmLLcsX3qOgYqZUZ0/84UY9bG9TsJr/4qodcVHVaOfvYgp8ly7U
bid+wH/wZUoRhXDfPfI2xEIrhGn9mxSeOpi/3ELM6i161VNIYek7s3JrYvle
ww8B1ykcTtg+YEms1nN5o1wBhZVaJ20siD8mZVKN1yg4uMbP2USc/FxR41ge
hcixSj5z4vP6MiVULoV6936tjcQpt3fHlmZTuHFn/j0z4sxf1Y27rlKwcVE5
Ne1VnVyHGVcoHDuw6fS0ixTOWV7LpEAfsa+c9rnq1FSLDFJ/k71G0/+v7cxu
o/E0CkWNmxdMf1+Hcq7J5cukfi95S6fjSWnYlmOUSqGJN350Ot6VK8wdhpIp
HHqWwW81nV+NQ6fikki8wYod0+v9+Cnik+4lCvPMkkam88GVvVT0KYHCCsFe
8+l8xQweaI+Mp3DrKv+36Xzue3BSUjOOwrDMRNN0vje1C759H0PW5/lodLoe
s9fI/wyOpqCbt2OnI3ESp9GRF0XB7tZDof3ER268UuqMpLAtY/jndH0N5/C2
nYugMHZ2QOYY8YG9de0rwymctM+Kn+6PUx8Ci9vCKMT5266d7ifTuUtOKYRQ
kJ40Pzvdbzfn1e9qO0/h1Ne/f4OJNwyuzfALohBae+rBdL8ODluqdJyjMH+B
rlAycZ77Pf9AfwrdQTcjMoip2FgFZT8Kc/pj9k3vh9NWu0Iu+FD4YfHv3vR+
qd4qqaflTUHh8+wNVcSb705tGDhDobztP43nxKlWz04YeVD4909k9TDx39sK
XwROUhC59ml8Yrpf07jJDSdIvdJqx/jJfj4iYX0p6jgFMUZsGnt6v/cVeUm5
UHDaqpCvS6yu2/UOBynsDJ6hb0Kcu/3b2OwDFDzzWudaE9vrXdzeuo9C1FPL
rQemzxsfA+H9ThRMGoPTE4kF5h7/HW1PgZHaK3CVuOucpNuu3RSMO2Qyiohn
SzZry++i8JOxJeQp8b4/fwse7SD7s1hvAT85H98v9lwyvpXCkmXJ//Mg9qCS
pY5uJOfBrqjxEGLDowbWemYUYgKslJOIOzVaXszbQOHjO8Ut5cRVUQcLbppQ
GGlaZjFFHJ3m/2HckMLi72HiceQ8by0bQqwWhXPeLndziU85fF50QJNCYN2M
8Api5cLbunoapB8q9fr7iGd+dbX/rErBUaBukwa5P34J5okZ8sh5Vj3x/TNx
skj02hlyFCLiUTxFvD6y0/2DLIX+hoH8heR+srk2c/gRTcEvzcJoHfHPm89u
+8uQfoh3WpBNbLBb21dQkkLKtXyhY+R+UxBbLSYmSiEIe/RCiculRDL/UCRf
Jc7XrxAn2VUf62ZRaLHewuskXlsb+DaHQaF6ZeELY3Jfar2O/6otQsHtv7OH
V5H7N9sruuPYDPJ76StiG4i9xSPzbAQofLo58+9+4htP91Su4Sfnf2fI/qvE
OmLmNxlTLPy96vhaitzn/tqHHt79w8IxxRdMaTIfSFWc8Rf5ycLmnf+GNpJ5
I9eCnjfUQyyyPsWNeF3ePrXa9yxUL/UOSyU+vV20IK2bhce6aSu/Eb+1dz5r
/Y6FJMtKj+izpJ9LLlZXvWZBK39Sr5/MM43a1M2sJhaGXlq4PiTzUuNoQGh2
JQssq7l6w8TF7fEaIRUsGP/JWb8sgIP5MUG8w+Us/C45K+NPvPBYoYBKKQs2
24t61pH5S955QLbmNgut6YrBb4M4EHe23jaaz4Lj4//5aIRysHTDnJawJBb0
C87nHSYOm39LIvQSC30PMuZmEC/76pATnMjCerar1+wwcr8viXUPimcB5+P5
3xMf3B0oHBhN1t+4IS8unIMZTz0/hoeykEW7OCpEccBLkxd57snCYJZChjOx
wuBZ8VYPFuJ3B4hmEteHde7pPM2CZo1Ivng0B25K9gX9p1hocU44M4fMv6Op
P8QEXVn4E7a+fCKWg8C/pqYbDrFI3b6UT5F5my8xIW3GThZqPQRSTS5xUKj9
o39yOwvRnIoHF4kN49Pdxm1ZSAlhvViWROZBvVL7r9tYuKgeNM84mYOXr9Jd
26xZaMz8NOdyKln/HeEzpRtYOPi1lfLJJPe5N/t8sTYL9DeVjc+JSx7rqd/W
YsF+zuG6pVnkvl465nBHk4V/71zOPyBeLLrQt0SdhettU8tnXiX7X8Xj3UMV
FvLnK46l53CQKCA0v0eBhTmCjU1C1zmQHOG9t1jCgu1YYb0dceU28+Bdi1no
rTeZcYf4V+Zil8OLWMidna/tWEj6MTLiV7AYqa/esVuPb5D5rkp3ooZiIdJP
tz62mJxP0bOumoiwcJpZkb63hLxXrk+u8fnHRIxXclZNDQfMdXv2pfUwMfZx
8Q/OYw4cIr1Dnr5n4sPRaLdA4u0qs7vHu5l4aXxEwbiWxCdqyrHsYmJOlrzh
syccjPvIigq9YeJFqxXd18DBbYGD4R6tTDxY5l6v85L8/ZW1Z4KeMPHlsd/a
pC4Odqop9akWMtF+1VCX2U3q8WVfld11JgbURzxCiTfpvHoZWMCEj7jc/TPk
Pbdsn/iVtmtMUA6eHg69HHSrPh71zGEiyayvSPMTeR9FpWk9T2dCSlp0s8Q3
Ml+vyP51OYYJ48HVZ4v/kfM70NH0kwcTD91avZX/I/PeuluuK4gN+hpKiomX
uw4/PXyaiQDbpg+3pjioSGIIj55i4k9j+bxSfhq6B0puzzjJhPvzbRXPhWjs
D91Tp3iUiXT5qcTl82lQFx8mXN3DRHWfiPtFKfL5ieaYxWZMqO3zmuFnRN63
t1K3fV7GhP+SKy7dx2l4uFa2Tf6PgQkpVm74CRptVtcE9hKXbQqT0nGlYZBu
uq1ujIG7c++8vHSShkCc/4mYUQaWz3mgauNOo0XorbvCCAPlkZZzerxoaPim
390zxMCRz2+MY7xp3L9RbNowyIDG44EaIx8aAZNDM5SJ9fpzffPP0lBuqvzK
95WBxPHk/zzIe/vNZItf1gADvFYZaZlgGt1RJ+qGPjBwNNT7YAdxxtiS8m3E
Ldz2n5EhNBZuO9DysJeBZpVr9ZOhNPzLak/G9zCgfOaG/9twGqXr8z3QzcDm
gYGW2AgaUk+9Egu6GFAL3uO8MZLG6NfrbxcSL32ptun+RRra4vNefXvLgFKI
MS87hsZ35fcBlzsZOHzMOdw+lkZTXt2z2cROHUIKi+NotK9q0nbvYKB/+ZB8
VDyN5y/Y5y1eM5AdYxhulkDDpcjIsbKdgeRwHd6sRBpJ0q7O8sRH9r4XrSFe
IhIfntDGwKx96nq+l6bXU+L19BUDUd/W5+gk0ZB2No1VaGXg4GYpqwniqoXz
2sOaGejR1DrimkLDpmvinVkTAzkvRcoOptH44jT/x4s6BrhjO+z002k05hQp
8D9hwFz4pxWVQWNHYEGKymOSn10KqvczaTik7V+a8JABs3xGu1g2DVUV6TT7
MgYCTZWT3xTQUGO/CZrMZ2B0fIFnWhmN3oWnPXZFMhA78dXbp5xG2t/z+vHh
DLgnJryyq6DhGvRK43kYAz6HY3wlqmhg7acavWAGEmj/2vSHNNySZ0Laj4F2
p9MS9+poxN6LLRs5QdY7YOeYXE/j9K3UglXHSX/I9f53toHk73j7i/0uJD87
/qw2baRhPzvpRvchBrT9exJ7m0j/5gXWNDky8L5wVVD9CxqzC/TWzd3LwMn1
/nU3X9LYJp85YeLAwK7lnma+LST+s/TYIzsGRFZqROxvJfV+KqM7tYMBy2Wr
actXNAI9Q+7qbmcg3+MMQ6uNhnC9kcMZGwYeFC62lmmnETRirFu6lYH/A3y+
HFE=
      "]]}, {}}, {{}, {}, {}, {}}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{10., 5.},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}]],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.570615430079364*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ToF", "[", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
          "]"}], ",", "1"}], "]"}], ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", 
         RowBox[{"P", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "1"}], 
          "]"}], "]"}], 
        FractionBox["180", "\[Pi]"]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ToF", "[", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
          "]"}], ",", "2"}], "]"}], ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", 
         RowBox[{"P", "[", 
          RowBox[{
           RowBox[{"\[Theta]NN", " ", "\[Degree]"}], ",", "0", ",", "2"}], 
          "]"}], "]"}], 
        FractionBox["180", "\[Pi]"]}]}], "}"}]}], "\[IndentingNewLine]", 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", "40", ",", "140"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570615562329928*^9, 3.570615596699894*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
TQNPbkhZy70j38OxuYH3WzXwf51PR60=
     "]]}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{10., 20.},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    Dashing[{Small, Small}]],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.570615578553856*^9, 3.570615597452937*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"WalkB", "[", 
        RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1", ",", "Qth"}], "]"}], 
       ",", 
       RowBox[{"WalkF", "[", 
        RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1", ",", "Qth"}], "]"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TF", "[", 
        RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1", ",", "Qth"}], "]"}], 
       ",", 
       RowBox[{"QF", "[", 
        RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TB", "[", 
        RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1", ",", "Qth"}], "]"}], 
       ",", 
       RowBox[{"QB", "[", 
        RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"Qth", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]NN", ",", 
     RowBox[{"40", " ", "\[Degree]"}], ",", 
     RowBox[{"140", " ", "\[Degree]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5705114095091267`*^9, 3.570511427851124*^9}, {
  3.5705115492479553`*^9, 3.5705115508194647`*^9}, {3.570511640201613*^9, 
  3.570511657159403*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Qth$$ = 1., $CellContext`\[Theta]NN$$ = 
    0.6981317007977318, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`Qth$$], 1, 10}, {
      Hold[$CellContext`\[Theta]NN$$], 40 Degree, 140 Degree}}, 
    Typeset`size$$ = {852., {2.25, 8.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`Qth$25502$$ = 0, $CellContext`\[Theta]NN$25503$$ = 0}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Qth$$ = 1, $CellContext`\[Theta]NN$$ = 
        40 Degree}, "ControllerVariables" :> {
        Hold[$CellContext`Qth$$, $CellContext`Qth$25502$$, 0], 
        Hold[$CellContext`\[Theta]NN$$, $CellContext`\[Theta]NN$25503$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {{
         $CellContext`WalkB[$CellContext`\[Theta]NN$$, 0, 
          1, $CellContext`Qth$$], 
         $CellContext`WalkF[$CellContext`\[Theta]NN$$, 0, 
          1, $CellContext`Qth$$]}, {
         $CellContext`TF[$CellContext`\[Theta]NN$$, 0, 1, $CellContext`Qth$$], 
         $CellContext`QF[$CellContext`\[Theta]NN$$, 0, 1]}, {
         $CellContext`TB[$CellContext`\[Theta]NN$$, 0, 1, $CellContext`Qth$$], 
         $CellContext`QB[$CellContext`\[Theta]NN$$, 0, 1]}}, 
      "Specifications" :> {{$CellContext`Qth$$, 1, 
         10}, {$CellContext`\[Theta]NN$$, 40 Degree, 140 Degree}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{895., {60., 66.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.57051142869816*^9, 3.570511552513352*^9, 
  3.570511658411529*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalGamma]F", "[", 
          RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"QF", "[", 
          RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalGamma]B", "[", 
          RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"QB", "[", 
          RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"\[CapitalGamma]F", "[", 
            RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}], "+", 
           RowBox[{"\[CapitalGamma]B", "[", 
            RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}]}], "2"], 
         ",", 
         RowBox[{"Qsum", "[", 
          RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TF", "[", 
          RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1", ",", "Qth"}], "]"}], 
         ",", 
         RowBox[{"QF", "[", 
          RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TB", "[", 
          RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1", ",", "Qth"}], "]"}], 
         ",", 
         RowBox[{"QB", "[", 
          RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"TF", "[", 
            RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1", ",", "Qth"}], 
            "]"}], "+", 
           RowBox[{"TB", "[", 
            RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1", ",", "Qth"}], 
            "]"}]}], "2"], ",", 
         RowBox[{"Qsum", "[", 
          RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]NN", ",", 
       RowBox[{"40", " ", "\[Degree]"}], ",", 
       RowBox[{"140", " ", "\[Degree]"}]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"10", ",", "30"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "40"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Red", ",", " ", "Blue", ",", " ", "Black", ",", "Pink", ",", "Cyan", 
        ",", "Gray"}], " ", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<TF\>\"", ",", "\"\<QF\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"Qth", ",", "0.1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5704323742899323`*^9, 3.570432375593526*^9}, 
   3.570432684835504*^9, {3.570433797874752*^9, 3.570433835784773*^9}, {
   3.5704338670203457`*^9, 3.570433889242437*^9}, {3.570434019766431*^9, 
   3.5704340344064302`*^9}, {3.5704365479943657`*^9, 3.570436590819601*^9}, {
   3.570436646802156*^9, 3.570436655101427*^9}, {3.5705112213794413`*^9, 
   3.570511246110424*^9}, {3.5705112884565773`*^9, 3.5705113273413477`*^9}, {
   3.570511363646525*^9, 3.5705113637783833`*^9}, {3.5705115291633368`*^9, 
   3.570511532150597*^9}, {3.570511568726077*^9, 3.57051159872307*^9}, {
   3.5705116814517384`*^9, 3.570511817347282*^9}, {3.570511854701997*^9, 
   3.570511914728331*^9}, {3.570512262400324*^9, 3.570512262741165*^9}, 
   3.570512315781083*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Qth$$ = 4., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`Qth$$], 0.1, 4}}, Typeset`size$$ = {
    360., {179., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`Qth$29453$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`Qth$$ = 0.1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`Qth$$, $CellContext`Qth$29453$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot[{{
          $CellContext`\[CapitalGamma]F[$CellContext`\[Theta]NN, 0, 1], 
          $CellContext`QF[$CellContext`\[Theta]NN, 0, 1]}, {
          $CellContext`\[CapitalGamma]B[$CellContext`\[Theta]NN, 0, 1], 
          $CellContext`QB[$CellContext`\[Theta]NN, 0, 
           1]}, {($CellContext`\[CapitalGamma]F[$CellContext`\[Theta]NN, 0, 
             1] + $CellContext`\[CapitalGamma]B[$CellContext`\[Theta]NN, 0, 
             1])/2, 
          $CellContext`Qsum[$CellContext`\[Theta]NN, 0, 1]}, {
          $CellContext`TF[$CellContext`\[Theta]NN, 0, 
           1, $CellContext`Qth$$], 
          $CellContext`QF[$CellContext`\[Theta]NN, 0, 1]}, {
          $CellContext`TB[$CellContext`\[Theta]NN, 0, 
           1, $CellContext`Qth$$], 
          $CellContext`QB[$CellContext`\[Theta]NN, 0, 
           1]}, {($CellContext`TF[$CellContext`\[Theta]NN, 0, 
             1, $CellContext`Qth$$] + $CellContext`TB[$CellContext`\[Theta]NN,
              0, 1, $CellContext`Qth$$])/2, 
          $CellContext`Qsum[$CellContext`\[Theta]NN, 0, 
           1]}}, {$CellContext`\[Theta]NN, 40 Degree, 140 Degree}, 
        AspectRatio -> 1, PlotRange -> {{10, 30}, {0, 40}}, 
        PlotStyle -> {Red, Blue, Black, Pink, Cyan, Gray}, GridLines -> 
        Automatic, GridLinesStyle -> Directive[Dashed], Frame -> True, 
        FrameLabel -> {"TF", "QF"}], 
      "Specifications" :> {{$CellContext`Qth$$, 0.1, 4}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403., {221., 227.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.570511819215522*^9, {3.570511901978985*^9, 3.570511915779949*^9}, 
   3.5705122639411697`*^9, 3.570512316614575*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[CapitalGamma]B", "[", 
           RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}], "-", 
          RowBox[{"\[CapitalGamma]F", "[", 
           RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}]}], ",", 
         RowBox[{"Qsum", "[", 
          RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"TB", "[", 
           RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1", ",", "Qth"}], "]"}],
           "-", 
          RowBox[{"TF", "[", 
           RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1", ",", "Qth"}], 
           "]"}]}], ",", 
         RowBox[{"Qsum", "[", 
          RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[CapitalGamma]B", "[", 
           RowBox[{"\[Theta]NN", " ", ",", "0", ",", "2"}], "]"}], "-", 
          RowBox[{"\[CapitalGamma]F", "[", 
           RowBox[{"\[Theta]NN", " ", ",", "0", ",", "2"}], "]"}]}], ",", 
         RowBox[{"Qsum", "[", 
          RowBox[{"\[Theta]NN", " ", ",", "0", ",", "2"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"TB", "[", 
           RowBox[{"\[Theta]NN", " ", ",", "0", ",", "2", ",", "Qth"}], "]"}],
           "-", 
          RowBox[{"TF", "[", 
           RowBox[{"\[Theta]NN", " ", ",", "0", ",", "2", ",", "Qth"}], 
           "]"}]}], ",", 
         RowBox[{"Qsum", "[", 
          RowBox[{"\[Theta]NN", " ", ",", "0", ",", "2"}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]NN", ",", 
       RowBox[{"40", " ", "\[Degree]"}], ",", 
       RowBox[{"140", " ", "\[Degree]"}]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "40"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Red", ",", " ", "Blue", ",", " ", "Black", ",", "Pink", ",", "Cyan", 
        ",", "Gray"}], " ", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Dashed", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<TF\>\"", ",", "\"\<QF\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"Qth", ",", "0.1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570514219900066*^9, 3.570514247162593*^9}, {
  3.570514373184226*^9, 3.570514373910224*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Qth$$ = 1.715, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`Qth$$], 0.1, 4}}, Typeset`size$$ = {
    360., {179., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`Qth$29865$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`Qth$$ = 0.1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`Qth$$, $CellContext`Qth$29865$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{{$CellContext`\[CapitalGamma]B[$CellContext`\[Theta]NN, 
            0, 1] - $CellContext`\[CapitalGamma]F[$CellContext`\[Theta]NN, 0, 
           1], 
          $CellContext`Qsum[$CellContext`\[Theta]NN, 0, 
           1]}, {$CellContext`TB[$CellContext`\[Theta]NN, 0, 
            1, $CellContext`Qth$$] - $CellContext`TF[$CellContext`\[Theta]NN, 
           0, 1, $CellContext`Qth$$], 
          $CellContext`Qsum[$CellContext`\[Theta]NN, 0, 
           1]}, {$CellContext`\[CapitalGamma]B[$CellContext`\[Theta]NN, 0, 
            2] - $CellContext`\[CapitalGamma]F[$CellContext`\[Theta]NN, 0, 2], 
          $CellContext`Qsum[$CellContext`\[Theta]NN, 0, 
           2]}, {$CellContext`TB[$CellContext`\[Theta]NN, 0, 
            2, $CellContext`Qth$$] - $CellContext`TF[$CellContext`\[Theta]NN, 
           0, 2, $CellContext`Qth$$], 
          $CellContext`Qsum[$CellContext`\[Theta]NN, 0, 
           2]}}, {$CellContext`\[Theta]NN, 40 Degree, 140 Degree}, 
        AspectRatio -> 1, PlotRange -> {{-10, 10}, {0, 40}}, 
        PlotStyle -> {Red, Blue, Black, Pink, Cyan, Gray}, GridLines -> 
        Automatic, GridLinesStyle -> Directive[Dashed], Frame -> True, 
        FrameLabel -> {"TF", "QF"}], 
      "Specifications" :> {{$CellContext`Qth$$, 0.1, 4}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403., {221., 227.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.570514247940003*^9, 3.570514375309911*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[CapitalGamma]B", "[", 
           RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}], "-", 
          RowBox[{"\[CapitalGamma]F", "[", 
           RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[CapitalGamma]B", "[", 
           RowBox[{"\[Theta]NN", " ", ",", "0", ",", "2"}], "]"}], "-", 
          RowBox[{"\[CapitalGamma]F", "[", 
           RowBox[{"\[Theta]NN", " ", ",", "0", ",", "2"}], "]"}]}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"TB", "[", 
           RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1", ",", "Qth"}], "]"}],
           "-", 
          RowBox[{"TF", "[", 
           RowBox[{"\[Theta]NN", " ", ",", "0", ",", "1", ",", "Qth"}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"TB", "[", 
           RowBox[{"\[Theta]NN", " ", ",", "0", ",", "2", ",", "Qth"}], "]"}],
           "-", 
          RowBox[{"TF", "[", 
           RowBox[{"\[Theta]NN", " ", ",", "0", ",", "2", ",", "Qth"}], 
           "]"}]}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]NN", ",", 
       RowBox[{"40", " ", "\[Degree]"}], ",", 
       RowBox[{"140", " ", "\[Degree]"}]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", "Blue"}], " ", "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "10"}], ",", "10", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "10"}], ",", "10", ",", "1"}], "}"}]}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Gray", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<TF\>\"", ",", "\"\<QF\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"Qth", ",", "0.1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.570514343835348*^9, 3.570514353573146*^9}, {
   3.570514400175232*^9, 3.570514420757783*^9}, 3.570514484550686*^9, {
   3.570514556955418*^9, 3.570514592630639*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Qth$$ = 0.1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`Qth$$], 0.1, 4}}, Typeset`size$$ = {
    360., {176., 180.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`Qth$30672$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`Qth$$ = 0.1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`Qth$$, $CellContext`Qth$30672$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{{$CellContext`\[CapitalGamma]B[$CellContext`\[Theta]NN, 
            0, 1] - $CellContext`\[CapitalGamma]F[$CellContext`\[Theta]NN, 0, 
           1], $CellContext`\[CapitalGamma]B[$CellContext`\[Theta]NN, 0, 
            2] - $CellContext`\[CapitalGamma]F[$CellContext`\[Theta]NN, 0, 
           2]}, {$CellContext`TB[$CellContext`\[Theta]NN, 0, 
            1, $CellContext`Qth$$] - $CellContext`TF[$CellContext`\[Theta]NN, 
           0, 1, $CellContext`Qth$$], $CellContext`TB[$CellContext`\[Theta]NN,
             0, 2, $CellContext`Qth$$] - \
$CellContext`TF[$CellContext`\[Theta]NN, 0, 
           2, $CellContext`Qth$$]}}, {$CellContext`\[Theta]NN, 40 Degree, 140 
         Degree}, AspectRatio -> 1, PlotRange -> {{-10, 10}, {-10, 10}}, 
        PlotStyle -> {Red, Blue}, GridLines -> {
          Table[$CellContext`i, {$CellContext`i, -10, 10, 1}], 
          Table[$CellContext`i, {$CellContext`i, -10, 10, 1}]}, 
        GridLinesStyle -> Directive[Gray], Frame -> True, 
        FrameLabel -> {"TF", "QF"}], 
      "Specifications" :> {{$CellContext`Qth$$, 0.1, 4}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403., {218., 224.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.570514354423935*^9, {3.570514415671894*^9, 3.570514421141082*^9}, 
   3.570514485145548*^9, {3.570514583677206*^9, 3.570514593258911*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1279, 730},
WindowMargins->{{Automatic, 200}, {115, Automatic}},
ShowSelection->True,
FrontEndVersion->"8.0 for Linux x86 (64-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 117, 1, 88, "Title"],
Cell[699, 25, 613, 14, 88, "Input"],
Cell[1315, 41, 152, 3, 30, "Input"],
Cell[CellGroupData[{
Cell[1492, 48, 91, 1, 74, "Section"],
Cell[1586, 51, 2682, 68, 320, "Input"],
Cell[CellGroupData[{
Cell[4293, 123, 929, 25, 59, "Input"],
Cell[5225, 150, 1830, 37, 536, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7092, 192, 378, 10, 30, "Input"],
Cell[7473, 204, 2677, 50, 256, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10187, 259, 1520, 35, 107, "Input"],
Cell[11710, 296, 2322, 43, 446, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14069, 344, 1560, 37, 107, "Input"],
Cell[15632, 383, 2219, 41, 460, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17888, 429, 3321, 82, 232, "Input"],
Cell[21212, 513, 3047, 59, 474, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24296, 577, 395, 10, 30, "Input"],
Cell[24694, 589, 25158, 440, 358, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49889, 1034, 2128, 56, 145, "Input"],
Cell[52020, 1092, 2602, 49, 480, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54671, 1147, 98, 1, 74, "Section"],
Cell[54772, 1150, 2680, 74, 215, "Input",
 InitializationCell->True],
Cell[57455, 1226, 2228, 65, 222, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[59708, 1295, 1099, 34, 117, "Input"],
Cell[60810, 1331, 1760, 37, 536, "Output"]
}, Open  ]],
Cell[62585, 1371, 3448, 95, 344, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[66058, 1470, 702, 19, 30, "Input"],
Cell[66763, 1491, 2080, 41, 220, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68880, 1537, 1133, 28, 69, "Input"],
Cell[70016, 1567, 149087, 2423, 360, 128565, 2085, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219140, 3995, 4571, 106, 639, "Input",
 InitializationCell->True],
Cell[223714, 4103, 4524, 80, 242, "Output"]
}, Open  ]],
Cell[228253, 4186, 660, 16, 69, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[228938, 4206, 1481, 35, 69, "Input"],
Cell[230422, 4243, 118034, 1914, 373, 106952, 1730, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[348505, 6163, 91, 1, 74, "Section"],
Cell[CellGroupData[{
Cell[348621, 6168, 3987, 109, 244, "Input",
 InitializationCell->True],
Cell[352611, 6279, 646, 9, 30, "Output"],
Cell[353260, 6290, 646, 9, 30, "Output"],
Cell[353909, 6301, 646, 9, 30, "Output"]
}, Open  ]],
Cell[354570, 6313, 399, 8, 30, "Input"],
Cell[354972, 6323, 4531, 116, 263, "Input",
 InitializationCell->True],
Cell[359506, 6441, 1824, 46, 160, "Input",
 InitializationCell->True],
Cell[361333, 6489, 5375, 127, 313, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[366733, 6620, 4363, 102, 278, "Input"],
Cell[371099, 6724, 4385, 86, 214, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375521, 6815, 4716, 118, 278, "Input",
 InitializationCell->True],
Cell[380240, 6935, 3691, 75, 456, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383968, 7015, 979, 24, 31, "Input"],
Cell[384950, 7041, 2629, 49, 362, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387616, 7095, 1237, 31, 74, "Input"],
Cell[388856, 7128, 4483, 83, 372, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393376, 7216, 3098, 79, 232, "Input"],
Cell[396477, 7297, 37247, 626, 377, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[433761, 7928, 3107, 85, 232, "Input"],
Cell[436871, 8015, 10480, 188, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447388, 8208, 2280, 60, 242, "Input"],
Cell[449671, 8270, 2351, 45, 464, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452059, 8320, 848, 22, 48, "Input"],
Cell[452910, 8344, 1794, 36, 342, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454741, 8385, 1544, 40, 152, "Input"],
Cell[456288, 8427, 16795, 286, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[473120, 8718, 1747, 46, 211, "Input"],
Cell[474870, 8766, 11114, 190, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[486021, 8961, 2259, 57, 238, "Input"],
Cell[488283, 9020, 2378, 45, 303, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[490698, 9070, 3963, 103, 289, "Input"],
Cell[494664, 9175, 3153, 61, 461, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[497854, 9241, 7601, 185, 298, "Input"],
Cell[505458, 9428, 4617, 85, 461, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510112, 9518, 1022, 24, 103, "Input"],
Cell[511137, 9544, 3092, 58, 382, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[514266, 9607, 3524, 93, 179, "Input"],
Cell[517793, 9702, 3366, 62, 495, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[521196, 9769, 2098, 55, 133, "Input"],
Cell[523297, 9826, 4458, 81, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527792, 9912, 2254, 58, 133, "Input"],
Cell[530049, 9972, 2289, 44, 455, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532375, 10021, 2057, 55, 133, "Input"],
Cell[534435, 10078, 2148, 42, 453, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[536620, 10125, 2339, 59, 133, "Input"],
Cell[538962, 10186, 2159, 42, 447, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[541158, 10233, 2022, 44, 133, "Input"],
Cell[543183, 10279, 2422, 45, 461, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[545642, 10329, 1632, 41, 133, "Input"],
Cell[547277, 10372, 4767, 89, 371, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552081, 10466, 1079, 24, 103, "Input"],
Cell[553163, 10492, 2818, 57, 367, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[556030, 10555, 98, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[556153, 10560, 1125, 34, 79, "Input"],
Cell[557281, 10596, 4409, 77, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[561727, 10678, 1865, 49, 146, "Input"],
Cell[563595, 10729, 2245, 43, 355, "Output"]
}, Open  ]],
Cell[565855, 10775, 1651, 45, 73, "Input"],
Cell[CellGroupData[{
Cell[567531, 10824, 1817, 48, 103, "Input"],
Cell[569351, 10874, 2373, 45, 491, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571761, 10924, 2807, 76, 194, "Input"],
Cell[574571, 11002, 2758, 53, 477, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[577366, 11060, 2213, 60, 190, "Input"],
Cell[579582, 11122, 2263, 44, 447, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[581882, 11171, 1544, 40, 118, "Input"],
Cell[583429, 11213, 16795, 286, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600261, 11504, 1747, 46, 205, "Input"],
Cell[602011, 11552, 11114, 190, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[613162, 11747, 1418, 37, 103, "Input"],
Cell[614583, 11786, 2340, 46, 143, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[616960, 11837, 4291, 99, 319, "Input"],
Cell[621254, 11938, 2948, 56, 465, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[624239, 11999, 3283, 80, 193, "Input"],
Cell[627525, 12081, 2734, 51, 465, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[630296, 12137, 3160, 80, 163, "Input"],
Cell[633459, 12219, 2644, 49, 459, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

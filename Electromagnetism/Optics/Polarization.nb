(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    109049,       2388]
NotebookOptionsPosition[    105108,       2253]
NotebookOutlinePosition[    105451,       2268]
CellTagsIndexPosition[    105408,       2265]
WindowFrame->Normal
ContainsDynamic->True *)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Theta]", " ", "is", " ", "the", " ", "phase"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"k", ".", "x"}], "-", 
    RowBox[{
    "\[Omega]", " ", "t", " ", "\[IndentingNewLine]", "\[Phi]", " ", "is", 
     " ", "the", " ", "polarizer", " ", "angle"}]}]}], "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.429438153921875*^9, 3.42943821921875*^9}}],

Cell[CellGroupData[{

Cell["2 perpendicular Polarization", "Subtitle",
 CellChangeTimes->{{3.429438296328125*^9, 3.429438306640625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EP", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"E1", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", " ", 
     RowBox[{"E2", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Phi]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.42943783403125*^9, 3.42943793071875*^9}, {
  3.429438023453125*^9, 3.429438029265625*^9}, {3.4294382250625*^9, 
  3.42943823778125*^9}, {3.42943842409375*^9, 3.429438443828125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"E1", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
  RowBox[{"E2", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.429437931234375*^9, {3.429438025359375*^9, 3.429438030109375*^9}, 
   3.429438252625*^9, 3.429438430625*^9, 3.429438864984375*^9, 
   3.429444599046875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ii", "=", 
  SuperscriptBox["EP", "2"]}]], "Input",
 CellChangeTimes->{{3.429437942625*^9, 3.42943794671875*^9}, {
   3.429438037671875*^9, 3.429438048734375*^9}, 3.429438428703125*^9}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"E1", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
    RowBox[{"E2", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], "2"]], "Output",
 CellChangeTimes->{
  3.429437947921875*^9, {3.42943804246875*^9, 3.4294380491875*^9}, 
   3.4294382550625*^9, 3.429438431921875*^9, 3.429438866109375*^9, 
   3.4294446003125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", 
   RowBox[{"2", " ", "\[Pi]"}]], 
  RowBox[{"Ii", 
   RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}]], "Input",
 CellChangeTimes->{{3.429437952765625*^9, 3.429438008984375*^9}, {
   3.429438053453125*^9, 3.42943805378125*^9}, {3.429438257*^9, 
   3.4294382586875*^9}, {3.4294388345625*^9, 3.42943884609375*^9}, 
   3.42943934134375*^9}],

Cell[BoxData[
 RowBox[{"\[Pi]", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"E1", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
     RowBox[{"E2", " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{{3.42943799775*^9, 3.42943801*^9}, 3.429438054671875*^9, 
   3.429438260796875*^9, 3.4294384330625*^9, {3.429438862359375*^9, 
   3.4294388675625*^9}, 3.429444601515625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"E1", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"E2", " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"E1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"E2", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4294446201875*^9, 3.42944462346875*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`E1$$ = 0.5, $CellContext`E2$$ = 0.5, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`E1$$], 0, 1}, {
      Hold[$CellContext`E2$$], 0, 1}}, Typeset`size$$ = {360., {117., 121.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`E1$72536$$ = 0, $CellContext`E2$72537$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`E1$$ = 0, $CellContext`E2$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`E1$$, $CellContext`E1$72536$$, 0], 
        Hold[$CellContext`E2$$, $CellContext`E2$72537$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[($CellContext`E1$$ Cos[$CellContext`\[Phi]] + $CellContext`E2$$ 
          Sin[$CellContext`\[Phi]])^2, {$CellContext`\[Phi], 0, Pi}, 
        PlotRange -> {0, 1}], 
      "Specifications" :> {{$CellContext`E1$$, 0, 1}, {$CellContext`E2$$, 0, 
         1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{406., {174., 179.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.429444624234375*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2 perpendicular not in - phase ", "Subtitle",
 CellChangeTimes->{{3.4294387481875*^9, 3.429438774578125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EP", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"E1", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", " ", 
     RowBox[{"E2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "+", "\[Delta]"}], "]"}]}]}], "}"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Phi]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.4294384465625*^9, 3.429438449609375*^9}, {
  3.42943849121875*^9, 3.429438522390625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"E1", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
  RowBox[{"E2", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Delta]", "+", "\[Theta]"}], "]"}], " ", 
   RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]], "Output",
 CellChangeTimes->{3.429438526015625*^9, 3.42943930690625*^9, 
  3.42944404290625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ii", "=", 
  RowBox[{
   SuperscriptBox["EP", "2"], "//", "Expand"}]}]], "Input",
 CellChangeTimes->{{3.42943852815625*^9, 3.42943853421875*^9}, {
  3.429444102640625*^9, 3.42944410475*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["E1", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
  RowBox[{"2", " ", "E1", " ", "E2", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Delta]", "+", "\[Theta]"}], "]"}], " ", 
   RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
   RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["E2", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", 
     RowBox[{"\[Delta]", "+", "\[Theta]"}], "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.42943853553125*^9, 3.429439308171875*^9, 
  3.429444044546875*^9, 3.42944410525*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", 
   RowBox[{"2", " ", "\[Pi]"}]], 
  RowBox[{"2", " ", "E1", " ", "E2", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Delta]", "+", "\[Theta]"}], "]"}], " ", 
   RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
   RowBox[{"Sin", "[", "\[Phi]", "]"}], 
   RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}]], "Input",
 CellChangeTimes->{{3.4294441245*^9, 3.429444163796875*^9}}],

Cell[BoxData[
 RowBox[{"E1", " ", "E2", " ", "\[Pi]", " ", 
  RowBox[{"Cos", "[", "\[Delta]", "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "\[Phi]"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.42944412553125*^9, 3.429444168328125*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"II", "=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", 
    RowBox[{"2", " ", "\[Pi]"}]], 
   RowBox[{"Ii", 
    RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.429439301578125*^9, 3.429439303578125*^9}, 
   3.42943934390625*^9, {3.42943937753125*^9, 3.429439379125*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["E1", "2"], "+", 
    SuperscriptBox["E2", "2"], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["E1", "2"], "-", 
       SuperscriptBox["E2", "2"]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
    RowBox[{"4", " ", "E1", " ", "E2", " ", 
     RowBox[{"Cos", "[", "\[Delta]", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.429444214734375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"E1", " ", "E2", " ", 
       RowBox[{"Cos", "[", "\[Delta]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", " ", 
      RowBox[{
       SuperscriptBox["E1", "2"], "  ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", " ", 
      RowBox[{
       SuperscriptBox["E2", "2"], "  ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"E1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"E2", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.429438578453125*^9, 3.42943931003125*^9, 3.429439346125*^9, 
   3.429439380859375*^9, 3.429444047796875*^9, 3.429444108796875*^9, {
   3.4294441878125*^9, 3.42944422596875*^9}, {3.429444290828125*^9, 
   3.429444382015625*^9}, {3.42944450078125*^9, 3.429444504328125*^9}, 
   3.429444535265625*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`E1$$ = 0.8, $CellContext`E2$$ = 
    0.51, $CellContext`\[Delta]$$ = -1.306902543893354, Typeset`show$$ = True,
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`E1$$], 0, 1}, {
      Hold[$CellContext`E2$$], 0, 1}, {
      Hold[$CellContext`\[Delta]$$], -Pi, Pi}}, Typeset`size$$ = {
    360., {117., 121.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`E1$59980$$ = 
    0, $CellContext`E2$59981$$ = 0, $CellContext`\[Delta]$59982$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`E1$$ = 0, $CellContext`E2$$ = 
        0, $CellContext`\[Delta]$$ = -Pi}, "ControllerVariables" :> {
        Hold[$CellContext`E1$$, $CellContext`E1$59980$$, 0], 
        Hold[$CellContext`E2$$, $CellContext`E2$59981$$, 0], 
        Hold[$CellContext`\[Delta]$$, $CellContext`\[Delta]$59982$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[(($CellContext`E1$$ $CellContext`E2$$) 
          Cos[$CellContext`\[Delta]$$]) 
         Sin[2 $CellContext`\[Phi]] + $CellContext`E1$$^2 
         Cos[$CellContext`\[Phi]]^2 + $CellContext`E2$$^2 
         Sin[$CellContext`\[Phi]]^2, {$CellContext`\[Phi], 0, Pi}, 
        PlotRange -> {0, 1}], 
      "Specifications" :> {{$CellContext`E1$$, 0, 1}, {$CellContext`E2$$, 0, 
         1}, {$CellContext`\[Delta]$$, -Pi, Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{406., {187., 192.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.4294443465*^9, 3.429444383*^9, 3.429444505296875*^9, 
  3.429444536265625*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multi - Linear || Same as 2-perp", "Subtitle",
 CellChangeTimes->{{3.429440218078125*^9, 3.42944022309375*^9}, {
  3.429444749921875*^9, 3.429444760953125*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Assume", " ", "Any", " ", "Scatter", " ", "Ligth", " ", "Can", " ", "be", 
   " ", "Reduced", " ", "to", " ", "2", " ", 
   RowBox[{"perp", ".", " ", "wave"}], " ", "sources"}], " ", "*)"}]], "Input",\

 CellChangeTimes->{{3.429438592265625*^9, 3.429438635859375*^9}, {
  3.429438795484375*^9, 3.429438816234375*^9}}],

Cell[CellGroupData[{

Cell["Numerical Prove", "Subsubtitle",
 CellChangeTimes->{{3.429491423359375*^9, 3.429491428921875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "20"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "20"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"T", "[", 
       RowBox[{"[", "i", "]"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"T", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"P", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "+", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "20"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"T", "[", 
       RowBox[{"[", "i", "]"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"T", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"P", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "+", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "20"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"A", ",", "B"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.429440782140625*^9, 3.4294410731875*^9}, {
  3.42944112259375*^9, 3.429441124890625*^9}, {3.42944191146875*^9, 
  3.429441926484375*^9}, {3.4294925060625*^9, 3.4294926510625*^9}, {
  3.42949273028125*^9, 3.42949273484375*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
1lDnoq26YyvEGuWgevvGOPc9XNQ/7RbAGJWD2WSVQI8XXLTf3mLpxJgc1FXt
xX9yuOhjrm5j/4Qc3JP+xzQv4qJ7br0rmmfkwHrDkgHJD1y0uel0Z9YcJoRo
eu+waOKi+7me5o4sJoQL/fJ6Sueh7W6+iq9XM6HYfgWt05KHcsv3lb9cywSn
VVNad215SFV9nfeT9UyI8jq4zng/D/1jj1XeNmLCxpXOipdceChpi/8l181M
WEO7mPf6HA8NqwX0MG2ZcDPw3+G58Tz0kH0l78xZJgRtNtsq0cxDPeX6fyJ8
mHDZ+FSwxW8e0sv7M/fVeSYcM/LyC+rgoYJIY6eB/5jgaWN7uo3koW87JuZ6
BjHhQEWMP0zx0PgbTyevGCY8uPZ5fooyiUyeLQy7E8eEVfpowE2VRNfiq/Oy
7zEhZbm/y3INEkn76IkPJTLhQ8+IZvJSEmku5+Z5pzFh4mzdyOL1JNqd4iR+
rpAJj9YwhhpsSBQdIb0m+jUTLJrTt+rYkehnQIlT3hsmGOwS0z1/gERH98/P
H8ZM8LfdnDzpTCJ/ObaTzxcmKKUTKhmnSfQkaHe+708m2BodevjgOolI75k/
sS1MuPb7SrB/KIlWHM4UL2xlwpmrPn27b5Ko2FjceaydCXevxRt3RpLo+2i5
uB/JBJm/ZE32fRJNnjB29p9igvvPR/N7XpHI/I0O+MxQ97dy0tDIIdF9KUU1
LwET5uoJ4uzySGSUM/TnBIOAJbveVb0sItHFqXQnewkC/A+ctJV+TyJGhJzT
uvkEpLVvOHSnhkS2bQITgwUEDPdfI47+oN5/VZ/qioUEDIq8X6VfT6Kt7M+/
tTUJqNtg+yiPTaJQtUBHeV0Csn91bjrzm0SSuZxDIxsIqPbWXvKEJJHDnAbj
v0YEfGboL5DqJdELu7IFfSYEcIpavT36qPWeftDaZUrA77AKE7VBEkVusT5U
b07AucHPlqtGSNQWh4xrdhJw1LEcXEdJtJLUW/BtNwGl21tu3x0j0Y8I0dYP
1gTserN0W/MEiYimtw65BwiIufdATnGW2h+dZ0avHAjQoif1ygtIlB8Qp/Lc
kYA96dEa82h8tE/d+9cjFwJCFDwe8ul8lHbW6W3SUQLsn7fyvgvx0Vj5zgcJ
rgQ4ydqFv2DwUbzbYocoNwKS2u902c7hI+5bwijCnYC2Jfw4VRE+MpwnpBJ2
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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
7PYl+nDvLyEyiS0884l4WWZrZl2XEBUXOQ78JKaiDAdfDQlRxYepAV3ETQcv
Gt6fFCKRtk/8fuJsyx+Bl6VG0f3fKa96iMPnL8UBMqPot0fY2XZiZ6lw8V3y
oyjtftC2WmLd1m/m62eNorM3z696ScwqWhShN28UjbVlm90h/p509v0MnVG0
8qvoliDizKBaWQn9UbTCPyBgM3Goo5btX9NRlHNSK3cWsePyU/FV5qOIu3G2
RBupzyKFL3UvrEbRUTF391RiicF5ymlbR9E7Z9kmJ+K6yoAdkc6j6PZ3zQMy
xI8yPqb47BlFZunv6WfkPM5cUmt3PjSKIhI4r5yI7Q/6aq7xGUVyhiPnheQ8
F1q+PaQTNIr4JRkeUcRi82dlyoeMItCwcp5F/KDltUF77CgyiEs+q0H64/Qr
pcCKG6PI6k9cXjLpp61JhwT5qaNI+8GvSTliEcdp5uE5o2he4vxPv0h/Vhl6
hHu9IPuJ37XNnPiefOE7hxJSn2uXRm6Qfrap3G2zoGoUqf3e7m9A+l0j42kc
7/soYp+1dQwgeRiLlK4Ttoyi0Dd/bPNIXtLW5bi+7SfPD8iLUCJ5Er6ccugA
fwy1BXpMjSR5+3jLPsN2xhh669137+pqGlJOPOg3njOG1O3KXG6SfFoZ2gZI
642hndNtmMskz7ef3Al7ZDOGAq0m0+eb0uATOfQ2bvsYSk6dIjNhTMO6A5Yy
J3eOofZZXpfekvnQP68v1vrIGNpy/UHTJjI/LG6Z3emOGUPfqta8p/TIeZZW
fA9OHEOezpkDEWT+vO5xVpBLGUNq+TGSYotpWL0q4KJhzhi6ZeL/s2YhDWa/
s3yDa8bQBvV3carzSH15Zpn8pjEUG1Ygs4PMP2xU0ZnWPobsK34fjVejAUV2
7ng7Moa873IkO2fRYKyrvp4/Yxxp7bXdrKdAQ4BjVkjanHEkepdjvITM32fn
Vrw0WDiOlus7TNPgk7zVOi1zMh1HqsMKt0ZlSD5OxKmkuY6jZiMFnpkU6bc3
UgP6qeMo5J2N9IZ+Cg53x+qUPxxHuV1fLct7KHikOMfDMXccpY54nENdFCw8
AI2n3oyjEn5iJ5fcNwu4x8vKfo+jFz6Lk7Y2kvtse8eN7doTaM3nJ5aupRTI
d70zP5k3gRSL+On+VyhIiBbs+C2YQMtWamxnk/tUQS8z0KZ0AsWNHTwUdZH4
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
PFIn+B8OZ0q3
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.5424565933436574`, 3.5424577356868667`}}, {{
     0, 6.283185307179586}, {-3.5424565933436574`, 3.5424577356868667`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.42944085075*^9, 3.429440880171875*^9}, {
   3.4294409615625*^9, 3.4294410079375*^9}, {3.42944105053125*^9, 
   3.429441126046875*^9}, {3.429441913953125*^9, 3.429441927375*^9}, 
   3.429442216421875*^9, 3.429442985734375*^9, 3.429443974375*^9, 
   3.4294440250625*^9, 3.42949261490625*^9, 3.429492652734375*^9, {
   3.4294927153125*^9, 3.429492741015625*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
14MG/wU0bK4U\
\>"]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NSA", "=", 
  RowBox[{"\[Theta]", "/.", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{"A", "\[Equal]", "0"}], ",", "\[Theta]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"NSB", "=", 
  RowBox[{"\[Theta]", "/.", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{"B", "\[Equal]", "0"}], ",", "\[Theta]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"2", 
  FractionBox[
   RowBox[{"NSA", "-", "NSB"}], "\[Pi]"]}]}], "Input",
 CellChangeTimes->{{3.429443255296875*^9, 3.429443285703125*^9}, {
  3.429443415625*^9, 3.429443460171875*^9}, {3.429443619390625*^9, 
  3.429443630171875*^9}, {3.42944375053125*^9, 3.42944375659375*^9}, {
  3.4294438248125*^9, 3.429443826*^9}, {3.429443868609375*^9, 
  3.429443933234375*^9}, {3.4294926823125*^9, 3.42949270184375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "::", "\<\"ifun\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \\!\\(Solve\\), so \
some solutions may not be found; use Reduce for complete solution \
information. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.42944326625*^9, 3.4294432871875*^9}, 3.42944340275*^9, {
   3.42944343321875*^9, 3.429443461234375*^9}, {3.42944362540625*^9, 
   3.429443630765625*^9}, {3.4294437530625*^9, 3.429443757171875*^9}, 
   3.429443827234375*^9, {3.429443869765625*^9, 3.42944393446875*^9}, 
   3.42944397628125*^9, {3.429492663015625*^9, 3.429492744453125*^9}}],

Cell[BoxData["0.4513738528544835`"], "Output",
 CellChangeTimes->{{3.42944326625*^9, 3.4294432871875*^9}, 3.42944340275*^9, {
   3.429443433234375*^9, 3.429443461234375*^9}, {3.42944362540625*^9, 
   3.429443630765625*^9}, {3.4294437530625*^9, 3.4294437571875*^9}, 
   3.429443827234375*^9, {3.429443869765625*^9, 3.42944393446875*^9}, 
   3.42944397628125*^9, {3.429492663015625*^9, 3.429492744453125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "::", "\<\"ifun\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \\!\\(Solve\\), so \
some solutions may not be found; use Reduce for complete solution \
information. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.42944326625*^9, 3.4294432871875*^9}, 3.42944340275*^9, {
   3.42944343321875*^9, 3.429443461234375*^9}, {3.42944362540625*^9, 
   3.429443630765625*^9}, {3.4294437530625*^9, 3.429443757171875*^9}, 
   3.429443827234375*^9, {3.429443869765625*^9, 3.42944393446875*^9}, 
   3.42944397628125*^9, {3.429492663015625*^9, 3.4294927446875*^9}}],

Cell[BoxData["0.11694072768203206`"], "Output",
 CellChangeTimes->{{3.42944326625*^9, 3.4294432871875*^9}, 3.42944340275*^9, {
   3.429443433234375*^9, 3.429443461234375*^9}, {3.42944362540625*^9, 
   3.429443630765625*^9}, {3.4294437530625*^9, 3.4294437571875*^9}, 
   3.429443827234375*^9, {3.429443869765625*^9, 3.42944393446875*^9}, 
   3.42944397628125*^9, {3.429492663015625*^9, 3.4294927446875*^9}}],

Cell[BoxData["0.21290674001946489`"], "Output",
 CellChangeTimes->{{3.42944326625*^9, 3.4294432871875*^9}, 3.42944340275*^9, {
   3.429443433234375*^9, 3.429443461234375*^9}, {3.42944362540625*^9, 
   3.429443630765625*^9}, {3.4294437530625*^9, 3.4294437571875*^9}, 
   3.429443827234375*^9, {3.429443869765625*^9, 3.42944393446875*^9}, 
   3.42944397628125*^9, {3.429492663015625*^9, 3.4294927446875*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MA", "=", 
  RowBox[{
   RowBox[{"FindMaximum", "[", 
    RowBox[{"A", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Pi]"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MB", "=", 
  RowBox[{
   RowBox[{"FindMaximum", "[", 
    RowBox[{"B", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Pi]"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.429443639109375*^9, 3.429443723921875*^9}}],

Cell[BoxData["0.8459072680610584`"], "Output",
 CellChangeTimes->{{3.429443670328125*^9, 3.42944372453125*^9}, 
   3.429443836734375*^9, {3.42944387175*^9, 3.4294439135625*^9}, 
   3.429443978109375*^9, 3.429492664890625*^9, 3.429492747859375*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindMaximum", "::", "\<\"lstol\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function.  You may need more than \
\\!\\(MachinePrecision\\) digits of working precision to meet these \
tolerances.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.429492748109375*^9}],

Cell[BoxData["3.5424579146906865`"], "Output",
 CellChangeTimes->{{3.429443670328125*^9, 3.42944372453125*^9}, 
   3.429443836734375*^9, {3.42944387175*^9, 3.4294439135625*^9}, 
   3.429443978109375*^9, 3.429492664890625*^9, 3.429492748109375*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"A", ",", "B", ",", 
     RowBox[{"MA", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "-", "NSA", "+", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], ",", 
     RowBox[{"MB", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "-", "NSB"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", "Pink", ",", "Cyan"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.429443471046875*^9, 3.42944347784375*^9}, {
   3.429443729171875*^9, 3.429443856125*^9}, {3.429443897046875*^9, 
   3.42944391809375*^9}, {3.4294439575*^9, 3.429443959859375*^9}, {
   3.42944399675*^9, 3.429444012234375*^9}, 3.429492754703125*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
1lDnoq26YyvEGuWgevvGOPc9XNQ/7RbAGJWD2WSVQI8XXLTf3mLpxJgc1FXt
xX9yuOhjrm5j/4Qc3JP+xzQv4qJ7br0rmmfkwHrDkgHJD1y0uel0Z9YcJoRo
eu+waOKi+7me5o4sJoQL/fJ6Sueh7W6+iq9XM6HYfgWt05KHcsv3lb9cywSn
VVNad215SFV9nfeT9UyI8jq4zng/D/1jj1XeNmLCxpXOipdceChpi/8l181M
WEO7mPf6HA8NqwX0MG2ZcDPw3+G58Tz0kH0l78xZJgRtNtsq0cxDPeX6fyJ8
mHDZ+FSwxW8e0sv7M/fVeSYcM/LyC+rgoYJIY6eB/5jgaWN7uo3koW87JuZ6
BjHhQEWMP0zx0PgbTyevGCY8uPZ5fooyiUyeLQy7E8eEVfpowE2VRNfiq/Oy
7zEhZbm/y3INEkn76IkPJTLhQ8+IZvJSEmku5+Z5pzFh4mzdyOL1JNqd4iR+
rpAJj9YwhhpsSBQdIb0m+jUTLJrTt+rYkehnQIlT3hsmGOwS0z1/gERH98/P
H8ZM8LfdnDzpTCJ/ObaTzxcmKKUTKhmnSfQkaHe+708m2BodevjgOolI75k/
sS1MuPb7SrB/KIlWHM4UL2xlwpmrPn27b5Ko2FjceaydCXevxRt3RpLo+2i5
uB/JBJm/ZE32fRJNnjB29p9igvvPR/N7XpHI/I0O+MxQ97dy0tDIIdF9KUU1
LwET5uoJ4uzySGSUM/TnBIOAJbveVb0sItHFqXQnewkC/A+ctJV+TyJGhJzT
uvkEpLVvOHSnhkS2bQITgwUEDPdfI47+oN5/VZ/qioUEDIq8X6VfT6Kt7M+/
tTUJqNtg+yiPTaJQtUBHeV0Csn91bjrzm0SSuZxDIxsIqPbWXvKEJJHDnAbj
v0YEfGboL5DqJdELu7IFfSYEcIpavT36qPWeftDaZUrA77AKE7VBEkVusT5U
b07AucHPlqtGSNQWh4xrdhJw1LEcXEdJtJLUW/BtNwGl21tu3x0j0Y8I0dYP
1gTserN0W/MEiYimtw65BwiIufdATnGW2h+dZ0avHAjQoif1ygtIlB8Qp/Lc
kYA96dEa82h8tE/d+9cjFwJCFDwe8ul8lHbW6W3SUQLsn7fyvgvx0Vj5zgcJ
rgQ4ydqFv2DwUbzbYocoNwKS2u902c7hI+5bwijCnYC2Jfw4VRE+MpwnpBJ2
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
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
7PYl+nDvLyEyiS0884l4WWZrZl2XEBUXOQ78JKaiDAdfDQlRxYepAV3ETQcv
Gt6fFCKRtk/8fuJsyx+Bl6VG0f3fKa96iMPnL8UBMqPot0fY2XZiZ6lw8V3y
oyjtftC2WmLd1m/m62eNorM3z696ScwqWhShN28UjbVlm90h/p509v0MnVG0
8qvoliDizKBaWQn9UbTCPyBgM3Goo5btX9NRlHNSK3cWsePyU/FV5qOIu3G2
RBupzyKFL3UvrEbRUTF391RiicF5ymlbR9E7Z9kmJ+K6yoAdkc6j6PZ3zQMy
xI8yPqb47BlFZunv6WfkPM5cUmt3PjSKIhI4r5yI7Q/6aq7xGUVyhiPnheQ8
F1q+PaQTNIr4JRkeUcRi82dlyoeMItCwcp5F/KDltUF77CgyiEs+q0H64/Qr
pcCKG6PI6k9cXjLpp61JhwT5qaNI+8GvSTliEcdp5uE5o2he4vxPv0h/Vhl6
hHu9IPuJ37XNnPiefOE7hxJSn2uXRm6Qfrap3G2zoGoUqf3e7m9A+l0j42kc
7/soYp+1dQwgeRiLlK4Ttoyi0Dd/bPNIXtLW5bi+7SfPD8iLUCJ5Er6ccugA
fwy1BXpMjSR5+3jLPsN2xhh669137+pqGlJOPOg3njOG1O3KXG6SfFoZ2gZI
642hndNtmMskz7ef3Al7ZDOGAq0m0+eb0uATOfQ2bvsYSk6dIjNhTMO6A5Yy
J3eOofZZXpfekvnQP68v1vrIGNpy/UHTJjI/LG6Z3emOGUPfqta8p/TIeZZW
fA9OHEOezpkDEWT+vO5xVpBLGUNq+TGSYotpWL0q4KJhzhi6ZeL/s2YhDWa/
s3yDa8bQBvV3carzSH15Zpn8pjEUG1Ygs4PMP2xU0ZnWPobsK34fjVejAUV2
7ng7Moa873IkO2fRYKyrvp4/Yxxp7bXdrKdAQ4BjVkjanHEkepdjvITM32fn
Vrw0WDiOlus7TNPgk7zVOi1zMh1HqsMKt0ZlSD5OxKmkuY6jZiMFnpkU6bc3
UgP6qeMo5J2N9IZ+Cg53x+qUPxxHuV1fLct7KHikOMfDMXccpY54nENdFCw8
AI2n3oyjEn5iJ5fcNwu4x8vKfo+jFz6Lk7Y2kvtse8eN7doTaM3nJ5aupRTI
d70zP5k3gRSL+On+VyhIiBbs+C2YQMtWamxnk/tUQS8z0KZ0AsWNHTwUdZH4
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
PFIn+B8OZ0q3
     "]]}, 
   {RGBColor[1, 0.5, 0.5], LineBox[CompressedData["
1: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
NLLcYpbGBOu3PLWYwxb1CvC9lMoE/wPX4wY1
     "]]}, 
   {RGBColor[0, 1, 1], LineBox[CompressedData["
1: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
ONYg+B9F6kkN
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.5424565933436574`, 3.542457735686867}}, {{
     0, 6.283185307179586}, {-3.5424565933436574`, 3.542457735686867}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.42944378546875*^9, 3.42944392478125*^9}, {
   3.429443960421875*^9, 3.429444013046875*^9}, 3.429492666421875*^9, {
   3.429492756359375*^9, 3.429492758484375*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
\
\>"]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sum of Cosine = Cosine", "Subsubtitle",
 CellChangeTimes->{{3.4294913685625*^9, 3.429491377984375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], "+", 
   RowBox[{"B", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "+", "\[Beta]"}], "]"}]}]}], "=", 
  RowBox[{"Z", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "+", "\[Zeta]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.429489186765625*^9, 3.429489215703125*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], 
   RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
  RowBox[{"A", " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}], 
   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"+", "B"}], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
    RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "-", " ", 
   RowBox[{"B", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
    RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "=", 
  RowBox[{"Z", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "+", "\[Zeta]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.429489238375*^9, 3.42948930621875*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"A", " ", 
     RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
    RowBox[{"B", " ", 
     RowBox[{"Cos", "[", "\[Beta]", "]"}]}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"A", " ", 
      RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
     RowBox[{"B", " ", 
      RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], ")"}]}], "=", 
  RowBox[{
   RowBox[{"Z", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
    RowBox[{"Cos", "[", "\[Zeta]", "]"}]}], "-", 
   RowBox[{"Z", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
    RowBox[{"Sin", "[", "\[Zeta]", "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.429489318203125*^9, 3.42948942409375*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", 
    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
   RowBox[{"B", " ", 
    RowBox[{"Cos", "[", "\[Beta]", "]"}]}]}], "=", 
  RowBox[{"Z", " ", 
   RowBox[{"Cos", "[", "\[Zeta]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", 
    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
   RowBox[{"B", " ", 
    RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "=", 
  RowBox[{"Z", " ", 
   RowBox[{"Sin", "[", "\[Zeta]", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.429489394484375*^9, 3.4294894544375*^9}}],

Cell[BoxData[{
 RowBox[{"Z", "=", 
  RowBox[{
   SqrtBox[
    RowBox[{
     SuperscriptBox["A", "2"], "+", 
     SuperscriptBox["B", "2"], "+", 
     RowBox[{"2", "AB", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Alpha]", "-", "\[Beta]"}], "]"}]}]}]], ">", 
   "0"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tan", "[", "\[Zeta]", "]"}], "=", 
  FractionBox[
   RowBox[{
    RowBox[{"A", " ", 
     RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
    RowBox[{"B", " ", 
     RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], 
   RowBox[{
    RowBox[{"A", " ", 
     RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
    RowBox[{"B", " ", 
     RowBox[{"Cos", "[", "\[Beta]", "]"}]}]}]]}]}], "Input",
 CellChangeTimes->{{3.42948946515625*^9, 3.429489624578125*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Sum of Sine = Sine", "Subsubtitle",
 CellChangeTimes->{{3.42949138790625*^9, 3.429491395609375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], "+", 
   RowBox[{"B", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]", "+", "\[Beta]"}], "]"}]}]}], "=", 
  RowBox[{"Z", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]", "+", "\[Zeta]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.42949140540625*^9, 3.429491416*^9}, {
  3.429491809046875*^9, 3.429491810796875*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}], 
   RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
  RowBox[{"A", " ", 
   RowBox[{"Sin", "[", "\[Alpha]", "]"}], 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"+", "B"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
    RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "+", 
   RowBox[{"B", " ", 
    RowBox[{"Sin", "[", "\[Beta]", "]"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "=", 
  RowBox[{"Z", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]", "+", "\[Zeta]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.42949182003125*^9, 3.429491859*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"A", " ", 
       RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
      RowBox[{"B", " ", 
       RowBox[{"Cos", "[", "\[Beta]", "]"}]}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"+", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", " ", 
        RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
       RowBox[{"B", " ", 
        RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"Z", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{"Cos", "[", "\[Zeta]", "]"}]}], "+", 
     RowBox[{"Z", " ", 
      RowBox[{"Sin", "[", "\[Zeta]", "]"}], 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.429491874515625*^9, 3.429491932578125*^9}, 
   3.429491978375*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", 
    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
   RowBox[{"B", " ", 
    RowBox[{"Cos", "[", "\[Beta]", "]"}]}]}], "=", 
  RowBox[{"Z", " ", 
   RowBox[{"Cos", "[", "\[Zeta]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", 
    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
   RowBox[{"B", " ", 
    RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "=", 
  RowBox[{"Z", " ", 
   RowBox[{"Sin", "[", "\[Zeta]", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.42949194109375*^9, 3.429491962359375*^9}}],

Cell[BoxData[{
 RowBox[{"Z", "=", 
  RowBox[{
   SqrtBox[
    RowBox[{
     SuperscriptBox["A", "2"], "+", 
     SuperscriptBox["B", "2"], "+", 
     RowBox[{"2", "AB", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Alpha]", "-", "\[Beta]"}], "]"}]}]}]], ">", 
   "0"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tan", "[", "\[Zeta]", "]"}], "=", 
  FractionBox[
   RowBox[{
    RowBox[{"A", " ", 
     RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
    RowBox[{"B", " ", 
     RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], 
   RowBox[{
    RowBox[{"A", " ", 
     RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
    RowBox[{"B", " ", 
     RowBox[{"Cos", "[", "\[Beta]", "]"}]}]}]]}]}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Math", "Subsubtitle",
 CellChangeTimes->{{3.42949144765625*^9, 3.429491448484375*^9}}],

Cell[BoxData[
 RowBox[{"E", "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Ei", " ", 
       RowBox[{"Cos", "[", "\[Alpha]i", "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "+", "\[Beta]i"}], "]"}]}], ",", 
      RowBox[{"Ei", " ", 
       RowBox[{"Sin", "[", "\[Alpha]i", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "+", "\[Beta]i"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "100"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.42949230971875*^9, 3.429492371296875*^9}}],

Cell[BoxData[{
 RowBox[{"Ei", " ", 
  RowBox[{"Cos", "[", "\[Alpha]i", "]"}], 
  RowBox[{"Cos", "[", 
   RowBox[{"\[Theta]", "+", "\[Beta]i"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"=", 
  RowBox[{
   FractionBox["Ei", "2"], 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "+", "\[Beta]i", "+", "\[Alpha]i"}], "]"}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "+", "\[Beta]i", "-", "\[Alpha]i"}], "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"=", 
  RowBox[{"E1", " ", 
   RowBox[{"Cos", " ", "[", 
    RowBox[{"\[Theta]", "+", "\[Zeta]1"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.4294916015*^9, 3.42949173040625*^9}, {
  3.429491790203125*^9, 3.429491803046875*^9}, {3.429492021625*^9, 
  3.429492054625*^9}, {3.429492134359375*^9, 3.429492140515625*^9}, {
  3.429492783078125*^9, 3.429492785828125*^9}}],

Cell[BoxData[{
 RowBox[{"Ei", " ", 
  RowBox[{"Sin", "[", "\[Alpha]i", "]"}], 
  RowBox[{"Cos", "[", 
   RowBox[{"\[Theta]", "+", "\[Beta]i"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"=", 
  RowBox[{
   FractionBox["Ei", "2"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "+", "\[Beta]i", "+", "\[Alpha]i"}], "]"}], "-", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "+", "\[Beta]i", "-", "\[Alpha]i"}], "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"=", 
  RowBox[{"E2", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]", "+", "\[Zeta]2"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.429492159546875*^9, 3.429492218203125*^9}, 
   3.42949278209375*^9, {3.429492911640625*^9, 3.42949291815625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EP", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"E1", "  ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "+", "\[Zeta]1"}], "]"}]}], ",", " ", 
     RowBox[{"E2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "+", "\[Zeta]2"}], "]"}]}]}], "}"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Phi]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.42949147725*^9, 3.4294915525*^9}, 
   3.429492144671875*^9, {3.429492235296875*^9, 3.429492236671875*^9}, {
   3.4294927890625*^9, 3.42949279025*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"E1", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Zeta]1", "+", "\[Theta]"}], "]"}], " ", 
   RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
  RowBox[{"E2", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Zeta]2", "+", "\[Theta]"}], "]"}], " ", 
   RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]], "Output",
 CellChangeTimes->{3.42949224371875*^9, 3.42949279228125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Li", "=", 
  SuperscriptBox["EP", "2"]}]], "Input"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"E1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Zeta]1", "+", "\[Theta]"}], "]"}], " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
    RowBox[{"E2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Zeta]2", "+", "\[Theta]"}], "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], "2"]], "Output",
 CellChangeTimes->{3.429492252171875*^9, 3.4294927936875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", 
   RowBox[{"2", " ", "\[Pi]"}]], 
  RowBox[{"Li", 
   RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["E1", "2"], "+", 
    SuperscriptBox["E2", "2"], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["E1", "2"], "-", 
       SuperscriptBox["E2", "2"]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "-", 
    RowBox[{"2", " ", "E1", " ", "E2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Zeta]1", "-", "\[Zeta]2"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.429492261859375*^9, 3.429492797890625*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elliptical", "Subtitle",
 CellChangeTimes->{{3.429444727625*^9, 3.42944473140625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EP", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"E1", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", " ", 
     RowBox[{"E2", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Phi]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.42944474221875*^9, 3.42944474359375*^9}, 
   3.429444777125*^9, {3.42944493434375*^9, 3.429444938046875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"E1", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
  RowBox[{"E2", " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]], "Output",
 CellChangeTimes->{3.429444940421875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Li", "=", 
  SuperscriptBox["EP", "2"]}]], "Input",
 CellChangeTimes->{{3.429444946609375*^9, 3.4294449514375*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"E1", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
    RowBox[{"E2", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], "2"]], "Output",
 CellChangeTimes->{3.429444951828125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", 
   RowBox[{"2", " ", "\[Pi]"}]], 
  RowBox[{"Li", 
   RowBox[{"\[DifferentialD]", "\[Theta]"}]}]}]], "Input",
 CellChangeTimes->{{3.42944495990625*^9, 3.429444971078125*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["E1", "2"], "+", 
    SuperscriptBox["E2", "2"], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["E1", "2"], "-", 
       SuperscriptBox["E2", "2"]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.429444960953125*^9, 3.429444972234375*^9}}]
}, Open  ]]
}, Closed]]
},
WindowSize->{615, 659},
WindowMargins->{{Automatic, 144}, {47, Automatic}},
FrontEndVersion->"6.0 for Microsoft Windows (32-bit) (April 28, 2007)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[568, 21, 446, 10, 92, "Input"],
Cell[CellGroupData[{
Cell[1039, 35, 114, 1, 49, "Subtitle"],
Cell[CellGroupData[{
Cell[1178, 40, 592, 15, 31, "Input"],
Cell[1773, 57, 447, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2257, 73, 209, 4, 31, "Input"],
Cell[2469, 79, 506, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3012, 97, 399, 9, 45, "Input"],
Cell[3414, 108, 452, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3903, 124, 739, 21, 55, "Input"],
Cell[4645, 147, 1859, 37, 370, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6553, 190, 115, 1, 49, "Subtitle"],
Cell[CellGroupData[{
Cell[6693, 195, 535, 15, 31, "Input"],
Cell[7231, 212, 385, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7653, 227, 214, 5, 31, "Input"],
Cell[7870, 234, 824, 22, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8731, 261, 476, 11, 45, "Input"],
Cell[9210, 274, 247, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9494, 284, 335, 8, 45, "Input"],
Cell[9832, 294, 634, 18, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10503, 317, 1340, 35, 55, "Input"],
Cell[11846, 354, 2340, 46, 396, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14235, 406, 166, 2, 49, "Subtitle"],
Cell[14404, 410, 366, 8, 52, "Input"],
Cell[CellGroupData[{
Cell[14795, 422, 104, 1, 28, "Subsubtitle"],
Cell[CellGroupData[{
Cell[14924, 427, 2109, 68, 112, "Input"],
Cell[17036, 497, 24896, 417, 233, 18404, 309, "CachedBoxData", "BoxData", \
"Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[41969, 919, 915, 22, 79, "Input"],
Cell[42887, 943, 810, 14, 34, "Message"],
Cell[43700, 959, 407, 5, 30, "Output"],
Cell[44110, 966, 808, 14, 34, "Message"],
Cell[44921, 982, 406, 5, 30, "Output"],
Cell[45330, 989, 406, 5, 30, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[45773, 999, 529, 15, 46, "Input"],
Cell[46305, 1016, 247, 3, 30, "Output"],
Cell[46555, 1021, 451, 9, 62, "Message"],
Cell[47009, 1032, 247, 3, 30, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[47293, 1040, 880, 22, 64, "Input"],
Cell[48176, 1064, 42595, 711, 233, 36372, 607, "CachedBoxData", "BoxData", \
"Output"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[90820, 1781, 109, 1, 28, "Subsubtitle"],
Cell[90932, 1784, 421, 12, 31, "Input"],
Cell[91356, 1798, 723, 20, 52, "Input"],
Cell[92082, 1820, 881, 27, 52, "Input"],
Cell[92966, 1849, 581, 17, 52, "Input"],
Cell[93550, 1868, 765, 24, 75, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[94352, 1897, 106, 1, 28, "Subsubtitle"],
Cell[94461, 1900, 463, 13, 31, "Input"],
Cell[94927, 1915, 715, 20, 52, "Input"],
Cell[95645, 1937, 973, 30, 52, "Input"],
Cell[96621, 1969, 582, 17, 52, "Input"],
Cell[97206, 1988, 700, 23, 75, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[97943, 2016, 92, 1, 28, "Subsubtitle"],
Cell[98038, 2019, 585, 16, 31, "Input"],
Cell[98626, 2037, 883, 22, 86, "Input"],
Cell[99512, 2061, 762, 20, 86, "Input"],
Cell[CellGroupData[{
Cell[100299, 2085, 632, 17, 31, "Input"],
Cell[100934, 2104, 392, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101363, 2119, 75, 2, 31, "Input"],
Cell[101441, 2123, 456, 12, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101934, 2140, 174, 5, 45, "Input"],
Cell[102111, 2147, 669, 19, 45, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[102841, 2173, 92, 1, 49, "Subtitle"],
Cell[CellGroupData[{
Cell[102958, 2178, 520, 14, 31, "Input"],
Cell[103481, 2194, 308, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103826, 2207, 139, 3, 31, "Input"],
Cell[103968, 2212, 368, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104373, 2227, 239, 6, 45, "Input"],
Cell[104615, 2235, 465, 14, 45, "Output"]
}, Open  ]]
}, Closed]]
}
]
*)

(* End of internal cache information *)

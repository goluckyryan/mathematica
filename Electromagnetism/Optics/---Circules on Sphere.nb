(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    124143,       2665]
NotebookOptionsPosition[    121659,       2575]
NotebookOutlinePosition[    122024,       2591]
CellTagsIndexPosition[    121981,       2588]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Circule on a sphere", "Title",
 CellChangeTimes->{{3.452050483140625*^9, 3.452050500984375*^9}, 
   3.452082643640625*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   OverscriptBox["r", "^"], "\[CenterDot]", 
   SubscriptBox[
    OverscriptBox["n", "^"], "1"]}], "=", 
  RowBox[{"Cos", "[", 
   SubscriptBox["\[Alpha]", "1"], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Norm", "[", 
   OverscriptBox["r", "^"], "]"}], "=", "1"}]}], "Input",
 CellChangeTimes->{{3.45205051428125*^9, 3.452050623484375*^9}, 
   3.452082643640625*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"n1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Phi]1", "]"}], 
     RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Phi]1", "]"}], 
     RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], ",", 
    RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"r", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Phi]", "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Phi]", "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"r", ".", "n1"}]}], "Input",
 CellChangeTimes->{{3.4520506284375*^9, 3.452050720703125*^9}, 
   3.452082643640625*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], ",", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ",", 
   RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.45205071225*^9, 3.452050721265625*^9}, 
   3.452082643640625*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.45205071225*^9, 3.452050721265625*^9}, 
   3.452082643640625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], "==", 
        RowBox[{"Cos", "[", "\[Alpha]1", "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]2", "]"}]}]}], "==", 
        RowBox[{"Cos", "[", "\[Alpha]2", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"4", "Pi"}]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotPoints", "\[Rule]", "60"}], ",", " ", 
     RowBox[{"Contours", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"ContourShading", "\[Rule]", "None"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.5"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]1", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}], ",", 
     RowBox[{"\[Pi]", "/", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]1", ",", "0", ",", "\[Pi]", ",", 
     RowBox[{"\[Pi]", "/", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]1", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}], ",", 
     RowBox[{"\[Pi]", "/", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]2", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}], ",", 
     RowBox[{"\[Pi]", "/", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]2", ",", "0", ",", "\[Pi]", ",", 
     RowBox[{"\[Pi]", "/", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]2", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}], ",", 
     RowBox[{"\[Pi]", "/", "10"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.452051413625*^9, 3.452051521671875*^9}, {
   3.452052346921875*^9, 3.45205235959375*^9}, {3.452052458234375*^9, 
   3.452052458671875*^9}, 3.452052574875*^9, {3.452052907*^9, 
   3.452053065015625*^9}, 3.452082643640625*^9, {3.452083157296875*^9, 
   3.4520831776875*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]1$$ = Rational[1, 5] 
    Pi, $CellContext`\[Alpha]2$$ = Rational[1, 5] 
    Pi, $CellContext`\[Theta]1$$ = 0, $CellContext`\[Theta]2$$ = 
    Rational[3, 10] Pi, $CellContext`\[Phi]1$$ = 0, $CellContext`\[Phi]2$$ = 
    Rational[1, 2] Pi, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Alpha]1$$], 0, Rational[1, 2] Pi, Rational[1, 10] 
      Pi}, {
      Hold[$CellContext`\[Theta]1$$], 0, Pi, Rational[1, 10] Pi}, {
      Hold[$CellContext`\[Phi]1$$], 0, 2 Pi, Rational[1, 10] Pi}, {
      Hold[$CellContext`\[Alpha]2$$], 0, Rational[1, 2] Pi, Rational[1, 10] 
      Pi}, {
      Hold[$CellContext`\[Theta]2$$], 0, Pi, Rational[1, 10] Pi}, {
      Hold[$CellContext`\[Phi]2$$], 0, 2 Pi, Rational[1, 10] Pi}}, 
    Typeset`size$$ = {360., {92., 96.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]1$14343$$ = 0, $CellContext`\[Theta]1$14344$$ =
     0, $CellContext`\[Phi]1$14345$$ = 0, $CellContext`\[Alpha]2$14346$$ = 
    0, $CellContext`\[Theta]2$14347$$ = 0, $CellContext`\[Phi]2$14348$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]1$$ = 0, $CellContext`\[Alpha]2$$ = 
        0, $CellContext`\[Theta]1$$ = 0, $CellContext`\[Theta]2$$ = 
        0, $CellContext`\[Phi]1$$ = 0, $CellContext`\[Phi]2$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]1$$, $CellContext`\[Alpha]1$14343$$, 0], 
        Hold[$CellContext`\[Theta]1$$, $CellContext`\[Theta]1$14344$$, 0], 
        Hold[$CellContext`\[Phi]1$$, $CellContext`\[Phi]1$14345$$, 0], 
        Hold[$CellContext`\[Alpha]2$$, $CellContext`\[Alpha]2$14346$$, 0], 
        Hold[$CellContext`\[Theta]2$$, $CellContext`\[Theta]2$14347$$, 0], 
        Hold[$CellContext`\[Phi]2$$, $CellContext`\[Phi]2$14348$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ContourPlot[{
        Cos[$CellContext`\[Theta]] 
           Cos[$CellContext`\[Theta]1$$] + ((Cos[$CellContext`\[Phi]] 
             Cos[$CellContext`\[Phi]1$$]) Sin[$CellContext`\[Theta]]) 
           Sin[$CellContext`\[Theta]1$$] + ((Sin[$CellContext`\[Theta]] 
             Sin[$CellContext`\[Theta]1$$]) Sin[$CellContext`\[Phi]]) 
           Sin[$CellContext`\[Phi]1$$] == Cos[$CellContext`\[Alpha]1$$], 
         Cos[$CellContext`\[Theta]] 
           Cos[$CellContext`\[Theta]2$$] + ((Cos[$CellContext`\[Phi]] 
             Cos[$CellContext`\[Phi]2$$]) Sin[$CellContext`\[Theta]]) 
           Sin[$CellContext`\[Theta]2$$] + ((Sin[$CellContext`\[Theta]] 
             Sin[$CellContext`\[Theta]2$$]) Sin[$CellContext`\[Phi]]) 
           Sin[$CellContext`\[Phi]2$$] == 
         Cos[$CellContext`\[Alpha]2$$]}, {$CellContext`\[Phi], 0, 2 
         Pi}, {$CellContext`\[Theta], 0, 4 Pi}, 
        PlotRange -> {{0, 2 Pi}, {0, Pi}}, PlotPoints -> 60, Contours -> {0}, 
        ContourShading -> None, AspectRatio -> 0.5], 
      "Specifications" :> {{$CellContext`\[Alpha]1$$, 0, Rational[1, 2] Pi, 
         Rational[1, 10] Pi}, {$CellContext`\[Theta]1$$, 0, Pi, 
         Rational[1, 10] Pi}, {$CellContext`\[Phi]1$$, 0, 2 Pi, 
         Rational[1, 10] Pi}, {$CellContext`\[Alpha]2$$, 0, Rational[1, 2] Pi,
          Rational[1, 10] Pi}, {$CellContext`\[Theta]2$$, 0, Pi, 
         Rational[1, 10] Pi}, {$CellContext`\[Phi]2$$, 0, 2 Pi, 
         Rational[1, 10] Pi}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{407., {205., 210.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.452051432765625*^9, 3.45205144146875*^9}, 
   3.45205149109375*^9, 3.452051522921875*^9, {3.4520523546875*^9, 
   3.45205236028125*^9}, 3.45205245975*^9, 3.452052575546875*^9, {
   3.4520529079375*^9, 3.452052931265625*^9}, {3.452052975859375*^9, 
   3.452053023671875*^9}, 3.45205306603125*^9, 3.45208264365625*^9, 
   3.4520831793125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
By Spherical symmetric, set the larger circule (blue) on the z - axis. And \
now found the area\
\>", "Section",
 CellChangeTimes->{{3.452131688296875*^9, 3.452131740921875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], "/.", 
   RowBox[{"{", 
    RowBox[{"\[Theta]1", "\[Rule]", "0"}], "}"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.4520834323125*^9, 3.452083468109375*^9}, {
   3.45208353496875*^9, 3.452083535296875*^9}, {3.45208364546875*^9, 
   3.45208365371875*^9}, 3.45213126865625*^9}],

Cell[BoxData[
 RowBox[{"Cos", "[", "\[Theta]", "]"}]], "Output",
 CellChangeTimes->{{3.45208344809375*^9, 3.452083468671875*^9}, 
   3.452083536078125*^9, 3.45208365403125*^9, 3.452131270390625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]1", "]"}]}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]1", "\[Rule]", "\[Theta]2"}], ",", 
     RowBox[{"\[Phi]1", "\[Rule]", 
      FractionBox["\[Pi]", "2"]}]}], "}"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.4521313828125*^9, 3.452131444703125*^9}, {
  3.4521315043125*^9, 3.45213152215625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
   RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.452131391375*^9, 3.4521314451875*^9}, {
  3.452131519109375*^9, 3.452131523125*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Cos", "[", "\[Theta]", "]"}], "\[Equal]", 
  RowBox[{"Cos", "[", "\[Alpha]1", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "\[Equal]", 
  RowBox[{"Cos", "[", "\[Alpha]2", "]"}]}]}], "Input",
 CellChangeTimes->{{3.452131454546875*^9, 3.45213147428125*^9}, 
   3.45213152996875*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Alpha]1", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Alpha]1", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "\[Equal]", 
     RowBox[{"Cos", "[", "\[Alpha]2", "]"}]}], ",", "\[Phi]"}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.4521314854375*^9, 3.452131495828125*^9}, {
  3.45213153446875*^9, 3.45213154975*^9}, {3.45213167478125*^9, 
  3.452131678859375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Phi]", "\[Rule]", 
    RowBox[{"-", 
     RowBox[{"ArcSin", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Cot", "[", "\[Alpha]1", "]"}], " ", 
        RowBox[{"Cot", "[", "\[Theta]2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Alpha]2", "]"}], " ", 
        RowBox[{"Csc", "[", "\[Alpha]1", "]"}], " ", 
        RowBox[{"Csc", "[", "\[Theta]2", "]"}]}]}], "]"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.45213155084375*^9, 3.452131679203125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"H", "=", 
  RowBox[{
   RowBox[{"\[Theta]", "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]2", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "\[Equal]", 
       RowBox[{"Cos", "[", "\[Alpha]2", "]"}]}], ",", "\[Theta]"}], "]"}]}], "//",
    "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.4521316559375*^9, 3.45213167040625*^9}, {
  3.45213188396875*^9, 3.452131884890625*^9}, {3.4521319850625*^9, 
  3.45213199128125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"ArcCos", "[", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Alpha]2", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Alpha]2", "]"}], "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}]], " ", 
        RowBox[{"Tan", "[", "\[Theta]2", "]"}]}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}]], "]"}]}], ",", 
   RowBox[{"ArcCos", "[", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Alpha]2", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Alpha]2", "]"}], "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}]], " ", 
       RowBox[{"Tan", "[", "\[Theta]2", "]"}]}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}]], "]"}], ",", 
   RowBox[{"-", 
    RowBox[{"ArcCos", "[", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Alpha]2", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Alpha]2", "]"}], "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}]], " ", 
        RowBox[{"Tan", "[", "\[Theta]2", "]"}]}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}]], "]"}]}], ",", 
   RowBox[{"ArcCos", "[", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Alpha]2", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Alpha]2", "]"}], "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}]], " ", 
       RowBox[{"Tan", "[", "\[Theta]2", "]"}]}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}]], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.45213166359375*^9, 3.452131671921875*^9}, 
   3.45213188578125*^9, 3.45213199203125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]1", ",", 
       RowBox[{"ArcCos", "[", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Alpha]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Alpha]2", "]"}], "2"]}], "+", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}]], " ", 
           RowBox[{"Tan", "[", "\[Theta]2", "]"}]}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}]], "]"}], ",", 
       RowBox[{"ArcCos", "[", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Alpha]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Alpha]2", "]"}], "2"]}], "+", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}]], " ", 
           RowBox[{"Tan", "[", "\[Theta]2", "]"}]}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}]], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", "0", ",", " ", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]1", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]2", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]2", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4521319701875*^9, 3.45213208434375*^9}, {
  3.4521321226960106`*^9, 3.4521321256960106`*^9}, {3.4521321560553856`*^9, 
  3.4521322800241356`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]1$$ = 
    0.7634070148223198, $CellContext`\[Alpha]2$$ = 
    0.9801769079200154, $CellContext`\[Theta]2$$ = 1.5456635855661782`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Alpha]1$$], 0, Rational[1, 2] Pi}, {
      Hold[$CellContext`\[Alpha]2$$], 0, Rational[1, 2] Pi}, {
      Hold[$CellContext`\[Theta]2$$], 0, Pi}}, Typeset`size$$ = {
    360., {112., 116.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]1$48726$$ = 
    0, $CellContext`\[Alpha]2$48727$$ = 0, $CellContext`\[Theta]2$48728$$ = 
    0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]1$$ = 0, $CellContext`\[Alpha]2$$ = 
        0, $CellContext`\[Theta]2$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]1$$, $CellContext`\[Alpha]1$48726$$, 0], 
        Hold[$CellContext`\[Alpha]2$$, $CellContext`\[Alpha]2$48727$$, 0], 
        Hold[$CellContext`\[Theta]2$$, $CellContext`\[Theta]2$48728$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{$CellContext`\[Alpha]1$$, 
         ArcCos[(
           Cos[$CellContext`\[Alpha]2$$] Cos[$CellContext`\[Theta]2$$] - (
            Sin[$CellContext`\[Phi]] (
              Cos[$CellContext`\[Theta]2$$]^2 (-
                Cos[$CellContext`\[Alpha]2$$]^2 + 
               Cos[$CellContext`\[Theta]2$$]^2 + 
               Sin[$CellContext`\[Theta]2$$]^2 Sin[$CellContext`\[Phi]]^2))^
             Rational[1, 2]) Tan[$CellContext`\[Theta]2$$])/(
          Cos[$CellContext`\[Theta]2$$]^2 + 
          Sin[$CellContext`\[Theta]2$$]^2 Sin[$CellContext`\[Phi]]^2)], 
         ArcCos[(
           Cos[$CellContext`\[Alpha]2$$] 
            Cos[$CellContext`\[Theta]2$$] + (
             Sin[$CellContext`\[Phi]] (
               Cos[$CellContext`\[Theta]2$$]^2 (-
                 Cos[$CellContext`\[Alpha]2$$]^2 + 
                Cos[$CellContext`\[Theta]2$$]^2 + 
                Sin[$CellContext`\[Theta]2$$]^2 Sin[$CellContext`\[Phi]]^2))^
              Rational[1, 2]) Tan[$CellContext`\[Theta]2$$])/(
          Cos[$CellContext`\[Theta]2$$]^2 + 
          Sin[$CellContext`\[Theta]2$$]^2 
           Sin[$CellContext`\[Phi]]^2)]}, {$CellContext`\[Phi], 0, 2 Pi}, 
        PlotRange -> {{0, 2 Pi}, {0, Pi}}], 
      "Specifications" :> {{$CellContext`\[Alpha]1$$, 0, Rational[1, 2] 
         Pi}, {$CellContext`\[Alpha]2$$, 0, Rational[1, 2] 
         Pi}, {$CellContext`\[Theta]2$$, 0, Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {184., 189.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.45213203690625*^9, 3.452132061921875*^9}, 
   3.4521321265085106`*^9, {3.4521321633210106`*^9, 3.4521322814147606`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ArcCos", "[", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Alpha]2", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Alpha]2", "]"}], "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}]], " ", 
      RowBox[{"Tan", "[", "\[Theta]2", "]"}]}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}]], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"\[Phi]", "\[Rule]", "\[Alpha]1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4521323818522606`*^9, 3.4521324002585106`*^9}, {
  3.4521324685085106`*^9, 3.4521324803835106`*^9}}],

Cell[BoxData[
 RowBox[{"ArcCos", "[", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Alpha]2", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Alpha]1", "]"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Alpha]2", "]"}], "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Alpha]1", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"]}]}], ")"}]}]], " ", 
     RowBox[{"Tan", "[", "\[Theta]2", "]"}]}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Alpha]1", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"]}]}]], "]"}]], "Output",
 CellChangeTimes->{3.4521324820866356`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Area", "Subsection",
 CellChangeTimes->{{3.452131796640625*^9, 3.452131797078125*^9}}],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", " ", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"ArcCos", "[", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Alpha]2", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Alpha]2", "]"}], "2"]}], "+", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}]], " ", 
           RowBox[{"Tan", "[", "\[Theta]2", "]"}]}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}]], "]"}], ",", " ", 
       "\[Alpha]1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "A", ",", " ", "B"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.45213156234375*^9, 3.4521315638125*^9}, {
   3.452131614234375*^9, 3.45213162328125*^9}, {3.45213182046875*^9, 
   3.45213182396875*^9}, {3.452131889734375*^9, 3.452131961578125*^9}, 
   3.4521323731647606`*^9, {3.4521324106960106`*^9, 3.4521324278366356`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Alpha]2", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Alpha]2", "]"}], "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}]], " ", 
        RowBox[{"Tan", "[", "\[Theta]2", "]"}]}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]2", "]"}], "2"], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]2", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}]], "]"}], "-", 
    RowBox[{"Cos", "[", "\[Alpha]1", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "A", ",", "B"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4521325324460106`*^9, 3.4521325704772606`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.4521326050241356`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Circule on Sphere Plot", "Section",
 CellChangeTimes->{{3.452131757015625*^9, 3.452131765265625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f1", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"ArcCos", "[", "\[Theta]", "]"}], "+", "\[Pi]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f2", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"ArcCos", "[", 
    RowBox[{"-", "\[Theta]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"np", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f1", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"f2", "[", "\[Theta]", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "\[Pi]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "2"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.452053722734375*^9, 3.45205373065625*^9}, {
   3.45208161471875*^9, 3.452081628359375*^9}, {3.452081690015625*^9, 
   3.4520818000625*^9}, {3.4520818874375*^9, 3.45208188778125*^9}, {
   3.45208216959375*^9, 3.45208224834375*^9}, {3.4520823133125*^9, 
   3.452082319859375*^9}, {3.4520823503125*^9, 3.452082352203125*^9}, {
   3.45208241690625*^9, 3.4520824260625*^9}, {3.45208248221875*^9, 
   3.4520825076875*^9}, {3.452082537734375*^9, 3.452082609421875*^9}, 
   3.45208264365625*^9, {3.45208272009375*^9, 3.452082740109375*^9}, {
   3.452082788921875*^9, 3.452082831796875*^9}, {3.45208287015625*^9, 
   3.452082946*^9}, {3.45208390871875*^9, 3.452083971265625*^9}, {
   3.452084026453125*^9, 3.452084063953125*^9}, {3.452084103*^9, 
   3.452084175859375*^9}, {3.45208422059375*^9, 3.4520842746875*^9}, {
   3.452084309640625*^9, 3.452084460984375*^9}, {3.452084552109375*^9, 
   3.4520845538125*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVj2s01AkYxifTsnNtDEXKNbdNlrZySXnfpURZlbCVcaetyK32VBqRJhmX
aNqMSIiZaCMZubVhtBWhg8ZGbm1hx2XmH+fQclq79sNzfuc5vy/PYxgc5Rmm
QiKRvJfzP8lN1Ncft8U4DpeOxXH72Wgy0eigd2M/0KsdxxP62LhYaRXaLwiA
vwJTDl5+y8YxzeN/1wiiYKtZpVlqLxvfufBaRIIEyFhd3CXsZmNvgMAsX5AJ
bLdiNUkbGz0j1r7LERTALX3/O/J6Nl6f5UiyBQ9BoCNk/pDLRofne6lOp5uB
e7JniefNxug4jyBJdCs8/IJiqSYbT9WFXVPZ0AWjuhbWF2TqKJO7Ue4Fy2C+
wPcyP0MdU63mSTVH+mAPx37utZs6xli03mwWDUKE/p4xWGLhYkh4xVDke+hp
zxxwfMTC4Kc+B7KOfYBMjUCh2TEWhszImptTRqE+J+veKhYL061ro8TJ43CL
fMe7+PQqVGmuteXFyWFn6b1bdk+YeJ/BFv+TJAfP7JonilomevpGaJ5Nk8Pm
sRIoqmZi8bzBzInbcsg76RRErmDiLsvU+/sb5dDTd6NGUsjE5FyO7jqVCUgn
XR6VXmEi9ecV5Cr+BAy6P9LiejBRfeO+1yM5k9CGzlbx/QwcVytQby2chO7M
2EFFLwMbxma9KksnYUeJwIzTw8DQotyBxLpJKO04c2lzOwPrtCflhn2TEB3T
U9z4GwP91fjkUK0psMpOOeJXwMAHoy/s5DenwEGvfoYbzMBLLTrcrvwp2JaU
2P2LPwN9CiOb6kRTICu3jig7ykASZ40L//EUoPru8lZPBh56E3ZoY+8UlKQL
Dg47MXBRujIyQnMaqq8WG/kZMdC1wKn4k2AaEkx3RHoP0/Fqa9dQUt408DpP
rM7qp+OLGX/t1SXTINe5//VzGR1377qQYf94GgzKnc/rttPRaUJyNuntNLyh
GE1dqaXjji0m7prrFdDqMWKul0nHCxxJsthYAa+mVz6Y4dOx4cr3UjtLBbBm
m5495dHRvs/Pxs9RAa7yXhOIo6NNfLaBOFABj+ylZR9C6Wj9Um3OVqQA9+3g
mGJHx6hPN61elSug0HDItuc7OlasNT7JqVFAvSNPhW1JR8sIHEl8qYCOkUL9
WEM6blQ/39Y2oYBR3yB+OYWOxr6T+b7fKmE8JPJ211sahvDO9SlslFA1kpnt
003Du+WqGomghJocy7DOVzQ0JG1IKTmghCWZak3aUxrqiXxjFbFKsJ3R8Np5
l4ZaRIdLQq0SDi94Gil+omHO9aagiSYlmI4+WQwIpKH21iruoVYl+JJeSusP
L/fzwiqzfiXkST9N6rrRUIccrNe1qARt8dBAsjkNc0Ve9tvJBARxxxtWGdBw
neserxIaAQdsstrPaNFwfcam1HPrCTBmtsnav1reo/V5zsCRgIzB8IWI91S8
Uz/BSnMhwKdgr1D4BxX1OYMWcx4EJB5cWsPvoKJBkTSoLYCASnm/6GEtFQud
q7lbjhMgNM+TvntARcNxsTA/moBI3S8FdUVUNLJI74y5RMA1XU5PVCoV73Ze
lA/wCXAfzm+wvUjFDdExZBcBAfMmWbPXYqho/NjHXqeYgJajDcckPlQs+dHN
i/crAQuadVUcVyqaLDpEKSUEyD7Of7PPnoqmYChq+Z0Ay20jK05pU1H8p0bz
pk4CuNkWnQ6qy56nOpDdS4Du7GLG2VkKik0X5kjDBBTp+wcXDlLQrG2KFT5O
gLN5/OeRZxQsDR+26FUS8NEnLUUopqA5s9sFPhPwpqqirCxx2Vc+Cyr7d/lv
Y/y5nK0U/A9Y833j
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwVj3k41Akcxoc5ftOolijCYnJUJFkqId9vhJTtIm1rIhVJMrRtjg5HUlMj
mh5XrXVPpw5H4XlyVuhJOx0WoWPT7Mzwm1+qKTOKtX+8z+d5n88f7/Nyd/I3
h2vTaLQtU/mf9CbOk3dL4zykuknh41w1WMsb3czObwCHodl1pLUaNLccdveJ
QqFtCcV5s1AN7w0ix+6I+JBluLHqvqMaXvqkt1aIkmFxSPrMs6vU0B0qml8o
ygLj7OM/ccPUsDl67st8URF8X5rfs7ZYDec+8qpzRTfBcG3NnHozDbg9WMvx
/K0Z+Jz2LX2O4xCbtD6sOrYDylum10mdv8H+uvCz2pYSkLjvzqYt+w4vZH7T
Lu18AQLnUq/2TRNw2uEL7c62XvD2sjtye8ckxNl15DRXDMAvJprBQ7401Oza
d2Mw5g0IWyNHE97ScOe9oI3ZEf/ALKeOxEvxWrhr9EVz86khaFywZ1uPpTYK
l9zlizOkkBek2Bwg0Ubt5rvL05Nk8On2m5mNp+h4dcYs8fc0GbxqezrCFtJx
c3C0QfwZGUwefBe5JYuOZV8sRvf+IYNcytv3Uw4dV9ufvrqhUQYhqZ9HPcvo
mHGB96OJthzKtzHvOzfSkfO7Fr1KIIfAGT3ZSSo66tmue/I6XwF75nonJkYx
UEoU6XUUKyD00ezH7BgGNrz/GHjrsgI+16pSLsQxcHfJhf6UOgUIMvXnP0hg
YJ2RQsbtVUCzrJbhcpKBIYSAvttwGLTuT64vKGfg9aGHLrKcYVC5/XUn8S0D
U1uNj0gKh2G8h+gJe8/AoOKYprqKYeBd3+r+s5yBNN4cH0HtMHxY4zVuP8rA
gOfhAbbdwyDsUgUZaTFR08KIiTYYgaPPhk4UcJm4psiz7INoBG47+buWhDPx
ZIdkMO3iCFwXmp2PiGLiw9EQo9nlI7AGXhU58pnovfpw5oraEdCtXO3Ql8BE
T3l1fFrPCGzfGHEvVshEdydrfwNTEvbqXEnurWHiYV51htiKhIj9x78xGpjY
cGJVi4s9CRaRHUMuTUxc0bt92XYPEuRxVWl3O5m47GiuhXgHCckW7RP6r5m4
pJ1QLa8gYcjcLypGh4X8DzkOjypJyHa5Fmulx8Ibc62ieHdIiDdhiIfmsNA+
Gl+ntJMQnvTvqfR5LLTVS+zslJPgP2Fj7ufKQqtgRWHwYiWs+zJ3uk00C3el
J/SSy5RwLGlMr/gAC0srWfopoISkll+9FiaykEuzPFW+UQlOJ1I/RmWw0Kwi
+AB5QAnqyIOB9SUsNKQe+yTfVULfjqUZ0wZYmH+uKUzepATOoceVue9YaORc
dSSgQwnd21qk7sNTPTGvan6fEnLy8+71alhoTN9pJtEowajm6mO+CYEXKgJX
uNIpkAyWkFJLAk3W+AaW61DwxnJsIHURgaaZi04nmFIww7/pua0HgWaGX1UW
HhSUHTW9KdhF4J/1ct0zPhS8bFipF7qfQHPegJ1qPQW32KfP7Y8n0KKkJawz
lIKUuBvavkICi71qjjhFUlDgSEpN8gjkSsV5hbEUtLoL2R6lBM6zE3bFpVJQ
6r7o74x6Aku7jsn6BRS8P6wgGx8QaBkbR/cRUeDqPFa75xmBVrVBK4zLKIiZ
7FrlRRJYvtUvMP0aBcu9JaqCcQKtNW58ZTUF2w+dO3aNw0Yb4Fa03qeAbn1F
LLBjo/itfvOiLgpq2nj9DSunfDqrP7ebAv3ITOPkTVPeRq2ivaIgy9XWJ2gP
G+d3Duvuk1JAOurcnpPCxsv7Xtl1KylYT/9uHlrIxgUzn/rA16m9S30T/m1T
/lZb2JXJqb8XOUtCfpiG/wF3pXn6
     "]]}},
  AspectRatio->2,
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{0, Pi}, {0, 2 Pi}}, {{0, 3.141592653589793}, {
     0, 6.283185307179586}}],
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.452082729609375*^9, 3.452082741640625*^9}, {
   3.452082822609375*^9, 3.452082834484375*^9}, {3.452082883421875*^9, 
   3.45208290271875*^9}, 3.452082948453125*^9, {3.4520839148125*^9, 
   3.45208393765625*^9}, 3.452083972828125*^9, {3.452084028203125*^9, 
   3.452084065609375*^9}, {3.45208411359375*^9, 3.452084177140625*^9}, {
   3.45208422853125*^9, 3.45208423359375*^9}, {3.452084265203125*^9, 
   3.452084276*^9}, {3.452084319484375*^9, 3.45208434303125*^9}, 
   3.4520843733125*^9, {3.45208440759375*^9, 3.45208442446875*^9}, {
   3.45208445671875*^9, 3.45208446196875*^9}, 3.45208455590625*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4520538230625*^9, 3.45205387103125*^9}, 
   3.452081613328125*^9, 3.45208264365625*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SphericalPlot3D", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Opacity", "[", "0.4", "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"f1", "[", "\[Theta]", "]"}], "]"}], 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"f1", "[", "\[Theta]", "]"}], "]"}], 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"f2", "[", "\[Theta]", "]"}], "]"}], 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"f2", "[", "\[Theta]", "]"}], "]"}], 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.452053736671875*^9, 3.452053761359375*^9}, {
   3.45205380878125*^9, 3.452053811109375*^9}, {3.45208163340625*^9, 
   3.4520816525625*^9}, {3.4520817740625*^9, 3.452081779921875*^9}, {
   3.452081893453125*^9, 3.452081971375*^9}, {3.452082002734375*^9, 
   3.452082015015625*^9}, {3.452082051703125*^9, 3.452082068359375*^9}, 
   3.45208264365625*^9}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxlW3lcT9n/zja+Q3Zi7EIyyE5UnxsjkaxZk2Wi3RLGFopKUcoIE0pkj4xs
Zf0cKvsypbIPQxJGtqxtfvd2nveZ+7m/+WO8Oq93z/v9POec57zvubdWrrNH
uVU0MjL6IP+vkvxvwtWofcOaR+qKD47o8m68tU2z78p/b6UK84/Nj1pyXar9
Mf/nrJt+ui7+k9/EdHsrLXRe8eJc+gOpa8bh38+bhunOt54ffCb7tXQuanKj
+MJc6UP6rUWOl6J0lVJ/ckir/FLyfddro/Kvxeu9o9qvidb1edfp1HY5Lm/H
qRPK7/UavtqamcboZkz3qaXg/ji004+xch4f3SbvMpetOseoZ9t+l+uYX8Lr
an9DqTdOV9WlfnezPeusqyF+BuLteTx7DvzewPfm+Gwu6umCenrzelg66v+M
+o14/SwYfG3AV8/5srbQpxv0seD6sJINAxMUPd/lfVPrya58bn1fbxqus65U
eVKqqZ+OdO7gt3uWX8IV6XFYycvpKSck0vkvk69H0irfk1xS3Cufa3RZIp3H
euZ5ZXx7Ig3ydvlkPSJTIp3dbxW9Xhb2XJr8+c2he8dzJNLZZ2dZp4xvLyX7
TQMz02U80vla04Feh5q8lo4N910dUveBRDpnb+s8QsnTYkz0+fNyHOl8HfHH
EU86zwD+IOCTzp6oZwrqIZ2dUf8Q1E863wdfD/AlnR2hTxn0IZ1rF14o19O7
6na1nmxw25WXhlwK1O2d6by5/ZpQobOR6c06lqnnpfkmH3tdHnBR6Ny2X9hV
K7kOx8Jp9kqdpLPPoyjXJk/uSvMKRzyO7fZY6Bw622RijPxzs3Df1XPX5gqd
7dycKyi8MvKmBfrLvEln8x31hq6blysdP3Spa+fpL4TOrg6lE5Xfq9x69D8K
LuncHvHJiCedBwI/E/ik82rU0xz1kM6+qH8x6iedLcB3HPiSzg2hzzroQzpb
6j6V6+lf9lytJ7tvuSr5r5veut9DsoLKXCKEzl+O/Ny3sXOCVDhsxPvz6deE
zjceuH6bKs/f2Kq1bqyU1w/pfKbBjtm95LyDk+c2iJJ5k85jzi9scEGuo5NF
YKmFrAPpfHh8y2UL5fWwZcSEfGU9ks4rPrra6eV8X+ouXzDZ+43Q+f7++lcj
5X/rtCpprfgE6RyI+K+IJ50JPwb4pPM41NMZ9ZDO51D/UNRPOt8DX1fwFTof
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
a4b47BH8ahD3E5G3EnygFvcBkfdP+MZd7hsiL8XXRjzlLQb+TEN8Vg/+eZP7
p8hbB753m/ueyOsGn9zNfVLkpfg7iKe8OuB/McRnreDnt7mfC/y28P+d3P8F
vini7yCe8LN1cd0ahCZK8RuM5+YnL5aK8/umNy18K/WV+Hip4Ti7pTMYZxRv
ifgJGw3G2X6WG6f40bzaJXOXJlwR370YhfL3psnRv1RfsXyzns7xnWW55e9Z
P4zW+8bPjNXTOb4nmb+XrXPyyYasgq16Ose143SOH0De35BXfOeswafz3eP5
Vb+sgghd5lejQXZFzuI58SBwBnEcSVt/E5cD1eT6ddr6F8bXV/B1VP+t/QPr
5EwtkEwrNJQslpyS6j+uOvvpsrvSlXNvgsdGvpFa59bt9THstPz7O1slpmQK
Xma1Oyu8dMS3eOLktosnvJW8d9kfq9lf7mMGbbx7x/eC1NiyRsmf7K1kc9rH
tkvcGSmhcP3ZX44n/j8c0kcbv4nHMy3+TI7PtLxIN2398bx+RroNhm6kv1aH
ulwHVgF6NoWe1F+N+dBtDsv+V8qq00TfzuSk9KSty3Xp0yOWAZwVHIeRnt9Q
/01ePyN9GoHvTs6XEd9LqH8lr59R/VRPCtYn1bPdsUX/IbKuCfZ/NmhXZaKO
1nkfjL+IGm4ij+tpX4xYu2yJsq4eVNqhrCvhcxQ/yBBHGoX4JTxePNe7YX12
/WakxpGonsHrDfKyQX/e77ktJluy3cgSgzKOSJ2v/XRYmb/8nFMJyt+Z+Jsd
atnCOUH8/cL30R19cqzTpUmPZr33dkqUxr+5OazfmrfS9M4bu54IyZCM3mSX
XZx4VeCMs/t1lvJ3FLuMRtbok3pe4BwtWO/rMUovucVVv+Qp/0s4hz2WWOjH
pUp9bJYd9KyeJXBufxi+xzXlhLQ6oE+R8n0Z4bQf1naKh1xHH892p5W6COfG
K8fMJnnz9B3SGy8bIu8rwtl+PaX8e+DJC/n3U4TzcVpu+Pwe69kfX9w8xw67
IHC+trAfysalsjXHZnmq67HBd7PVzTtuVdfTc+fBoGUZyczpf/mpYe1SBU7z
7pkbZH3Y7MOfqqj1ob9X6jFzl5ulSh/rn+8VyL/PRgYXFy3NSBY4zgPtJsjz
xXpMqGu7QjVfN/Gd8IP7Yx82Uc2Xw57Zc2Q+rP3qztXm9Vj//3AsOA7T4mRx
HPF94ztX/+2yviw14MVaT6dERjgtwGsW5yVw6O+eunNeAifwVO5oeb7Zh+zT
T+X5FzhF0Dmc6yxwbKFzNa6zwHl56MA5L7mOlS45K5W6CGfi7b23VPMucC78
Et5RNe8Cp9XBJat8ZV0ynRb7KToRzg6sQxu+DgVOGtZhJF+HAqfe9MFzlXnq
MORao3B53ghnMvZFXb4vBM4w7Iskvi8Ezq95H6OVdfP63BRjf3kdEc4o+FuH
uuX+xnK5v0laX6JzQetj5PNa3yPf1vok+e1o5L0FX6W84+AbQ+EbHTkvVu02
9404+AZ9l1h/DPcNP/jGOM6LeYDvPc5XrE9f6FYPfkL486DbafgJ4fsB5z1w
CP8WfCYYPkPjrTFfZny+RF495n0g/Ifyfsa8J8B/KK8VcCyBQ/gD4UvD4Es0
Ph7rLYOvN5H3AfyqL/yK8qbCrwLhV+LvHYDzHDiE/7/p3McOwMdo/DH2Syjf
LyJvlZZ8322Gv1FeF+y7jvA38X0pcGKBQ/hD4Xtu8D0aX4H9Xsj3u8j7M3wj
EH5Iec/DNxzgh5R3O3Dq5nAcwh8Gn/SET9I4+dVl7lciryd8rz/8k/J+gO8V
wz8pb5VpHCcPOIQ/Fb5qDV+l8SEYb8bHmTavNfxWm7cQfkt5Cb8rcAif6nkM
H6ZxG+gwjOsg8naAzsvhz5Q3zVBnkXc4cNyBQ/g7oH8drr8Y7415H8XnXeSt
ariuRN6p9Pe88HPKO8xw/Qj8H5L4etsCn6fxBtMNzmuR1wv+j30k8ubD/7GP
RF5zw/0i8Hsa7i8xXhv72prva5H3EHzDAecF5X0K3/gT5wXl7QSckcAh/J/h
JzY4R2h8N3zsN+5jIq8T/LkjzgXqe73gn21w7lA93vDPizh3qJ504K8HPuX9
Db5a6Tw/j4S/wf+ncP8X51oe+sZ93P/FuVaCvnEx939R/xjgzAAO1fk/nCOX
gUN11sE58gdwqJ5j9i5TFL87YBNdY5Gqz/FO5X46aa+v7K9BOqqzX9D1yuYx
mZL7pPozXM9uk7zeRq/PYW+k+Fn5dooPRhUlPpTXr+ivYkbtnfHG6KY01Swv
zfZ+qogvrB2y+oLsX3HdZ19U9Kb413urzJHkuE75G/q9lX+P4nedPP3jctl3
En8v8lZ4U/zdXX5lY+Q6WPceTZS6KJ598VwQKOuSW7TWXh1vYlHH39wzhX0d
/Iex2ckMET9nhFugMt8pXbtPU9fTPHeWnXfNKyz3xU/5XjWviHivb5/ClPU6
dsCTs3oV372N40xlXKYP7RvYzjNFxJ/HvuptMvOB0chQa4rvO/xMPbluNr5P
pdbOZ7cxivcGvhPHF+tkl3FMkawna55V9ETWScTPQ/3JvH4RP7D07ShZdzav
S/xR5fco/i/o85TrI+IDr4fbT5brOOU1wFipi+LDoP9Brr+Ir/HPtBAzmafP
q92WCm+Kf4b53cXnV8T3LEhfpehY5WHaTkVXio/B+tnH14+Id14U+bmtPE89
svIXt5fnjeL/DzChlYQ=
    "], {{
      {Opacity[0.4], EdgeForm[None], 
       GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
A6t8XlGnyGcWaN6X8k4amyVxHFTl+vVakWsr79xZZwdXuZb9o8i1DRueAfE8
B5u3i1yjebbDsz7eWbOPcLUi39F30E+eWfFe/v0i11Y0ay7v7jvpP+/629km
ayf9Mk74uJex8IyI9nkWxN423vkx9/N/H53tl3fmXdR7q2vrLf8Hsro2+1rP
/4Dw3py1lWNXbdB8V1uH99eG/x/h/T5rKHsS2nvtqOumDc+a2DdZ2zPZXXts
0Kwh/F8J78TXLPLYQxvs0bSBj/voD+/We2qPP91sh7peK7XTy3N5rsW7eN6/
c636Orbt1MO8p/rpf3s199rbXM8q94/SPn3THvfdQV7TDmrW6ne0Zf8m9+DB
XlP2YxzidefeOdR7jGs7wPuK+7G/9yfXmnv3JO817kueV3ayzaO9f7mnf7Id
7lGe8XF9u3q92DPA/leY7f0q92s2LJLFhlr/bpV+s/f0PY+NitwbMEz79/3u
KNsb6u/lXW1ohyPnwF9vaxd/f/LXkbbT2zHkGuHLn+/m5SM0/PNhHD+ocr/m
Rx7ZF3mM/mPzgb6wv5J7n9/AHp57rDar+rug/mPbYp/lPzyyV5F3u+y/3F+b
E7TnyHc1rjlRmyWezz5I9AjrT1bDHhz5DFN8oi37DetYj83ncfysyn17HNkD
yT5E3nuyJ5L1/VM19hz5rsYLp2nDe0P2/7EWf2F7Z3ruJ7b7XZSlVe7fWuaR
/VB/ruGe+2WV57PP7yuP7OnjuSz7/y7S5iztOfId7PBNlXvq2Hf2tefzmXde
7Le7xnhH6vPX1tMm+9N4P9TdNXy09t9W2e4YfefIvjNsOec2bc7VfqSx7Oj6
fJ42o2wTRmBvMHuYYV3ej7Cn7X5/C1d731LHd7U19gJtvnfs2Ge23CN7uHj3
wf4z1kHWw4vU49SHu4awTrA+fK89be5pPXMR6wBrA79r5iXWwnecZ1jnmIva
q991bmHNY87poH7PeZ41gDm/k20y57SxTea66xwHcpbvHAfGiv3f7CPfxON4
NWskeh2PV1lPvoX+0d8+Y8g8wN7rCba/iXpjjxOt76yfrGOTrMeW77hOtEEd
3/2hnuy55FiTrWc+IMdr6DyDZj5ZxxjYD7+Lbe6qz5Psi+v4g9frD8eF9uER
3uXAJ+RG5Ejkdswr5GnMLddaT5uF9ay/2E+1nr3Z7NMmx6l9xpep1lM3RXty
OPKhW7Rn/iF/28N5DM1c9Of/s1W5T7uf+iDbmea5XeyrZjtdm1vU1PMbedr7
fLr9klOS39yqZh4jl2N+W1PNnEZb7MOm/2HqIz3OUHNkb0ctP5upD9TP0mYN
fV7PvGeW9ug52jBnktcx7/GZPdP0ear6NI+z1XPU2E43FvqdbZvkWKfaZn/r
53ruhmpsmE/ItZiv2IfLftwLPN6jvlddO/deNTkKeQu50WmeU/t/NGzI29D3
2Q5zFDkP8+Em1u9qLkWuxRzLXmH2Ok/0+KD6Aj/j4zzrqeM4Tx/Osp0zbH/e
SjYP2c5Mrx1jtan+MGeyH5g9wOQd7FtmfzK50nz1ROOdr35U3c35nPyEuf1m
z5+uzWPqLdTYT9RmgusC5zK3r++1YG5/Un9q5z6pfkJNroZ+Sp/ZN/y4eroa
X7bVpra3md8CcyB27Dn+8zz1Ex4Xqp9V32M7z6oXqsnh0Iu030E9RN6HBZmT
WV/IOVkjDrGenGCc9awRnM9+4sedl8idyNWoY58qc9SL6lpfL6pfUGP/gudi
z3tr9iSz95j5j3mQzy/bFzawHszX0DkWDW+xn5ncr7beocmDOOc12/hI/bHH
19VvqLGFDXlnXBVZx3fkOPAu9UsK263SX5gaDuf/t2qc2tB2YM0hFjh2XW3Q
cDjHd6sVjIrm+x+Mh1iOsk249y3bxDeeDfLuuKk2cCfzPzwCn8A81H1o/bHq
4dUKfmUOP14Nx3L82HrYEJ48oFjBpsy3HJeoT9Ce70dYz3lwI1zFHAXnwXtw
Jkf4r8aN6FMsn2lf487hatiP+WGkbZ5uH5/YDusd6yPr4HDHAfZmboELz6xW
sCPz2DlqGJLj19aPUp9jYQyv8fcOz9XG9Vvra/zHb/NM/YRvx1oPE9aYjOvI
bxmmGVut4N37tUHDvRy/t36c+kLb/tJxeNk2YbyltokPr3jf8P3/APa2toE=

         "]]]}, {}, {}, {}}, {}},
    VertexNormals->CompressedData["
1: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
h/uHEOHzj2BfVXr2nRt4Tklfcw7OFbeMDU18UP2o0/cbmiMmBhDnhS8jvBDx
tXNHXTrsg4dWhNiDPZdikxHYW9D3G1eONm4G/3WN9kngP5u+36h7/qQf8nEx
a/KHfAqCXDHPD840WUD+QfNu10D+5+n7jfWiPI8A72n7hx8Arwh9v7GvxEkd
+FnVqBUB/PSvlMY8K39rfwr3G1sXHvD2/WcfZExR93ULNtb/rBPbkT/DM18y
dV/39MDhFb3Dzsw59H2d2iPqvm6NxWpS86Qv8xPd132m7+sUbeM31rRcY3LS
93U35lD3dalNTdv9BcOYgfR9nedb6r7ufQTjg7nKbSYffV+ncpa6r+P+jz8w
QzGSaUvf10lOUXntOJRN8IxHMod4qL5OX4e6r0t8kOIP9pMrqb5O2IO6r7sv
u+kt+Jei7+vOT1P3dZG/mVsgn1D6vm77O+q+Ts++WQLyN6Xv687FUvd1gtwu
DwDvZ7qvux5L3dclR2e19yB+0ui+jpsF93WM7p837/e8k8v/ex7U5C1iDuYS
x/jcWGS9IgjTq+EX3cv7CYMvZsMc6ByenuFelIn0e4b/j49zi03ndxISbz34
f6wqIq4fHtwWE9dJHKpyrW9IayMMNh/jV9vWRKgtbNoO4yccD/mds+wmfirJ
LvgpUkp4+XmOn+ZoI/RnrxRfsOErkaf2bVfhl1aiUqjuN4yLuR48eMbhBxEn
vezGqfY3xMhQl//+VbWE/3THfP0734ijj74Ps9a2Eyfk2EJgnF9HdcqMpZ/o
Ft1zOPdgOXFJR+3ls+Q84tT5W6fcm7qIy2mfW7yqOwjnMsUCGBc/zDIJ9iev
CR4C+3fOh0UzkvPID8XXT4I9+9v52H51ar4wjK/coqMG+cTGXguCfHIauZNQ
XNKkMH0e5OM+cHwQ8vnxSi8Rxiv6By4D3iv3TLgBb8COLnZzjjZyTs6kGOAd
PWwuB3inSuxmwzgn141c4FM7eNtc4POsg64S4o284G33HvhcO2uQG/hUzf6h
COMDFgoaMF/d0bUJm9B8/WhWvYzmi7wcck8HzvnCQm1vhdD+MDO/xenclo3m
L4gal81X/7Q8JYyVbuH5DWe9WHo/vpowbjdz/GX6hVi9VkIe5kvt0PKf4l71
xFpfCYmzFl1EKD/fJMzLDaeG7uqtn4jWh0VKwXI9xH8/468C/6bf19jNu91I
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
     "]], {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1: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
fNSlqcvmNPR/8zXuGw==
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], Line3DBox[CompressedData["
1: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
qSZvFw3LMVdmr1rQ4f+3m6/G
      "]]}}},
  Axes->True,
  ImageSize->{360., 402.10440305041647`},
  Method->{},
  PlotRange->{{-1., 0.9999999999998993}, {-0.9999999999999748, 
   0.9999999999999748}, {-0.9999999999999748, 0.9999999999999748}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{0.1491623856127726, -2.5968069153228597`, 2.1643346384627526`},
  ViewVertical->{0.15413825560192118`, 0.06062508094519742, 
   0.9861876077706444}]], "Output",
 CellChangeTimes->{{3.452082734328125*^9, 3.45208275296875*^9}, 
   3.452082836765625*^9, {3.452082888109375*^9, 3.452082904859375*^9}, 
   3.45208295040625*^9, {3.452083917609375*^9, 3.45208394171875*^9}, 
   3.452083975390625*^9, 3.45208403040625*^9, 3.45208406803125*^9, {
   3.452084115703125*^9, 3.45208418534375*^9}, 3.452084237375*^9, 
   3.452084278171875*^9, {3.45208432915625*^9, 3.452084345125*^9}, 
   3.452084375703125*^9, 3.45208442690625*^9, 3.45208446425*^9, 
   3.45208455825*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"f1", "[", "\[Theta]", "]"}], "]"}], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"f1", "[", "\[Theta]", "]"}], "]"}], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"f2", "[", "\[Theta]", "]"}], "]"}], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"f2", "[", "\[Theta]", "]"}], "]"}], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.452082972265625*^9, 3.452083012796875*^9}, {
  3.452084292015625*^9, 3.452084298265625*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
GoeSUcTfls0aZ+Px1cUmc7N7+D/XkWcr
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-0.8414138254089416, 0.}, {-0.46106267708633486`, 
   0.46106267708633497`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.45208301409375*^9, 3.452083995203125*^9, 3.4520840783125*^9, 
   3.45208419253125*^9, 3.45208424675*^9, {3.452084287015625*^9, 
   3.45208429890625*^9}, 3.4520843499375*^9, 3.452084380578125*^9, 
   3.45208443046875*^9, 3.452084581875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ContourPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "-", "\[Phi]1"}], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "\[Equal]", 
        RowBox[{"Cos", "[", "\[Alpha]1", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Phi]", "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "\[Equal]", 
        RowBox[{"Cos", "[", "\[Alpha]2", "]"}]}]}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"4", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "\[Pi]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotPoints", "\[Rule]", "60"}], ",", " ", 
     RowBox[{"Contours", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"ContourShading", "\[Rule]", "None"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "2"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]1", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]2", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]1", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.45208303775*^9, 3.452083093515625*^9}, {
   3.452083371953125*^9, 3.452083401703125*^9}, {3.452083475109375*^9, 
   3.452083586953125*^9}, 3.452083661984375*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]1$$ = 
    0.669159235214626, $CellContext`\[Alpha]2$$ = 
    0.5937610115284709, $CellContext`\[Phi]1$$ = 1.5016812884159212`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Alpha]1$$], 0, Rational[1, 2] Pi}, {
      Hold[$CellContext`\[Alpha]2$$], 0, Rational[1, 2] Pi}, {
      Hold[$CellContext`\[Phi]1$$], 0, Pi}}, Typeset`size$$ = {
    217., {214., 218.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]1$91$$ = 
    0, $CellContext`\[Alpha]2$92$$ = 0, $CellContext`\[Phi]1$93$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]1$$ = 0, $CellContext`\[Alpha]2$$ = 
        0, $CellContext`\[Phi]1$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]1$$, $CellContext`\[Alpha]1$91$$, 0], 
        Hold[$CellContext`\[Alpha]2$$, $CellContext`\[Alpha]2$92$$, 0], 
        Hold[$CellContext`\[Phi]1$$, $CellContext`\[Phi]1$93$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ContourPlot[{
        Cos[$CellContext`\[Phi] - $CellContext`\[Phi]1$$] 
          Sin[$CellContext`\[Theta]] == Cos[$CellContext`\[Alpha]1$$], 
         Cos[$CellContext`\[Phi]] Sin[$CellContext`\[Theta]] == 
         Cos[$CellContext`\[Alpha]2$$]}, {$CellContext`\[Theta], 0, 4 
         Pi}, {$CellContext`\[Phi], 0, 2 Pi}, 
        PlotRange -> {{0, Pi}, {0, 2 Pi}}, PlotPoints -> 60, Contours -> {0}, 
        ContourShading -> None, AspectRatio -> 2], 
      "Specifications" :> {{$CellContext`\[Alpha]1$$, 0, Rational[1, 2] 
         Pi}, {$CellContext`\[Alpha]2$$, 0, Rational[1, 2] 
         Pi}, {$CellContext`\[Phi]1$$, 0, Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{264., {286., 291.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.4520830954375*^9, 3.45208338421875*^9, {3.452083506125*^9, 
   3.452083522953125*^9}, {3.452083561546875*^9, 3.4520835875625*^9}, 
   3.452083665484375*^9, 3.452131112875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ContourPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "-", "\[Phi]1"}], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "\[Equal]", 
        RowBox[{"Cos", "[", "\[Alpha]1", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Phi]", "]"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "\[Equal]", 
        RowBox[{"Cos", "[", "\[Alpha]2", "]"}]}]}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"4", "Pi"}]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotPoints", "\[Rule]", "60"}], ",", " ", 
     RowBox[{"Contours", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"ContourShading", "\[Rule]", "None"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.5"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]1", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]2", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]1", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4521311406875*^9, 3.45213115134375*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]1$$ = 
    0.7414158662471912, $CellContext`\[Alpha]2$$ = 
    0.40212385965949354`, $CellContext`\[Phi]1$$ = 0.9173450548482195, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Alpha]1$$], 0, Rational[1, 2] Pi}, {
      Hold[$CellContext`\[Alpha]2$$], 0, Rational[1, 2] Pi}, {
      Hold[$CellContext`\[Phi]1$$], 0, Pi}}, Typeset`size$$ = {
    360., {92., 96.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]1$834$$ = 
    0, $CellContext`\[Alpha]2$835$$ = 0, $CellContext`\[Phi]1$836$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]1$$ = 0, $CellContext`\[Alpha]2$$ = 
        0, $CellContext`\[Phi]1$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]1$$, $CellContext`\[Alpha]1$834$$, 0], 
        Hold[$CellContext`\[Alpha]2$$, $CellContext`\[Alpha]2$835$$, 0], 
        Hold[$CellContext`\[Phi]1$$, $CellContext`\[Phi]1$836$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ContourPlot[{
        Cos[$CellContext`\[Phi] - $CellContext`\[Phi]1$$] 
          Sin[$CellContext`\[Theta]] == Cos[$CellContext`\[Alpha]1$$], 
         Cos[$CellContext`\[Phi]] Sin[$CellContext`\[Theta]] == 
         Cos[$CellContext`\[Alpha]2$$]}, {$CellContext`\[Phi], 0, 2 
         Pi}, {$CellContext`\[Theta], 0, 4 Pi}, 
        PlotRange -> {{0, 2 Pi}, {0, Pi}}, PlotPoints -> 60, Contours -> {0}, 
        ContourShading -> None, AspectRatio -> 0.5], 
      "Specifications" :> {{$CellContext`\[Alpha]1$$, 0, Rational[1, 2] 
         Pi}, {$CellContext`\[Alpha]2$$, 0, Rational[1, 2] 
         Pi}, {$CellContext`\[Phi]1$$, 0, Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {164., 169.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.452131152421875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "-", "\[Phi]1"}], "]"}], "\[Equal]", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", "\[Alpha]1", "]"}], 
       RowBox[{"Cos", "[", "\[Alpha]2", "]"}]], 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ",", "\[Phi]"}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.45208361309375*^9, 3.452083619875*^9}, {
  3.452083704421875*^9, 3.452083782046875*^9}, {3.452083860203125*^9, 
  3.452083882171875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Phi]", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"ArcCos", "[", 
       FractionBox[
        RowBox[{
         SqrtBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Alpha]1", "]"}], " ", 
              RowBox[{"Sec", "[", "\[Alpha]2", "]"}]}]}], ")"}], "2"]], " ", 
         RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Alpha]1", "]"}], " ", 
            RowBox[{"Sec", "[", "\[Alpha]2", "]"}]}]}], ")"}], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Phi]1", "]"}], "2"], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", "\[Alpha]1", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
            RowBox[{"Sec", "[", "\[Alpha]2", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Alpha]1", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sec", "[", "\[Alpha]2", "]"}], "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Phi]1", "]"}], "2"]}]]}]], "]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", "\[Rule]", 
     RowBox[{"ArcCos", "[", 
      FractionBox[
       RowBox[{
        SqrtBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]1", "]"}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Alpha]1", "]"}], " ", 
             RowBox[{"Sec", "[", "\[Alpha]2", "]"}]}]}], ")"}], "2"]], " ", 
        RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Alpha]1", "]"}], " ", 
           RowBox[{"Sec", "[", "\[Alpha]2", "]"}]}]}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], "2"], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", "\[Alpha]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sec", "[", "\[Alpha]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Alpha]1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sec", "[", "\[Alpha]2", "]"}], "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Phi]1", "]"}], "2"]}]]}]], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"ArcCos", "[", 
       FractionBox[
        RowBox[{
         SqrtBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]1", "]"}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Alpha]1", "]"}], " ", 
              RowBox[{"Sec", "[", "\[Alpha]2", "]"}]}]}], ")"}], "2"]], " ", 
         RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Alpha]1", "]"}], " ", 
            RowBox[{"Sec", "[", "\[Alpha]2", "]"}]}]}], ")"}], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Phi]1", "]"}], "2"], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", "\[Alpha]1", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
            RowBox[{"Sec", "[", "\[Alpha]2", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Alpha]1", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sec", "[", "\[Alpha]2", "]"}], "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Phi]1", "]"}], "2"]}]]}]], "]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", "\[Rule]", 
     RowBox[{"ArcCos", "[", 
      FractionBox[
       RowBox[{
        SqrtBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]1", "]"}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Alpha]1", "]"}], " ", 
             RowBox[{"Sec", "[", "\[Alpha]2", "]"}]}]}], ")"}], "2"]], " ", 
        RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Phi]1", "]"}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Alpha]1", "]"}], " ", 
           RowBox[{"Sec", "[", "\[Alpha]2", "]"}]}]}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], "2"], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", "\[Alpha]1", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
           RowBox[{"Sec", "[", "\[Alpha]2", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Alpha]1", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sec", "[", "\[Alpha]2", "]"}], "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Phi]1", "]"}], "2"]}]]}]], "]"}]}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.4520836213125*^9, {3.452083706734375*^9, 3.4520837209375*^9}, 
   3.45208378290625*^9, {3.45208386453125*^9, 3.452083883375*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{971, 659},
WindowMargins->{{215, Automatic}, {Automatic, 26}},
Magnification->1.,
FrontEndVersion->"7.0 for Microsoft Windows (32-bit) (February 18, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 128, 2, 83, "Title"],
Cell[698, 26, 413, 12, 52, "Input"],
Cell[CellGroupData[{
Cell[1136, 42, 832, 23, 72, "Input"],
Cell[1971, 67, 464, 13, 30, "Output"],
Cell[2438, 82, 459, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2934, 100, 3401, 84, 112, "Input"],
Cell[6338, 186, 4659, 81, 432, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11034, 272, 188, 4, 71, "Section"],
Cell[CellGroupData[{
Cell[11247, 280, 875, 22, 31, "Input"],
Cell[12125, 304, 198, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12360, 312, 901, 23, 45, "Input"],
Cell[13264, 337, 403, 10, 30, "Output"]
}, Open  ]],
Cell[13682, 350, 594, 15, 52, "Input"],
Cell[CellGroupData[{
Cell[14301, 369, 652, 17, 31, "Input"],
Cell[14956, 388, 543, 15, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15536, 408, 733, 19, 31, "Input"],
Cell[16272, 429, 4963, 139, 214, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21272, 573, 3626, 95, 139, "Input"],
Cell[24901, 670, 3506, 66, 390, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28444, 741, 1369, 38, 58, "Input"],
Cell[29816, 781, 1178, 34, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31031, 820, 92, 1, 36, "Subsection"],
Cell[31126, 823, 1931, 47, 116, "Input"],
Cell[CellGroupData[{
Cell[33082, 874, 1476, 40, 87, "Input"],
Cell[34561, 916, 79, 1, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34701, 924, 107, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[34833, 929, 1916, 44, 92, "Input"],
Cell[36752, 975, 4749, 84, 447, "Output"]
}, Open  ]],
Cell[41516, 1062, 136, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[41677, 1068, 2022, 50, 152, "Input"],
Cell[43702, 1120, 47057, 783, 417, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90796, 1908, 1139, 31, 92, "Input"],
Cell[91938, 1941, 14142, 241, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106117, 2187, 1899, 48, 132, "Input"],
Cell[108019, 2237, 2771, 52, 594, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110827, 2294, 1780, 46, 132, "Input"],
Cell[112610, 2342, 2621, 49, 350, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115268, 2396, 555, 15, 49, "Input"],
Cell[115826, 2413, 5793, 157, 252, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
